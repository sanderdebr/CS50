{"version":3,"sources":["webpack://Terminal/webpack/universalModuleDefinition","webpack://Terminal/webpack/bootstrap","webpack://Terminal/./src/common/services/Services.ts","webpack://Terminal/./src/common/Lifecycle.ts","webpack://Terminal/./src/common/EventEmitter.ts","webpack://Terminal/./src/common/buffer/Constants.ts","webpack://Terminal/./src/common/buffer/CellData.ts","webpack://Terminal/./src/browser/services/Services.ts","webpack://Terminal/./src/common/buffer/AttributeData.ts","webpack://Terminal/./src/browser/Lifecycle.ts","webpack://Terminal/./src/common/input/TextDecoder.ts","webpack://Terminal/./src/browser/renderer/atlas/Constants.ts","webpack://Terminal/./src/common/Platform.ts","webpack://Terminal/./src/common/data/EscapeSequences.ts","webpack://Terminal/./src/browser/renderer/BaseRenderLayer.ts","webpack://Terminal/./src/common/services/ServiceRegistry.ts","webpack://Terminal/./src/common/TypedArrayUtils.ts","webpack://Terminal/./src/common/buffer/BufferLine.ts","webpack://Terminal/./src/browser/LocalizableStrings.ts","webpack://Terminal/./src/common/data/Charsets.ts","webpack://Terminal/./src/common/CharWidth.ts","webpack://Terminal/./src/common/parser/Params.ts","webpack://Terminal/./src/common/parser/OscParser.ts","webpack://Terminal/./src/common/parser/Constants.ts","webpack://Terminal/./src/common/parser/DcsParser.ts","webpack://Terminal/./src/browser/renderer/atlas/CharAtlasCache.ts","webpack://Terminal/./src/browser/renderer/atlas/CharAtlasUtils.ts","webpack://Terminal/./src/browser/ColorManager.ts","webpack://Terminal/./src/browser/renderer/RendererUtils.ts","webpack://Terminal/./src/browser/renderer/CharacterJoinerRegistry.ts","webpack://Terminal/./src/browser/input/Mouse.ts","webpack://Terminal/./src/browser/RenderDebouncer.ts","webpack://Terminal/./src/browser/ScreenDprMonitor.ts","webpack://Terminal/./src/common/Clone.ts","webpack://Terminal/./src/public/Terminal.ts","webpack://Terminal/./src/Terminal.ts","webpack://Terminal/./src/browser/input/CompositionHelper.ts","webpack://Terminal/./src/browser/Viewport.ts","webpack://Terminal/./src/browser/Clipboard.ts","webpack://Terminal/./src/InputHandler.ts","webpack://Terminal/./src/common/parser/EscapeSequenceParser.ts","webpack://Terminal/./src/renderer/Renderer.ts","webpack://Terminal/./src/browser/renderer/TextRenderLayer.ts","webpack://Terminal/./src/browser/renderer/GridCache.ts","webpack://Terminal/./src/browser/renderer/atlas/DynamicCharAtlas.ts","webpack://Terminal/./src/browser/renderer/atlas/BaseCharAtlas.ts","webpack://Terminal/./src/browser/renderer/atlas/LRUMap.ts","webpack://Terminal/./src/browser/renderer/SelectionRenderLayer.ts","webpack://Terminal/./src/renderer/CursorRenderLayer.ts","webpack://Terminal/./src/browser/renderer/LinkRenderLayer.ts","webpack://Terminal/./src/browser/Linkifier.ts","webpack://Terminal/./src/browser/services/SelectionService.ts","webpack://Terminal/./src/browser/selection/SelectionModel.ts","webpack://Terminal/./src/browser/input/MoveToCell.ts","webpack://Terminal/./src/browser/services/SoundService.ts","webpack://Terminal/./src/browser/MouseZoneManager.ts","webpack://Terminal/./src/AccessibilityManager.ts","webpack://Terminal/./src/renderer/dom/DomRenderer.ts","webpack://Terminal/./src/browser/renderer/dom/DomRendererRowFactory.ts","webpack://Terminal/./src/common/input/Keyboard.ts","webpack://Terminal/./src/WindowsMode.ts","webpack://Terminal/./src/browser/services/RenderService.ts","webpack://Terminal/./src/common/services/OptionsService.ts","webpack://Terminal/./src/browser/services/CharSizeService.ts","webpack://Terminal/./src/common/services/BufferService.ts","webpack://Terminal/./src/common/buffer/BufferSet.ts","webpack://Terminal/./src/common/buffer/Buffer.ts","webpack://Terminal/./src/common/CircularList.ts","webpack://Terminal/./src/common/buffer/BufferReflow.ts","webpack://Terminal/./src/common/buffer/Marker.ts","webpack://Terminal/./src/browser/services/MouseService.ts","webpack://Terminal/./src/common/services/CoreService.ts","webpack://Terminal/./src/common/services/LogService.ts","webpack://Terminal/./src/common/services/DirtyRowService.ts","webpack://Terminal/./src/common/services/InstantiationService.ts","webpack://Terminal/./src/public/AddonManager.ts"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","ServiceRegistry_1","IBufferService","createDecorator","ICoreService","IDirtyRowService","IInstantiationService","ILogService","IOptionsService","Disposable","this","_disposables","_isDisposed","dispose","forEach","length","register","push","unregister","index","indexOf","splice","EventEmitter","_listeners","_this","_event","listener","fire","data","queue","undefined","DEFAULT_COLOR","DEFAULT_ATTR","CHAR_DATA_ATTR_INDEX","CHAR_DATA_CHAR_INDEX","CHAR_DATA_WIDTH_INDEX","CHAR_DATA_CODE_INDEX","NULL_CELL_CHAR","NULL_CELL_WIDTH","NULL_CELL_CODE","WHITESPACE_CELL_CHAR","WHITESPACE_CELL_WIDTH","WHITESPACE_CELL_CODE","TextDecoder_1","Constants_1","CellData","_super","apply","arguments","content","fg","bg","combinedData","__extends","fromCharData","obj","setFromCharData","isCombined","getWidth","getChars","stringFromCodePoint","getCode","charCodeAt","combined","code","second","getAsCharData","AttributeData","ICharSizeService","IMouseService","IRenderService","ISelectionService","ISoundService","toColorRGB","fromColorRGB","clone","newObj","isInverse","isBold","isUnderline","isBlink","isInvisible","isItalic","isDim","getFgColorMode","getBgColorMode","isFgRGB","isBgRGB","isFgPalette","isBgPalette","isFgDefault","isBgDefault","getFgColor","getBgColor","addDisposableDomListener","node","type","handler","useCapture","addEventListener","removeEventListener","codePoint","String","fromCharCode","utf32ToString","start","end","result","codepoint","StringToUtf32","_interim","clear","decode","input","target","size","startPos","Utf8ToUtf32","interim","Uint8Array","fill","byte1","byte2","byte3","byte4","discardInterim","cp","pos","tmp","missing","fourStop","INVERTED_DEFAULT_COLOR","DIM_OPACITY","CHAR_ATLAS_CELL_SPACING","isNode","navigator","userAgent","platform","contains","arr","el","isFirefox","isSafari","test","isMac","isIpad","isIphone","isWindows","isLinux","C0","NUL","SOH","STX","ETX","EOT","ENQ","ACK","BEL","BS","HT","LF","VT","FF","CR","SO","SI","DLE","DC1","DC2","DC3","DC4","NAK","SYN","ETB","CAN","EM","SUB","ESC","FS","GS","RS","US","SP","DEL","C1","PAD","HOP","BPH","NBH","IND","NEL","SSA","ESA","HTS","HTJ","VTS","PLD","PLU","RI","SS2","SS3","DCS","PU1","PU2","STS","CCH","MW","SPA","EPA","SOS","SGCI","SCI","CSI","ST","OSC","PM","APC","Constants_2","CharAtlasCache_1","AttributeData_1","RendererUtils_1","BaseRenderLayer","_container","id","zIndex","_alpha","_colors","_rendererId","_bufferService","_optionsService","_scaledCharWidth","_scaledCharHeight","_scaledCellWidth","_scaledCellHeight","_scaledCharLeft","_scaledCharTop","_currentGlyphIdentifier","chars","bold","dim","italic","_canvas","document","createElement","classList","add","style","toString","_initCanvas","appendChild","removeChild","_charAtlas","_ctx","throwIfFalsy","getContext","alpha","_clearAll","onOptionsChanged","onBlur","onFocus","onCursorMove","onGridChanged","startRow","endRow","onSelectionChanged","columnSelectMode","setColors","colorSet","_refreshCharAtlas","_setTransparency","oldCanvas","cloneNode","replaceChild","rows","acquireCharAtlas","options","warmUp","resize","scaledCellWidth","scaledCellHeight","scaledCharWidth","scaledCharHeight","scaledCharLeft","scaledCharTop","width","scaledCanvasWidth","height","scaledCanvasHeight","canvasWidth","canvasHeight","_fillCells","x","y","fillRect","_fillBottomLineAtCells","devicePixelRatio","_fillLeftLineAtCell","_strokeRectAtCell","lineWidth","strokeRect","clearRect","fillStyle","background","css","_clearCells","_fillCharTrueColor","cell","font","_getFont","textBaseline","_clipRow","fillText","_drawChars","_drawUncachedChars","drawBoldTextInBrightColors","draw","save","join","ansi","foreground","globalAlpha","restore","beginPath","rect","cols","clip","fontWeightBold","fontWeight","fontSize","fontFamily","DI_TARGET","DI_DEPENDENCIES","storeServiceDependency","serviceRegistry","Map","getServiceDependencies","ctor","has","decorator","Error","set","fillFallback","array","concat","a","b","constructor","CellData_1","CELL_SIZE","DEFAULT_ATTR_DATA","freeze","BufferLine","fillCellData","isWrapped","_combined","_data","Uint32Array","setCell","hasWidth","getFg","getBg","hasContent","getCodePoint","getString","loadCell","startIndex","setCellFromCodePoint","addCodepointToCell","insertCells","deleteCells","replaceCells","subarray","keys","parseInt","copyFrom","line","newLine","getTrimmedLength","copyCellsFrom","src","srcCol","destCol","applyInReverse","srcData","srcCombinedKeys","translateToString","trimRight","startCol","endCol","Math","min","promptLabel","tooMuchOutput","CHARSETS","DEFAULT_CHARSET","`","e","f","g","h","j","k","q","u","v","w","z","{","|","}","~","#","@","[","\\","]","^","_","TypedArrayUtils_1","wcwidth","opts","COMBINING_BMP","COMBINING_HIGH","control","table","nul","num","ucs","mid","max","bisearch","getStringCellWidth","MAX_SUBPARAMS","Params","maxLength","maxSubParamsLength","params","Int32Array","_subParams","_subParamsLength","_subParamsIdx","Uint16Array","_rejectDigits","_rejectSubDigits","fromArray","values","Array","addSubParam","addParam","newParams","toArray","res","slice","reset","hasSubParams","idx","getSubParams","getSubParamsAll","addParamDigit","addSubParamDigit","OscParser","_state","_id","_handlers","_handlerFb","addHandler","ident","handlerList","handlerIndex","setHandler","clearHandler","setHandlerFallback","_start","handlers","_put","put","_end","success","OscHandler","_handler","_hitLimit","PAYLOAD_LIMIT","ret","Params_1","EMPTY_HANDLERS","DcsParser","_active","_ident","unhook","hook","DcsHandler","_params","CharAtlasUtils_1","DynamicCharAtlas_1","charAtlasCache","rendererId","colors","newConfig","generateConfig","ownedByIndex","entry","ownedBy","configEquals","config","atlas","newEntry","DynamicCharAtlas","removeTerminalFromCache","clonedColors","cursor","cursorAccent","selection","allowTransparency","rgba","is256Color","colorCode","DEFAULT_FOREGROUND","fromHex","DEFAULT_BACKGROUND","DEFAULT_CURSOR","DEFAULT_CURSOR_ACCENT","DEFAULT_SELECTION","toPaddedHex","DEFAULT_ANSI_COLORS","ch","ColorManager","canvas","ctx","globalCompositeOperation","_litmusColor","createLinearGradient","setTheme","theme","_parseColor","black","red","green","yellow","blue","magenta","cyan","white","brightBlack","brightRed","brightGreen","brightYellow","brightBlue","brightMagenta","brightCyan","brightWhite","fallback","console","warn","getImageData","JoinedCellData","firstCell","_width","CharacterJoinerRegistry","_characterJoiners","_nextCharacterJoinerId","_workCell","registerCharacterJoiner","joiner","deregisterCharacterJoiner","joinerId","getJoinedCharacters","row","buffer","lines","ranges","lineStr","rangeStartColumn","currentStringIndex","rangeStartStringIndex","rangeAttrFG","rangeAttrBG","joinedRanges","_getJoinedRanges","endIndex","lineData","text","substring","joinerRanges","_mergeRanges","_stringRangesToCellRanges","currentRangeIndex","currentRangeStarted","currentRange","length_1","newRange","inRange","range","getCoordsRelativeToElement","event","element","getBoundingClientRect","clientX","left","clientY","top","getCoords","colCount","rowCount","hasValidCharSize","actualCellWidth","actualCellHeight","isSelection","coords","ceil","getRawByteCoords","RenderDebouncer","_renderCallback","_animationFrame","cancelAnimationFrame","refresh","rowStart","rowEnd","_rowCount","_rowStart","_rowEnd","requestAnimationFrame","_innerRefresh","ScreenDprMonitor","_currentDevicePixelRatio","setListener","_listener","clearListener","_outerListener","_updateDpr","_resolutionMediaMatchList","removeListener","matchMedia","addListener","val","depth","clonedObject","isArray","Terminal_1","Strings","AddonManager_1","Terminal","_core","_addonManager","AddonManager","onLineFeed","onSelectionChange","onData","onTitleChange","onScroll","onKey","onRender","onResize","_parser","ParserApi","textarea","BufferApiView","markers","blur","focus","columns","_verifyIntegers","writeln","open","parent","attachCustomKeyEventHandler","customKeyEventHandler","registerLinkMatcher","regex","deregisterLinkMatcher","matcherId","addMarker","cursorYOffset","hasSelection","select","column","getSelection","getSelectionPosition","clearSelection","selectAll","selectLines","scrollLines","amount","scrollPages","pageCount","scrollToTop","scrollToBottom","scrollToLine","write","writeUtf8","paste","getOption","optionsService","setOption","loadAddon","addon","_i","_buffer","ydisp","ybase","getLine","BufferLineApiView","_line","getCell","BufferCellApiView","startColumn","endColumn","_x","addCsiHandler","callback","addDcsHandler","addEscHandler","addOscHandler","CompositionHelper_1","Viewport_1","Clipboard_1","EscapeSequences_1","InputHandler_1","Renderer_1","Linkifier_1","SelectionService_1","Browser","Lifecycle_1","SoundService_1","MouseZoneManager_1","AccessibilityManager_1","DomRenderer_1","Keyboard_1","EventEmitter_1","BufferLine_1","WindowsMode_1","ColorManager_1","RenderService_1","Services_1","OptionsService_1","Services_2","CharSizeService_1","BufferService_1","Lifecycle_2","MouseService_1","CoreService_1","LogService_1","DirtyRowService_1","InstantiationService_1","browser","_keyDownHandled","_blankLine","_onCursorMove","_onData","_onKey","_onLineFeed","_onRender","_onResize","_onScroll","_onSelectionChange","_onTitleChange","_onFocus","_onBlur","onA11yCharEmitter","onA11yTabEmitter","_instantiationService","InstantiationService","OptionsService","setService","createInstance","BufferService","_logService","LogService","_coreService","CoreService","_dirtyRowService","DirtyRowService","_setupOptionsListeners","_setup","_windowsMode","_renderService","_customKeyEventHandler","parentNode","_parent","body","cursorState","cursorHidden","applicationKeypad","originMode","insertMode","wraparoundMode","bracketedPasteMode","charset","gcharset","glevel","charsets","curAttrData","_eraseAttrData","currentParam","writeBuffer","writeBufferUtf8","_writeInProgress","_xoffSentToCatchUp","_userScrolling","_inputHandler","InputHandler","linkifier","Linkifier","windowsMode","applyWindowsMode","buffers","active","eraseAttrData","preventScroll","activeElement","hasFocus","onOptionChange","_charSizeService","measure","setRenderer","_createRenderer","viewport","syncScrollArea","screenReaderMode","_accessibilityManager","AccessibilityManager","setupTabStops","_setTheme","newBufferLength","scrollback","amountToTrim","needsRefresh","trimStart","_onTextAreaFocus","ev","sendFocus","triggerDataEvent","updateCursorStyle","showCursor","_onTextAreaBlur","remove","_initGlobal","_bindKeys","copyHandler","_selectionService","pasteHandlerWrapper","handlePasteEvent","button","rightClickHandler","screenElement","rightClickSelectsWord","moveTextAreaUnderMouseCursor","_keyUp","_keyDown","_keyPress","_compositionHelper","compositionstart","compositionupdate","compositionend","updateCompositionElements","_queueLinkification","_document","ownerDocument","dir","setAttribute","fragment","createDocumentFragment","_viewportElement","_viewportScrollArea","_helperContainer","tabIndex","CharSizeService","_compositionView","CompositionHelper","_theme","_colorManager","renderer","RenderService","_soundService","SoundService","_mouseService","MouseService","Viewport","suppressEvent","onThemeChange","onDimensionsChange","SelectionService","onRedrawRequest","onLinuxMouseSelection","_mouseZoneManager","MouseZoneManager","clearAll","attachToDom","onMouseDown","mouseEvents","disable","enable","setBrowserServices","bindMouse","rendererType","Renderer","DomRenderer","self","pressed","sendButton","shift","meta","ctrl","mod","overrideType","which","detail","deltaY","shiftKey","metaKey","ctrlKey","vt200Mouse","normalMouse","getButton","sendEvent","encode","utfMouse","_vt300Mouse","data_1","_decLocator","page","urxvtMouse","sgrMouse","preventDefault","shouldForceSelection","cancel","moveHandler","sendMove","x10Mouse","hasScrollback","getLinesScrolled","sequence","decPrivateModes","applicationCursorKeys","abs","onWheel","onTouchStart","onTouchMove","refreshRows","linkifyRows","shouldColumnSelect","scroll","eraseAttr","getBlankLine","topRow","scrollTop","bottomRow","scrollBottom","willBufferBeTrimmed","isFull","recycle","scrollRegionHeight","shiftElements","markRangeDirty","disp","suppressScrollEvent","oldYdisp","scrollAmount","useFlowControl","setTimeout","_innerWriteUtf8","bufferOffset","startTime","Date","now","parseUtf8","_innerWrite","parse","normal","setSelection","selectionText","selectionStart","selectionEnd","keydown","evaluateKeyboardEvent","macOptionIsMeta","scrollCount","_isThirdLevelShift","domEvent","thirdLevelKey","altKey","keyCode","setgLevel","setgCharset","wasModifierKeyOnlyEvent","charCode","bell","_soundBell","playBellSound","_visualBell","clearTimeout","_visualBellTimer","isNaN","MINIMUM_COLS","MINIMUM_ROWS","hasValidSize","is","term","termName","handleTitle","title","inputHandler","writeInProgress","xoffSentToCatchUp","userScrolling","force","cancelEvents","stopPropagation","bellStyle","_textarea","_isComposing","_isSendingComposition","_compositionPosition","textContent","_finalizeComposition","_handleAnyTextareaChanges","waitForPropagation","_clearTextareaPosition","currentCompositionPosition_1","oldValue","diff","replace","dontRecurse","isCursorInViewport","cellHeight","lineHeight","cursorTop","cursorLeft","compositionViewBounds","__decorate","__param","FALLBACK_SCROLL_BAR_WIDTH","_scrollLines","_scrollArea","scrollBarWidth","_currentRowHeight","_lastRecordedBufferLength","_lastRecordedViewportHeight","_lastRecordedBufferHeight","_lastTouchY","_lastScrollTop","_wheelPartialScroll","_refreshAnimationFrame","_ignoreNextScrollEvent","offsetWidth","backgroundColor","_refresh","dimensions","offsetHeight","newBufferHeight","round","newScrollTop","offsetParent","_getPixelsScrolled","deltaMode","WheelEvent","DOM_DELTA_LINE","DOM_DELTA_PAGE","DOM_DELTA_PIXEL","floor","touches","pageY","prepareTextForTerminal","bracketTextForPaste","coreService","position","selectionService","clipboardData","setData","getData","shouldSelectWord","isClickInSelection","selectWordAtCursor","Charsets_1","CharWidth_1","EscapeSequenceParser_1","OscParser_1","DcsParser_1","GLEVEL","(",")","*","+","-",".","DECRQSS","pt","block","underline","bar","cursorStyle","cursorBlink","debug","_terminal","EscapeSequenceParser","_parseBuffer","_stringDecoder","_utf8Decoder","setCsiHandlerFallback","identifier","identToString","setEscHandlerFallback","setExecuteHandlerFallback","setOscHandlerFallback","action","setDcsHandlerFallback","payload","setPrintHandler","print","setCsiHandler","final","insertChars","cursorUp","cursorDown","cursorForward","cursorBackward","cursorNextLine","cursorPrecedingLine","cursorCharAbsolute","cursorPosition","cursorForwardTab","eraseInDisplay","prefix","eraseInLine","insertLines","deleteLines","deleteChars","scrollUp","scrollDown","eraseChars","cursorBackwardTab","charPosAbsolute","hPositionRelative","repeatPrecedingCharacter","sendDeviceAttributesPrimary","sendDeviceAttributesSecondary","linePosAbsolute","vPositionRelative","hVPosition","tabClear","setMode","setModePrivate","resetMode","resetModePrivate","charAttributes","deviceStatus","deviceStatusPrivate","intermediates","softReset","setCursorStyle","setScrollRegion","saveCursor","restoreCursor","setExecuteHandler","lineFeed","carriageReturn","backspace","tab","shiftOut","shiftIn","nextLine","tabSet","setOscHandler","setTitle","setEscHandler","reverseIndex","keypadApplicationMode","keypadNumericMode","selectDefaultCharset","flag","this_1","selectCharset","screenAlignmentPattern","setErrorHandler","state","error","setDcsHandler","cursorStartX","cursorStartY","chWidth","curAttr","bufferRow","markDirty","getNullCell","precedingCodepoint","convertEol","_restrictCursor","originalX","nextStop","_setCursor","_moveCursor","diffToTop","diffToBottom","param","tabs","prevStop","_eraseInBufferLine","clearWrap","_resetBufferLine","scrollBackSize","scrollBottomRowsOffset","scrollBottomAbsolute","savedCols","activateAltBuffer","activateNormalBuffer","_extractColor","attr","accu","cSpace","advance","subparams","isBlinking","bottom","savedX","savedY","savedCurAttrData","savedCharset","_savedCharset","collectAndFlag","level","yOffset","markAllDirty","TransitionTable","setDefault","next","addMany","codes","VT500_TRANSITION_TABLE","blueprint","map","unused","PRINTABLES","EXECUTABLES","states","TRANSITIONS","initialState","currentState","_collect","_printHandlerFb","_executeHandlerFb","_csiHandlerFb","_escHandlerFb","_errorHandlerFb","_printHandler","_executeHandlers","_csiHandlers","_escHandlers","_oscParser","_dcsParser","_errorHandler","_identifier","finalRange","intermediate","finalCode","reverse","clearPrintHandler","clearEscHandler","clearExecuteHandler","clearCsiHandler","clearDcsHandler","clearOscHandler","clearErrorHandler","transition","osc","dcs","collect","j_1","abort","isSub","handlersEsc","jj","j_2","j_3","TextRenderLayer_1","SelectionRenderLayer_1","CursorRenderLayer_1","LinkRenderLayer_1","CharacterJoinerRegistry_1","nextRendererId","bufferService","_characterJoinerRegistry","_renderLayers","TextRenderLayer","SelectionRenderLayer","LinkRenderLayer","CursorRenderLayer","_devicePixelRatio","_updateDimensions","onDevicePixelRatioChange","onCharSizeChanged","_runOperation","operation","renderRows","letterSpacing","GridCache_1","BaseRenderLayer_1","container","characterJoinerRegistry","_characterWidth","_characterFont","_characterOverlapCache","GridCache","terminalFont","_forEachCell","firstRow","lastRow","joinerRegistry","isJoined","lastCharX","_isOverlapping","_drawBackground","startX","startY","prevFillStyle","nextFillStyle","_drawForeground","cache","beginFrame","overlaps","measureText","BaseCharAtlas_1","LRUMap_1","Platform_1","TEXTURE_WIDTH","TEXTURE_HEIGHT","TRANSPARENT_COLOR","getGlyphCacheKey","glyph","_config","_drawToCacheCount","_glyphsWaitingOnBitmap","_bitmapCommitTimeout","_bitmap","_cacheCanvas","_cacheCtx","tmpCanvas","_tmpCtx","_height","capacity","_cacheMap","LRUMap","prealloc","_canCache","glyphKey","cacheValue","_drawFromCache","peek","cacheValue_1","_drawToCache","_toCoordinateX","_toCoordinateY","isEmpty","cacheX","cacheY","drawImage","inBitmap","_getColorFromAnsiIndex","_getBackgroundColor","_getForegroundColor","fontStyle","imageData","color","offset","clearColor","putImageData","_addGlyphToBitmap","_generateBitmap","glyphsMovingToBitmap","createImageBitmap","then","bitmap","BaseCharAtlas","NoneCharAtlas","_didWarmUp","_doWarmUp","_map","_head","_tail","_nodePool","_unlinkNode","prev","_appendNode","tail","count","nodePool","peekValue","head","pop","_clearState","_didStateChange","viewportStartRow","viewportEndRow","viewportCappedStartRow","viewportCappedEndRow","startRowEndCol","middleRowsCount","_areCoordinatesEqual","coord1","coord2","_cell","isFocused","_cursorRenderers","_renderBarCursor","_renderBlockCursor","_renderUnderlineCursor","_clearCursor","_cursorBlinkStateManager","pause","resume","CursorBlinkStateManager","_render","restartBlinkAnimation","isPaused","triggeredByAnimationFrame","cursorY","viewportRelativeCursorY","_renderBlurCursor","isCursorVisible","strokeStyle","_restartInterval","_blinkStartTimeout","_blinkInterval","clearInterval","_animationTimeRestarted","timeToStart","time","setInterval","onLinkHover","_onLinkHover","onLinkLeave","_onLinkLeave","_clearCurrentLink","x1","y1","middleRowCount","y2","x2","_linkMatchers","_nextLinkMatcherId","_onLinkTooltip","_rowsToLinkify","mouseZoneManager","_element","_rowsTimeoutId","_linkifyRows","_timeBeforeLatency","absoluteRowIndexStart","absoluteRowIndexEnd","overscanLineLimit","iterator","hasNext","_doLinkifyRow","first","matcher","matchIndex","validationCallback","hoverTooltipCallback","tooltipCallback","hoverLeaveCallback","leaveCallback","willLinkActivate","priority","_addLinkMatcherToList","rowIndex","match","rex","RegExp","source","flags","stringIndex","uri","lastIndex","bufferIndex","stringIndexToBufferIndex","isValid","_addLink","exec","MouseZone","_createLinkHoverEvent","clickCallback","hoverCallback","SelectionModel_1","Mouse_1","MoveToCell_1","NON_BREAKING_SPACE_CHAR","ALL_NON_BREAKING_SPACE_REGEX","_screenElement","_dragScrollAmount","_enabled","_mouseDownTimeStamp","_onLinuxMouseSelection","_onRedrawRequest","_mouseMoveListener","_onMouseMove","_mouseUpListener","_onMouseUp","onUserInput","_trimListener","onTrim","_onTrim","onBufferActivate","_onBufferActivate","_model","SelectionModel","_activeSelectionMode","_removeMouseDownListeners","finalSelectionStart","finalSelectionEnd","lineText","translateBufferLineToString","bufferLine","isLinuxMouseSelection","_getMouseBufferCoords","_areCoordsInSelection","_selectWordAt","isSelectAllActive","_getMouseEventScrollAmount","terminalHeight","macOptionClickForcesSelection","timeStamp","_onIncrementalClick","_onSingleClick","_onDoubleClick","_onTripleClick","_addMouseDownListeners","_dragScrollIntervalTimer","_dragScroll","selectionStartLength","_selectLineAt","stopImmediatePropagation","previousSelectionEnd","_selectToWordAt","timeElapsed","coordinates","moveToCellSequence","activeBuffer","_convertViewportColToCharacterIndex","charIndex","col","_getWordAt","allowWhitespaceOnlySelection","followWrappedLinesAbove","followWrappedLinesBelow","charOffset","leftWideCharCount","rightWideCharCount","leftLongCharOffset","rightLongCharOffset","charAt","length_2","_isCharWordSeparator","length_3","length_4","trim","previousBufferLine","previousLineWordPosition","nextBufferLine","nextLineWordPosition","wordPosition","areSelectionValuesReversed","wordSeparator","wrappedRange","getWrappedRangeForLine","last","startPlusLength","moveToRequestedRow","targetY","applicationCursor","wrappedRowsForRow","repeat","wrappedRows","direction","verticalDirection","wrappedRowsCount","currentRow","lineWraps","horizontalDirection","targetX","forward","currentCol","bufferStr","str","rpt","moveHorizontallyOnly","resetStartingRow","moveToRequestedCol","_audioContext","audioContextCtor","AudioContext","webkitAudioContext","audioContext","bellAudioSource","createBufferSource","decodeAudioData","_base64ToArrayBuffer","_removeMimeType","bellSound","connect","destination","base64","binaryString","atob","len","bytes","dataURI","split","_zones","_areZonesActive","_lastHoverCoords","_initialSelectionLength","_onMouseDown","_mouseLeaveListener","_onMouseLeave","_clickListener","_onClick","_deactivate","zone","_activate","_currentZone","pageX","_onHover","_findZoneEventAt","_tooltipTimeout","_onTooltip","_getSelectionLength","currentSelectionLength","RenderDebouncer_1","ScreenDprMonitor_1","_liveRegionLineCount","_charsToConsume","_charsToAnnounce","_accessibilityTreeRoot","_rowContainer","_rowElements","_createAccessibilityTreeNode","_topBoundaryFocusListener","_onBoundaryFocus","_bottomBoundaryFocusListener","_refreshRowsDimensions","_renderRowsDebouncer","_renderRows","_refreshRows","_liveRegion","insertAdjacentElement","onA11yChar","char","_onChar","onA11yTab","spaceCount","_onTab","_clearLiveRegion","_screenDprMonitor","boundaryElement","beforeBoundaryElement","getAttribute","relatedTarget","topBoundaryElement","bottomBoundaryElement","newElement","unshift","children","_refreshRowDimensions","MAX_ROWS_TO_READ","keyChar","setSize","posInSet","innerHTML","_announceCharacters","DomRendererRowFactory_1","TERMINAL_CLASS_PREFIX","ROW_CONTAINER_CLASS","SELECTION_CLASS","nextTerminalId","_terminalClass","_refreshRowElements","_selectionContainer","_injectCss","_rowFactory","DomRendererRowFactory","_themeStyleElement","_dimensionsStyleElement","overflow","styles","_terminalSelector","BOLD_CLASS","ITALIC_CLASS","CURSOR_CLASS","CURSOR_BLINK_CLASS","CURSOR_STYLE_BLOCK_CLASS","CURSOR_STYLE_BAR_CLASS","CURSOR_STYLE_UNDERLINE_CLASS","documentFragment","_createSelectionElement","endCol_1","colStart","colEnd","terminal","cursorAbsoluteY","cursorX","rowElement","createRow","_setCellUnderline","enabled","span","textDecoration","DIM_CLASS","UNDERLINE_CLASS","isCursorRow","cellWidth","lineLength","charElement","swapColor","KEYCODE_KEY_MAPPINGS","48","49","50","51","52","53","54","55","56","57","186","187","188","189","190","191","192","219","220","221","222","applicationCursorMode","modifiers","keyMapping","lastChar","_renderer","charSizeService","_isPaused","_needsFullRefresh","_canvasWidth","_canvasHeight","_onDimensionsChange","_onRefreshRequest","_renderDebouncer","onCharSizeChange","observer_1","IntersectionObserver","_onIntersectionChange","threshold","observe","disconnect","intersectionRatio","_fireOnCanvasResize","changeOptions","_fullRefresh","Clone_1","DEFAULT_BELL_SOUND","DEFAULT_OPTIONS","logLevel","disableStdin","tabStopWidth","screenKeys","CONSTRUCTOR_ONLY_OPTIONS","_onOptionChange","newValue","_sanitizeAndValidateOption","parentElement","_onCharSizeChange","_measureStrategy","DomMeasureStrategy","_parentElement","_result","_measureElement","geometry","BufferSet_1","BufferSet","Buffer_1","_normal","Buffer","fillViewportRows","_alt","_activeBuffer","inactiveBuffer","fillAttr","newCols","newRows","CircularList_1","BufferReflow_1","Marker_1","MAX_BUFFER_SIZE","_hasScrollback","_nullCell","_whitespaceCell","_cols","_rows","CircularList","_getCorrectBufferLength","getWhitespaceCell","relativeY","correctBufferLength","nullCell","newMaxLength","addToY","_isReflowEnabled","_reflow","_reflowLarger","_reflowSmaller","toRemove","reflowLargerGetLinesToRemove","newLayoutResult","reflowLargerCreateNewLayout","reflowLargerApplyNewLayout","layout","_reflowLargerAdjustViewport","countRemoved","viewportAdjustments","toInsert","countToInsert","wrappedLines","absoluteY","lastLineLength","destLineLengths","reflowSmallerGetNewLineLengths","linesToAdd","trimmedLines","newLines","destLineIndex","srcLineIndex","cellsToCopy","wrappedLinesIndex","getWrappedLineTrimmedLength","insertEvents","originalLines","originalLinesLength","originalLineIndex","nextToInsertIndex","nextToInsert","countInsertedSoFar","nextI","insertCountEmitted","onInsertEmitter","onTrimEmitter","lineIndex","marker","Marker","onInsert","onDelete","onDispose","_removeMarker","startOverscan","endOverscan","BufferStringIterator","_trimRight","_startIndex","_endIndex","_startOverscan","_endOverscan","_current","_maxLength","onDeleteEmitter","_array","_length","newArray","_getCyclicIndex","newLength","deleteCount","items","countToTrim","expandListBy","endsInNull","followingLineStartsWithWide","oldCols","bufferAbsoluteY","srcTrimmedTineLength","srcRemainingCells","destRemainingCells","countToRemove","i_1","nextToRemoveIndex","nextToRemoveStart","countRemovedSoFar","newLayout","newLayoutLines","newLineLengths","cellsNeeded","reduce","srcLine","cellsAvailable","oldTrimmedLength","endsWithWide","_nextId","isDisposed","_onDispose","DEFAULT_DEC_PRIVATE_MODES","_scrollToBottom","_onUserInput","wasUserInput","LogLevel","optionsKeyToLogLevel","DEBUG","info","INFO","WARN","ERROR","off","OFF","_updateLogLevel","_logLevel","message","optionalParams","_a","log","clearRange","temp","ServiceCollection","entries","_entries","entries_1","_b","service","instance","_services","args","serviceDependencies","sort","serviceArgs","serviceDependencies_1","dependency","firstServiceArgPos","_addons","loadedAddon","_wrappedAddonDispose","activate"],"mappings":"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CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC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","file":"xterm.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Terminal\"] = factory();\n\telse\n\t\troot[\"Terminal\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 32);\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IEvent } from 'common/EventEmitter';\nimport { IBuffer, IBufferSet } from 'common/buffer/Types';\nimport { IDecPrivateModes } from 'common/Types';\nimport { createDecorator } from 'common/services/ServiceRegistry';\n\nexport const IBufferService = createDecorator<IBufferService>('BufferService');\nexport interface IBufferService {\n  serviceBrand: any;\n\n  readonly cols: number;\n  readonly rows: number;\n  readonly buffer: IBuffer;\n  readonly buffers: IBufferSet;\n\n  // TODO: Move resize event here\n\n  resize(cols: number, rows: number): void;\n  reset(): void;\n}\n\nexport const ICoreService = createDecorator<ICoreService>('CoreService');\nexport interface ICoreService {\n  serviceBrand: any;\n\n  readonly decPrivateModes: IDecPrivateModes;\n\n  readonly onData: IEvent<string>;\n  readonly onUserInput: IEvent<void>;\n\n  reset(): void;\n\n  /**\n   * Triggers the onData event in the public API.\n   * @param data The data that is being emitted.\n   * @param wasFromUser Whether the data originated from the user (as opposed to\n   * resulting from parsing incoming data). When true this will also:\n   * - Scroll to the bottom of the buffer.s\n   * - Fire the `onUserInput` event (so selection can be cleared).\n    */\n  triggerDataEvent(data: string, wasUserInput?: boolean): void;\n}\n\nexport const IDirtyRowService = createDecorator<IDirtyRowService>('DirtyRowService');\nexport interface IDirtyRowService {\n  serviceBrand: any;\n\n  readonly start: number;\n  readonly end: number;\n\n  clearRange(): void;\n  markDirty(y: number): void;\n  markRangeDirty(y1: number, y2: number): void;\n  markAllDirty(): void;\n}\n\nexport interface IServiceIdentifier<T> {\n  (...args: any[]): void;\n  type: T;\n}\n\nexport interface IConstructorSignature0<T> {\n  new(...services: { serviceBrand: any; }[]): T;\n}\n\nexport interface IConstructorSignature1<A1, T> {\n  new(first: A1, ...services: { serviceBrand: any; }[]): T;\n}\n\nexport interface IConstructorSignature2<A1, A2, T> {\n  new(first: A1, second: A2, ...services: { serviceBrand: any; }[]): T;\n}\n\nexport interface IConstructorSignature3<A1, A2, A3, T> {\n  new(first: A1, second: A2, third: A3, ...services: { serviceBrand: any; }[]): T;\n}\n\nexport interface IConstructorSignature4<A1, A2, A3, A4, T> {\n  new(first: A1, second: A2, third: A3, fourth: A4, ...services: { serviceBrand: any; }[]): T;\n}\n\nexport interface IConstructorSignature5<A1, A2, A3, A4, A5, T> {\n  new(first: A1, second: A2, third: A3, fourth: A4, fifth: A5, ...services: { serviceBrand: any; }[]): T;\n}\n\nexport interface IConstructorSignature6<A1, A2, A3, A4, A5, A6, T> {\n  new(first: A1, second: A2, third: A3, fourth: A4, fifth: A5, sixth: A6, ...services: { serviceBrand: any; }[]): T;\n}\n\nexport interface IConstructorSignature7<A1, A2, A3, A4, A5, A6, A7, T> {\n  new(first: A1, second: A2, third: A3, fourth: A4, fifth: A5, sixth: A6, seventh: A7, ...services: { serviceBrand: any; }[]): T;\n}\n\nexport interface IConstructorSignature8<A1, A2, A3, A4, A5, A6, A7, A8, T> {\n  new(first: A1, second: A2, third: A3, fourth: A4, fifth: A5, sixth: A6, seventh: A7, eigth: A8, ...services: { serviceBrand: any; }[]): T;\n}\n\nexport const IInstantiationService = createDecorator<IInstantiationService>('InstantiationService');\nexport interface IInstantiationService {\n  setService<T>(id: IServiceIdentifier<T>, instance: T): void;\n\n  createInstance<T>(ctor: IConstructorSignature0<T>): T;\n  createInstance<A1, T>(ctor: IConstructorSignature1<A1, T>, first: A1): T;\n  createInstance<A1, A2, T>(ctor: IConstructorSignature2<A1, A2, T>, first: A1, second: A2): T;\n  createInstance<A1, A2, A3, T>(ctor: IConstructorSignature3<A1, A2, A3, T>, first: A1, second: A2, third: A3): T;\n  createInstance<A1, A2, A3, A4, T>(ctor: IConstructorSignature4<A1, A2, A3, A4, T>, first: A1, second: A2, third: A3, fourth: A4): T;\n  createInstance<A1, A2, A3, A4, A5, T>(ctor: IConstructorSignature5<A1, A2, A3, A4, A5, T>, first: A1, second: A2, third: A3, fourth: A4, fifth: A5): T;\n  createInstance<A1, A2, A3, A4, A5, A6, T>(ctor: IConstructorSignature6<A1, A2, A3, A4, A5, A6, T>, first: A1, second: A2, third: A3, fourth: A4, fifth: A5, sixth: A6): T;\n  createInstance<A1, A2, A3, A4, A5, A6, A7, T>(ctor: IConstructorSignature7<A1, A2, A3, A4, A5, A6, A7, T>, first: A1, second: A2, third: A3, fourth: A4, fifth: A5, sixth: A6, seventh: A7): T;\n  createInstance<A1, A2, A3, A4, A5, A6, A7, A8, T>(ctor: IConstructorSignature8<A1, A2, A3, A4, A5, A6, A7, A8, T>, first: A1, second: A2, third: A3, fourth: A4, fifth: A5, sixth: A6, seventh: A7, eigth: A8): T;\n}\n\nexport const ILogService = createDecorator<ILogService>('LogService');\nexport interface ILogService {\n  serviceBrand: any;\n\n  debug(message: any, ...optionalParams: any[]): void;\n  info(message: any, ...optionalParams: any[]): void;\n  warn(message: any, ...optionalParams: any[]): void;\n  error(message: any, ...optionalParams: any[]): void;\n}\n\nexport const IOptionsService = createDecorator<IOptionsService>('OptionsService');\nexport interface IOptionsService {\n  serviceBrand: any;\n\n  readonly options: ITerminalOptions;\n\n  readonly onOptionChange: IEvent<string>;\n\n  setOption<T>(key: string, value: T): void;\n  getOption<T>(key: string): T | undefined;\n}\n\nexport type FontWeight = 'normal' | 'bold' | '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900';\nexport type LogLevel = 'debug' | 'info' | 'warn' | 'error' | 'off';\nexport type RendererType = 'dom' | 'canvas';\n\nexport interface IPartialTerminalOptions {\n  allowTransparency?: boolean;\n  bellSound?: string;\n  bellStyle?: 'none' /*| 'visual'*/ | 'sound' /*| 'both'*/;\n  cols?: number;\n  cursorBlink?: boolean;\n  cursorStyle?: 'block' | 'underline' | 'bar';\n  disableStdin?: boolean;\n  drawBoldTextInBrightColors?: boolean;\n  fontSize?: number;\n  fontFamily?: string;\n  fontWeight?: FontWeight;\n  fontWeightBold?: FontWeight;\n  letterSpacing?: number;\n  lineHeight?: number;\n  logLevel?: LogLevel;\n  macOptionIsMeta?: boolean;\n  macOptionClickForcesSelection?: boolean;\n  rendererType?: RendererType;\n  rightClickSelectsWord?: boolean;\n  rows?: number;\n  screenReaderMode?: boolean;\n  scrollback?: number;\n  tabStopWidth?: number;\n  theme?: ITheme;\n  windowsMode?: boolean;\n  wordSeparator?: string;\n}\n\nexport interface ITerminalOptions {\n  allowTransparency: boolean;\n  bellSound: string;\n  bellStyle: 'none' /*| 'visual'*/ | 'sound' /*| 'both'*/;\n  cols: number;\n  cursorBlink: boolean;\n  cursorStyle: 'block' | 'underline' | 'bar';\n  disableStdin: boolean;\n  drawBoldTextInBrightColors: boolean;\n  fontSize: number;\n  fontFamily: string;\n  fontWeight: FontWeight;\n  fontWeightBold: FontWeight;\n  letterSpacing: number;\n  lineHeight: number;\n  logLevel: LogLevel;\n  macOptionIsMeta: boolean;\n  macOptionClickForcesSelection: boolean;\n  rendererType: RendererType;\n  rightClickSelectsWord: boolean;\n  rows: number;\n  screenReaderMode: boolean;\n  scrollback: number;\n  tabStopWidth: number;\n  theme: ITheme;\n  windowsMode: boolean;\n  wordSeparator: string;\n\n  [key: string]: any;\n  cancelEvents: boolean;\n  convertEol: boolean;\n  screenKeys: boolean;\n  termName: string;\n  useFlowControl: boolean;\n}\n\nexport interface ITheme {\n  foreground?: string;\n  background?: string;\n  cursor?: string;\n  cursorAccent?: string;\n  selection?: string;\n  black?: string;\n  red?: string;\n  green?: string;\n  yellow?: string;\n  blue?: string;\n  magenta?: string;\n  cyan?: string;\n  white?: string;\n  brightBlack?: string;\n  brightRed?: string;\n  brightGreen?: string;\n  brightYellow?: string;\n  brightBlue?: string;\n  brightMagenta?: string;\n  brightCyan?: string;\n  brightWhite?: string;\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\n\n/**\n * A base class that can be extended to provide convenience methods for managing the lifecycle of an\n * object and its components.\n */\nexport abstract class Disposable implements IDisposable {\n  protected _disposables: IDisposable[] = [];\n  protected _isDisposed: boolean = false;\n\n  constructor() {\n  }\n\n  /**\n   * Disposes the object, triggering the `dispose` method on all registered IDisposables.\n   */\n  public dispose(): void {\n    this._isDisposed = true;\n    this._disposables.forEach(d => d.dispose());\n    this._disposables.length = 0;\n  }\n\n  /**\n   * Registers a disposable object.\n   * @param d The disposable to register.\n   */\n  public register<T extends IDisposable>(d: T): void {\n    this._disposables.push(d);\n  }\n\n  /**\n   * Unregisters a disposable object if it has been registered, if not do\n   * nothing.\n   * @param d The disposable to unregister.\n   */\n  public unregister<T extends IDisposable>(d: T): void {\n    const index = this._disposables.indexOf(d);\n    if (index !== -1) {\n      this._disposables.splice(index, 1);\n    }\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\n\ninterface IListener<T> {\n  (e: T): void;\n}\n\nexport interface IEvent<T> {\n  (listener: (e: T) => any): IDisposable;\n}\n\nexport interface IEventEmitter<T> {\n  event: IEvent<T>;\n  fire(data: T): void;\n}\n\nexport class EventEmitter<T> implements IEventEmitter<T> {\n  private _listeners: IListener<T>[] = [];\n  private _event?: IEvent<T>;\n\n  public get event(): IEvent<T> {\n    if (!this._event) {\n      this._event = (listener: (e: T) => any) => {\n        this._listeners.push(listener);\n        const disposable = {\n          dispose: () => {\n            for (let i = 0; i < this._listeners.length; i++) {\n              if (this._listeners[i] === listener) {\n                this._listeners.splice(i, 1);\n                return;\n              }\n            }\n          }\n        };\n        return disposable;\n      };\n    }\n    return this._event;\n  }\n\n  public fire(data: T): void {\n    const queue: IListener<T>[] = [];\n    for (let i = 0; i < this._listeners.length; i++) {\n      queue.push(this._listeners[i]);\n    }\n    for (let i = 0; i < queue.length; i++) {\n      queue[i].call(undefined, data);\n    }\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport const DEFAULT_COLOR = 256;\nexport const DEFAULT_ATTR = (0 << 18) | (DEFAULT_COLOR << 9) | (256 << 0);\n\nexport const CHAR_DATA_ATTR_INDEX = 0;\nexport const CHAR_DATA_CHAR_INDEX = 1;\nexport const CHAR_DATA_WIDTH_INDEX = 2;\nexport const CHAR_DATA_CODE_INDEX = 3;\n\n/**\n * Null cell - a real empty cell (containing nothing).\n * Note that code should always be 0 for a null cell as\n * several test condition of the buffer line rely on this.\n */\nexport const NULL_CELL_CHAR = '';\nexport const NULL_CELL_WIDTH = 1;\nexport const NULL_CELL_CODE = 0;\n\n/**\n * Whitespace cell.\n * This is meant as a replacement for empty cells when needed\n * during rendering lines to preserve correct aligment.\n */\nexport const WHITESPACE_CELL_CHAR = ' ';\nexport const WHITESPACE_CELL_WIDTH = 1;\nexport const WHITESPACE_CELL_CODE = 32;\n\n/**\n * Bitmasks for accessing data in `content`.\n */\nexport const enum Content {\n  /**\n   * bit 1..21    codepoint, max allowed in UTF32 is 0x10FFFF (21 bits taken)\n   *              read:   `codepoint = content & Content.codepointMask;`\n   *              write:  `content |= codepoint & Content.codepointMask;`\n   *                      shortcut if precondition `codepoint <= 0x10FFFF` is met:\n   *                      `content |= codepoint;`\n   */\n  CODEPOINT_MASK = 0x1FFFFF,\n\n  /**\n   * bit 22       flag indication whether a cell contains combined content\n   *              read:   `isCombined = content & Content.isCombined;`\n   *              set:    `content |= Content.isCombined;`\n   *              clear:  `content &= ~Content.isCombined;`\n   */\n  IS_COMBINED_MASK = 0x200000,  // 1 << 21\n\n  /**\n   * bit 1..22    mask to check whether a cell contains any string data\n   *              we need to check for codepoint and isCombined bits to see\n   *              whether a cell contains anything\n   *              read:   `isEmpty = !(content & Content.hasContent)`\n   */\n  HAS_CONTENT_MASK = 0x3FFFFF,\n\n  /**\n   * bit 23..24   wcwidth value of cell, takes 2 bits (ranges from 0..2)\n   *              read:   `width = (content & Content.widthMask) >> Content.widthShift;`\n   *                      `hasWidth = content & Content.widthMask;`\n   *                      as long as wcwidth is highest value in `content`:\n   *                      `width = content >> Content.widthShift;`\n   *              write:  `content |= (width << Content.widthShift) & Content.widthMask;`\n   *                      shortcut if precondition `0 <= width <= 3` is met:\n   *                      `content |= width << Content.widthShift;`\n   */\n  WIDTH_MASK = 0xC00000,   // 3 << 22\n  WIDTH_SHIFT = 22\n}\n\nexport const enum Attributes {\n  /**\n   * bit 1..8     blue in RGB, color in P256 and P16\n   */\n  BLUE_MASK = 0xFF,\n  BLUE_SHIFT = 0,\n  PCOLOR_MASK = 0xFF,\n  PCOLOR_SHIFT = 0,\n\n  /**\n   * bit 9..16    green in RGB\n   */\n  GREEN_MASK = 0xFF00,\n  GREEN_SHIFT = 8,\n\n  /**\n   * bit 17..24   red in RGB\n   */\n  RED_MASK = 0xFF0000,\n  RED_SHIFT = 16,\n\n  /**\n   * bit 25..26   color mode: DEFAULT (0) | P16 (1) | P256 (2) | RGB (3)\n   */\n  CM_MASK = 0x3000000,\n  CM_DEFAULT = 0,\n  CM_P16 = 0x1000000,\n  CM_P256 = 0x2000000,\n  CM_RGB = 0x3000000,\n\n  /**\n   * bit 1..24  RGB room\n   */\n  RGB_MASK = 0xFFFFFF\n}\n\nexport const enum FgFlags {\n  /**\n   * bit 27..31 (32th bit unused)\n   */\n  INVERSE = 0x4000000,\n  BOLD = 0x8000000,\n  UNDERLINE = 0x10000000,\n  BLINK = 0x20000000,\n  INVISIBLE = 0x40000000\n}\n\nexport const enum BgFlags {\n  /**\n   * bit 27..32 (upper 4 unused)\n   */\n  ITALIC = 0x4000000,\n  DIM = 0x8000000\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CharData, ICellData } from 'common/Types';\nimport { stringFromCodePoint } from 'common/input/TextDecoder';\nimport { CHAR_DATA_CHAR_INDEX, CHAR_DATA_WIDTH_INDEX, CHAR_DATA_ATTR_INDEX, Content } from 'common/buffer/Constants';\nimport { AttributeData } from 'common/buffer/AttributeData';\n\n/**\n * CellData - represents a single Cell in the terminal buffer.\n */\nexport class CellData extends AttributeData implements ICellData {\n  /** Helper to create CellData from CharData. */\n  public static fromCharData(value: CharData): CellData {\n    const obj = new CellData();\n    obj.setFromCharData(value);\n    return obj;\n  }\n  /** Primitives from terminal buffer. */\n  public content: number = 0;\n  public fg: number = 0;\n  public bg: number = 0;\n  public combinedData: string = '';\n  /** Whether cell contains a combined string. */\n  public isCombined(): number {\n    return this.content & Content.IS_COMBINED_MASK;\n  }\n  /** Width of the cell. */\n  public getWidth(): number {\n    return this.content >> Content.WIDTH_SHIFT;\n  }\n  /** JS string of the content. */\n  public getChars(): string {\n    if (this.content & Content.IS_COMBINED_MASK) {\n      return this.combinedData;\n    }\n    if (this.content & Content.CODEPOINT_MASK) {\n      return stringFromCodePoint(this.content & Content.CODEPOINT_MASK);\n    }\n    return '';\n  }\n  /**\n   * Codepoint of cell\n   * Note this returns the UTF32 codepoint of single chars,\n   * if content is a combined string it returns the codepoint\n   * of the last char in string to be in line with code in CharData.\n   * */\n  public getCode(): number {\n    return (this.isCombined())\n      ? this.combinedData.charCodeAt(this.combinedData.length - 1)\n      : this.content & Content.CODEPOINT_MASK;\n  }\n  /** Set data from CharData */\n  public setFromCharData(value: CharData): void {\n    this.fg = value[CHAR_DATA_ATTR_INDEX];\n    this.bg = 0;\n    let combined = false;\n    // surrogates and combined strings need special treatment\n    if (value[CHAR_DATA_CHAR_INDEX].length > 2) {\n      combined = true;\n    }\n    else if (value[CHAR_DATA_CHAR_INDEX].length === 2) {\n      const code = value[CHAR_DATA_CHAR_INDEX].charCodeAt(0);\n      // if the 2-char string is a surrogate create single codepoint\n      // everything else is combined\n      if (0xD800 <= code && code <= 0xDBFF) {\n        const second = value[CHAR_DATA_CHAR_INDEX].charCodeAt(1);\n        if (0xDC00 <= second && second <= 0xDFFF) {\n          this.content = ((code - 0xD800) * 0x400 + second - 0xDC00 + 0x10000) | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n        }\n        else {\n          combined = true;\n        }\n      }\n      else {\n        combined = true;\n      }\n    }\n    else {\n      this.content = value[CHAR_DATA_CHAR_INDEX].charCodeAt(0) | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    }\n    if (combined) {\n      this.combinedData = value[CHAR_DATA_CHAR_INDEX];\n      this.content = Content.IS_COMBINED_MASK | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    }\n  }\n  /** Get data as CharData. */\n  public getAsCharData(): CharData {\n    return [this.fg, this.getChars(), this.getWidth(), this.getCode()];\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IEvent } from 'common/EventEmitter';\nimport { IRenderDimensions, IRenderer, CharacterJoinerHandler } from 'browser/renderer/Types';\nimport { IColorSet } from 'browser/Types';\nimport { ISelectionRedrawRequestEvent } from 'browser/selection/Types';\nimport { createDecorator } from 'common/services/ServiceRegistry';\nimport { IDisposable } from 'common/Types';\n\nexport const ICharSizeService = createDecorator<ICharSizeService>('CharSizeService');\nexport interface ICharSizeService {\n  serviceBrand: any;\n\n  readonly width: number;\n  readonly height: number;\n  readonly hasValidSize: boolean;\n\n  readonly onCharSizeChange: IEvent<void>;\n\n  measure(): void;\n}\n\nexport const IMouseService = createDecorator<IMouseService>('MouseService');\nexport interface IMouseService {\n  serviceBrand: any;\n\n  getCoords(event: {clientX: number, clientY: number}, element: HTMLElement, colCount: number, rowCount: number, isSelection?: boolean): [number, number] | undefined;\n  getRawByteCoords(event: MouseEvent, element: HTMLElement, colCount: number, rowCount: number): { x: number, y: number } | undefined;\n}\n\nexport const IRenderService = createDecorator<IRenderService>('RenderService');\nexport interface IRenderService extends IDisposable {\n  serviceBrand: any;\n\n  onDimensionsChange: IEvent<IRenderDimensions>;\n  onRender: IEvent<{ start: number, end: number }>;\n  onRefreshRequest: IEvent<{ start: number, end: number }>;\n\n  dimensions: IRenderDimensions;\n\n  refreshRows(start: number, end: number): void;\n  resize(cols: number, rows: number): void;\n  changeOptions(): void;\n  setRenderer(renderer: IRenderer): void;\n  setColors(colors: IColorSet): void;\n  onDevicePixelRatioChange(): void;\n  onResize(cols: number, rows: number): void;\n  // TODO: Is this useful when we have onResize?\n  onCharSizeChanged(): void;\n  onBlur(): void;\n  onFocus(): void;\n  onSelectionChanged(start: [number, number], end: [number, number], columnSelectMode: boolean): void;\n  onCursorMove(): void;\n  clear(): void;\n  registerCharacterJoiner(handler: CharacterJoinerHandler): number;\n  deregisterCharacterJoiner(joinerId: number): boolean;\n}\n\nexport const ISelectionService = createDecorator<ISelectionService>('SelectionService');\nexport interface ISelectionService {\n  serviceBrand: any;\n\n  readonly selectionText: string;\n  readonly hasSelection: boolean;\n  readonly selectionStart: [number, number] | undefined;\n  readonly selectionEnd: [number, number] | undefined;\n\n  readonly onLinuxMouseSelection: IEvent<string>;\n  readonly onRedrawRequest: IEvent<ISelectionRedrawRequestEvent>;\n  readonly onSelectionChange: IEvent<void>;\n\n  disable(): void;\n  enable(): void;\n  reset(): void;\n  setSelection(row: number, col: number, length: number): void;\n  selectAll(): void;\n  selectLines(start: number, end: number): void;\n  clearSelection(): void;\n  isClickInSelection(event: MouseEvent): boolean;\n  selectWordAtCursor(event: MouseEvent): void;\n  shouldColumnSelect(event: KeyboardEvent | MouseEvent): boolean;\n  shouldForceSelection(event: MouseEvent): boolean;\n  refresh(isLinuxMouseSelection?: boolean): void;\n  onMouseDown(event: MouseEvent): void;\n}\n\nexport const ISoundService = createDecorator<ISoundService>('SoundService');\nexport interface ISoundService {\n  serviceBrand: any;\n\n  playBellSound(): void;\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IAttributeData, IColorRGB } from 'common/Types';\nimport { Attributes, FgFlags, BgFlags } from 'common/buffer/Constants';\n\nexport class AttributeData implements IAttributeData {\n  static toColorRGB(value: number): IColorRGB {\n    return [\n      value >>> Attributes.RED_SHIFT & 255,\n      value >>> Attributes.GREEN_SHIFT & 255,\n      value & 255\n    ];\n  }\n  static fromColorRGB(value: IColorRGB): number {\n    return (value[0] & 255) << Attributes.RED_SHIFT | (value[1] & 255) << Attributes.GREEN_SHIFT | value[2] & 255;\n  }\n\n  public clone(): IAttributeData {\n    const newObj = new AttributeData();\n    newObj.fg = this.fg;\n    newObj.bg = this.bg;\n    return newObj;\n  }\n\n  // data\n  public fg: number = 0;\n  public bg: number = 0;\n\n  // flags\n  public isInverse(): number   { return this.fg & FgFlags.INVERSE; }\n  public isBold(): number      { return this.fg & FgFlags.BOLD; }\n  public isUnderline(): number { return this.fg & FgFlags.UNDERLINE; }\n  public isBlink(): number     { return this.fg & FgFlags.BLINK; }\n  public isInvisible(): number { return this.fg & FgFlags.INVISIBLE; }\n  public isItalic(): number    { return this.bg & BgFlags.ITALIC; }\n  public isDim(): number       { return this.bg & BgFlags.DIM; }\n\n  // color modes\n  public getFgColorMode(): number { return this.fg & Attributes.CM_MASK; }\n  public getBgColorMode(): number { return this.bg & Attributes.CM_MASK; }\n  public isFgRGB(): boolean       { return (this.fg & Attributes.CM_MASK) === Attributes.CM_RGB; }\n  public isBgRGB(): boolean       { return (this.bg & Attributes.CM_MASK) === Attributes.CM_RGB; }\n  public isFgPalette(): boolean   { return (this.fg & Attributes.CM_MASK) === Attributes.CM_P16 || (this.fg & Attributes.CM_MASK) === Attributes.CM_P256; }\n  public isBgPalette(): boolean   { return (this.bg & Attributes.CM_MASK) === Attributes.CM_P16 || (this.bg & Attributes.CM_MASK) === Attributes.CM_P256; }\n  public isFgDefault(): boolean   { return (this.fg & Attributes.CM_MASK) === 0; }\n  public isBgDefault(): boolean   { return (this.bg & Attributes.CM_MASK) === 0; }\n\n  // colors\n  public getFgColor(): number {\n    switch (this.fg & Attributes.CM_MASK) {\n      case Attributes.CM_P16:\n      case Attributes.CM_P256:  return this.fg & Attributes.PCOLOR_MASK;\n      case Attributes.CM_RGB:   return this.fg & Attributes.RGB_MASK;\n      default:                  return -1;  // CM_DEFAULT defaults to -1\n    }\n  }\n  public getBgColor(): number {\n    switch (this.bg & Attributes.CM_MASK) {\n      case Attributes.CM_P16:\n      case Attributes.CM_P256:  return this.bg & Attributes.PCOLOR_MASK;\n      case Attributes.CM_RGB:   return this.bg & Attributes.RGB_MASK;\n      default:                  return -1;  // CM_DEFAULT defaults to -1\n    }\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\n\n/**\n * Adds a disposable listener to a node in the DOM, returning the disposable.\n * @param type The event type.\n * @param handler The handler for the listener.\n */\nexport function addDisposableDomListener(\n  node: Element | Window | Document,\n  type: string,\n  handler: (e: any) => void,\n  useCapture?: boolean\n): IDisposable {\n  node.addEventListener(type, handler, useCapture);\n  return {\n    dispose: () => {\n      if (!handler) {\n        // Already disposed\n        return;\n      }\n      node.removeEventListener(type, handler, useCapture);\n    }\n  };\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/**\n * Polyfill - Convert UTF32 codepoint into JS string.\n * Note: The built-in String.fromCodePoint happens to be much slower\n *       due to additional sanity checks. We can avoid them since\n *       we always operate on legal UTF32 (granted by the input decoders)\n *       and use this faster version instead.\n */\nexport function stringFromCodePoint(codePoint: number): string {\n  if (codePoint > 0xFFFF) {\n    codePoint -= 0x10000;\n    return String.fromCharCode((codePoint >> 10) + 0xD800) + String.fromCharCode((codePoint % 0x400) + 0xDC00);\n  }\n  return String.fromCharCode(codePoint);\n}\n\n/**\n * Convert UTF32 char codes into JS string.\n * Basically the same as `stringFromCodePoint` but for multiple codepoints\n * in a loop (which is a lot faster).\n */\nexport function utf32ToString(data: Uint32Array, start: number = 0, end: number = data.length): string {\n  let result = '';\n  for (let i = start; i < end; ++i) {\n    let codepoint = data[i];\n    if (codepoint > 0xFFFF) {\n      // JS strings are encoded as UTF16, thus a non BMP codepoint gets converted into a surrogate pair\n      // conversion rules:\n      //  - subtract 0x10000 from code point, leaving a 20 bit number\n      //  - add high 10 bits to 0xD800  --> first surrogate\n      //  - add low 10 bits to 0xDC00   --> second surrogate\n      codepoint -= 0x10000;\n      result += String.fromCharCode((codepoint >> 10) + 0xD800) + String.fromCharCode((codepoint % 0x400) + 0xDC00);\n    } else {\n      result += String.fromCharCode(codepoint);\n    }\n  }\n  return result;\n}\n\n/**\n * StringToUtf32 - decodes UTF16 sequences into UTF32 codepoints.\n * To keep the decoder in line with JS strings it handles single surrogates as UCS2.\n */\nexport class StringToUtf32 {\n  private _interim: number = 0;\n\n  /**\n   * Clears interim and resets decoder to clean state.\n   */\n  public clear(): void {\n    this._interim = 0;\n  }\n\n  /**\n   * Decode JS string to UTF32 codepoints.\n   * The methods assumes stream input and will store partly transmitted\n   * surrogate pairs and decode them with the next data chunk.\n   * Note: The method does no bound checks for target, therefore make sure\n   * the provided input data does not exceed the size of `target`.\n   * Returns the number of written codepoints in `target`.\n   */\n  decode(input: string, target: Uint32Array): number {\n    const length = input.length;\n\n    if (!length) {\n      return 0;\n    }\n\n    let size = 0;\n    let startPos = 0;\n\n    // handle leftover surrogate high\n    if (this._interim) {\n      const second = input.charCodeAt(startPos++);\n      if (0xDC00 <= second && second <= 0xDFFF) {\n        target[size++] = (this._interim - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n      } else {\n        // illegal codepoint (USC2 handling)\n        target[size++] = this._interim;\n        target[size++] = second;\n      }\n      this._interim = 0;\n    }\n\n    for (let i = startPos; i < length; ++i) {\n      const code = input.charCodeAt(i);\n      // surrogate pair first\n      if (0xD800 <= code && code <= 0xDBFF) {\n        if (++i >= length) {\n          this._interim = code;\n          return size;\n        }\n        const second = input.charCodeAt(i);\n        if (0xDC00 <= second && second <= 0xDFFF) {\n          target[size++] = (code - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n        } else {\n          // illegal codepoint (USC2 handling)\n          target[size++] = code;\n          target[size++] = second;\n        }\n        continue;\n      }\n      target[size++] = code;\n    }\n    return size;\n  }\n}\n\n/**\n * Utf8Decoder - decodes UTF8 byte sequences into UTF32 codepoints.\n */\nexport class Utf8ToUtf32 {\n  public interim: Uint8Array = new Uint8Array(3);\n\n  /**\n   * Clears interim bytes and resets decoder to clean state.\n   */\n  public clear(): void {\n    this.interim.fill(0);\n  }\n\n  /**\n   * Decodes UTF8 byte sequences in `input` to UTF32 codepoints in `target`.\n   * The methods assumes stream input and will store partly transmitted bytes\n   * and decode them with the next data chunk.\n   * Note: The method does no bound checks for target, therefore make sure\n   * the provided data chunk does not exceed the size of `target`.\n   * Returns the number of written codepoints in `target`.\n   */\n  decode(input: Uint8Array, target: Uint32Array): number {\n    const length = input.length;\n\n    if (!length) {\n      return 0;\n    }\n\n    let size = 0;\n    let byte1: number;\n    let byte2: number;\n    let byte3: number;\n    let byte4: number;\n    let codepoint = 0;\n    let startPos = 0;\n\n    // handle leftover bytes\n    if (this.interim[0]) {\n      let discardInterim = false;\n      let cp = this.interim[0];\n      cp &= ((((cp & 0xE0) === 0xC0)) ? 0x1F : (((cp & 0xF0) === 0xE0)) ? 0x0F : 0x07);\n      let pos = 0;\n      let tmp: number;\n      while ((tmp = this.interim[++pos] & 0x3F) && pos < 4) {\n        cp <<= 6;\n        cp |= tmp;\n      }\n      // missing bytes - read ahead from input\n      const type = (((this.interim[0] & 0xE0) === 0xC0)) ? 2 : (((this.interim[0] & 0xF0) === 0xE0)) ? 3 : 4;\n      const missing = type - pos;\n      while (startPos < missing) {\n        if (startPos >= length) {\n          return 0;\n        }\n        tmp = input[startPos++];\n        if ((tmp & 0xC0) !== 0x80) {\n          // wrong continuation, discard interim bytes completely\n          startPos--;\n          discardInterim = true;\n          break;\n        } else {\n          // need to save so we can continue short inputs in next call\n          this.interim[pos++] = tmp;\n          cp <<= 6;\n          cp |= tmp & 0x3F;\n        }\n      }\n      if (!discardInterim) {\n        // final test is type dependent\n        if (type === 2) {\n          if (cp < 0x80) {\n            // wrong starter byte\n            startPos--;\n          } else {\n            target[size++] = cp;\n          }\n        } else if (type === 3) {\n          if (cp < 0x0800 || (cp >= 0xD800 && cp <= 0xDFFF)) {\n            // illegal codepoint\n          } else {\n            target[size++] = cp;\n          }\n        } else {\n          if (codepoint < 0x010000 || codepoint > 0x10FFFF) {\n            // illegal codepoint\n          } else {\n            target[size++] = cp;\n          }\n        }\n      }\n      this.interim.fill(0);\n    }\n\n    // loop through input\n    const fourStop = length - 4;\n    let i = startPos;\n    while (i < length) {\n      /**\n       * ASCII shortcut with loop unrolled to 4 consecutive ASCII chars.\n       * This is a compromise between speed gain for ASCII\n       * and penalty for non ASCII:\n       * For best ASCII performance the char should be stored directly into target,\n       * but even a single attempt to write to target and compare afterwards\n       * penalizes non ASCII really bad (-50%), thus we load the char into byteX first,\n       * which reduces ASCII performance by ~15%.\n       * This trial for ASCII reduces non ASCII performance by ~10% which seems acceptible\n       * compared to the gains.\n       * Note that this optimization only takes place for 4 consecutive ASCII chars,\n       * for any shorter it bails out. Worst case - all 4 bytes being read but\n       * thrown away due to the last being a non ASCII char (-10% performance).\n       */\n      while (i < fourStop\n        && !((byte1 = input[i]) & 0x80)\n        && !((byte2 = input[i + 1]) & 0x80)\n        && !((byte3 = input[i + 2]) & 0x80)\n        && !((byte4 = input[i + 3]) & 0x80))\n      {\n        target[size++] = byte1;\n        target[size++] = byte2;\n        target[size++] = byte3;\n        target[size++] = byte4;\n        i += 4;\n      }\n\n      // reread byte1\n      byte1 = input[i++];\n\n      // 1 byte\n      if (byte1 < 0x80) {\n        target[size++] = byte1;\n\n        // 2 bytes\n      } else if ((byte1 & 0xE0) === 0xC0) {\n        if (i >= length) {\n          this.interim[0] = byte1;\n          return size;\n        }\n        byte2 = input[i++];\n        if ((byte2 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        codepoint = (byte1 & 0x1F) << 6 | (byte2 & 0x3F);\n        if (codepoint < 0x80) {\n          // wrong starter byte\n          i--;\n          continue;\n        }\n        target[size++] = codepoint;\n\n        // 3 bytes\n      } else if ((byte1 & 0xF0) === 0xE0) {\n        if (i >= length) {\n          this.interim[0] = byte1;\n          return size;\n        }\n        byte2 = input[i++];\n        if ((byte2 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        if (i >= length) {\n          this.interim[0] = byte1;\n          this.interim[1] = byte2;\n          return size;\n        }\n        byte3 = input[i++];\n        if ((byte3 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        codepoint = (byte1 & 0x0F) << 12 | (byte2 & 0x3F) << 6 | (byte3 & 0x3F);\n        if (codepoint < 0x0800 || (codepoint >= 0xD800 && codepoint <= 0xDFFF)) {\n          // illegal codepoint, no i-- here\n          continue;\n        }\n        target[size++] = codepoint;\n\n        // 4 bytes\n      } else if ((byte1 & 0xF8) === 0xF0) {\n        if (i >= length) {\n          this.interim[0] = byte1;\n          return size;\n        }\n        byte2 = input[i++];\n        if ((byte2 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        if (i >= length) {\n          this.interim[0] = byte1;\n          this.interim[1] = byte2;\n          return size;\n        }\n        byte3 = input[i++];\n        if ((byte3 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        if (i >= length) {\n          this.interim[0] = byte1;\n          this.interim[1] = byte2;\n          this.interim[2] = byte3;\n          return size;\n        }\n        byte4 = input[i++];\n        if ((byte4 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        codepoint = (byte1 & 0x07) << 18 | (byte2 & 0x3F) << 12 | (byte3 & 0x3F) << 6 | (byte4 & 0x3F);\n        if (codepoint < 0x010000 || codepoint > 0x10FFFF) {\n          // illegal codepoint, no i-- here\n          continue;\n        }\n        target[size++] = codepoint;\n      } else {\n        // illegal byte, just skip\n      }\n    }\n    return size;\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport const INVERTED_DEFAULT_COLOR = 257;\nexport const DIM_OPACITY = 0.5;\n\nexport const CHAR_ATLAS_CELL_SPACING = 1;\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\ninterface INavigator {\n  userAgent: string;\n  language: string;\n  platform: string;\n}\n\n// We're declaring a navigator global here as we expect it in all runtimes (node and browser), but\n// we want this module to live in common.\ndeclare const navigator: INavigator;\n\nconst isNode = (typeof navigator === 'undefined') ? true : false;\nconst userAgent = (isNode) ? 'node' : navigator.userAgent;\nconst platform = (isNode) ? 'node' : navigator.platform;\n\nexport const isFirefox = !!~userAgent.indexOf('Firefox');\nexport const isSafari = /^((?!chrome|android).)*safari/i.test(userAgent);\n\n// Find the users platform. We use this to interpret the meta key\n// and ISO third level shifts.\n// http://stackoverflow.com/q/19877924/577598\nexport const isMac = contains(['Macintosh', 'MacIntel', 'MacPPC', 'Mac68K'], platform);\nexport const isIpad = platform === 'iPad';\nexport const isIphone = platform === 'iPhone';\nexport const isWindows = contains(['Windows', 'Win16', 'Win32', 'WinCE'], platform);\nexport const isLinux = platform.indexOf('Linux') >= 0;\n\n/**\n * Return if the given array contains the given element\n * @param arr The array to search for the given element.\n * @param el The element to look for into the array\n */\nfunction contains(arr: any[], el: any): boolean {\n  return arr.indexOf(el) >= 0;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/**\n * C0 control codes\n * See = https://en.wikipedia.org/wiki/C0_and_C1_control_codes\n */\nexport namespace C0 {\n  /** Null (Caret = ^@, C = \\0) */\n  export const NUL = '\\x00';\n  /** Start of Heading (Caret = ^A) */\n  export const SOH = '\\x01';\n  /** Start of Text (Caret = ^B) */\n  export const STX = '\\x02';\n  /** End of Text (Caret = ^C) */\n  export const ETX = '\\x03';\n  /** End of Transmission (Caret = ^D) */\n  export const EOT = '\\x04';\n  /** Enquiry (Caret = ^E) */\n  export const ENQ = '\\x05';\n  /** Acknowledge (Caret = ^F) */\n  export const ACK = '\\x06';\n  /** Bell (Caret = ^G, C = \\a) */\n  export const BEL = '\\x07';\n  /** Backspace (Caret = ^H, C = \\b) */\n  export const BS  = '\\x08';\n  /** Character Tabulation, Horizontal Tabulation (Caret = ^I, C = \\t) */\n  export const HT  = '\\x09';\n  /** Line Feed (Caret = ^J, C = \\n) */\n  export const LF  = '\\x0a';\n  /** Line Tabulation, Vertical Tabulation (Caret = ^K, C = \\v) */\n  export const VT  = '\\x0b';\n  /** Form Feed (Caret = ^L, C = \\f) */\n  export const FF  = '\\x0c';\n  /** Carriage Return (Caret = ^M, C = \\r) */\n  export const CR  = '\\x0d';\n  /** Shift Out (Caret = ^N) */\n  export const SO  = '\\x0e';\n  /** Shift In (Caret = ^O) */\n  export const SI  = '\\x0f';\n  /** Data Link Escape (Caret = ^P) */\n  export const DLE = '\\x10';\n  /** Device Control One (XON) (Caret = ^Q) */\n  export const DC1 = '\\x11';\n  /** Device Control Two (Caret = ^R) */\n  export const DC2 = '\\x12';\n  /** Device Control Three (XOFF) (Caret = ^S) */\n  export const DC3 = '\\x13';\n  /** Device Control Four (Caret = ^T) */\n  export const DC4 = '\\x14';\n  /** Negative Acknowledge (Caret = ^U) */\n  export const NAK = '\\x15';\n  /** Synchronous Idle (Caret = ^V) */\n  export const SYN = '\\x16';\n  /** End of Transmission Block (Caret = ^W) */\n  export const ETB = '\\x17';\n  /** Cancel (Caret = ^X) */\n  export const CAN = '\\x18';\n  /** End of Medium (Caret = ^Y) */\n  export const EM  = '\\x19';\n  /** Substitute (Caret = ^Z) */\n  export const SUB = '\\x1a';\n  /** Escape (Caret = ^[, C = \\e) */\n  export const ESC = '\\x1b';\n  /** File Separator (Caret = ^\\) */\n  export const FS  = '\\x1c';\n  /** Group Separator (Caret = ^]) */\n  export const GS  = '\\x1d';\n  /** Record Separator (Caret = ^^) */\n  export const RS  = '\\x1e';\n  /** Unit Separator (Caret = ^_) */\n  export const US  = '\\x1f';\n  /** Space */\n  export const SP  = '\\x20';\n  /** Delete (Caret = ^?) */\n  export const DEL = '\\x7f';\n}\n\n/**\n * C1 control codes\n * See = https://en.wikipedia.org/wiki/C0_and_C1_control_codes\n */\nexport namespace C1 {\n  /** padding character */\n  export const PAD = '\\x80';\n  /** High Octet Preset */\n  export const HOP = '\\x81';\n  /** Break Permitted Here */\n  export const BPH = '\\x82';\n  /** No Break Here */\n  export const NBH = '\\x83';\n  /** Index */\n  export const IND = '\\x84';\n  /** Next Line */\n  export const NEL = '\\x85';\n  /** Start of Selected Area */\n  export const SSA = '\\x86';\n  /** End of Selected Area */\n  export const ESA = '\\x87';\n  /** Horizontal Tabulation Set */\n  export const HTS = '\\x88';\n  /** Horizontal Tabulation With Justification */\n  export const HTJ = '\\x89';\n  /** Vertical Tabulation Set */\n  export const VTS = '\\x8a';\n  /** Partial Line Down */\n  export const PLD = '\\x8b';\n  /** Partial Line Up */\n  export const PLU = '\\x8c';\n  /** Reverse Index */\n  export const RI = '\\x8d';\n  /** Single-Shift 2 */\n  export const SS2 = '\\x8e';\n  /** Single-Shift 3 */\n  export const SS3 = '\\x8f';\n  /** Device Control String */\n  export const DCS = '\\x90';\n  /** Private Use 1 */\n  export const PU1 = '\\x91';\n  /** Private Use 2 */\n  export const PU2 = '\\x92';\n  /** Set Transmit State */\n  export const STS = '\\x93';\n  /** Destructive backspace, intended to eliminate ambiguity about meaning of BS. */\n  export const CCH = '\\x94';\n  /** Message Waiting */\n  export const MW = '\\x95';\n  /** Start of Protected Area */\n  export const SPA = '\\x96';\n  /** End of Protected Area */\n  export const EPA = '\\x97';\n  /** Start of String */\n  export const SOS = '\\x98';\n  /** Single Graphic Character Introducer */\n  export const SGCI = '\\x99';\n  /** Single Character Introducer */\n  export const SCI = '\\x9a';\n  /** Control Sequence Introducer */\n  export const CSI = '\\x9b';\n  /** String Terminator */\n  export const ST = '\\x9c';\n  /** Operating System Command */\n  export const OSC = '\\x9d';\n  /** Privacy Message */\n  export const PM = '\\x9e';\n  /** Application Program Command */\n  export const APC = '\\x9f';\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderDimensions, IRenderLayer } from 'browser/renderer/Types';\nimport { ICellData } from 'common/Types';\nimport { DEFAULT_COLOR, WHITESPACE_CELL_CHAR, WHITESPACE_CELL_CODE } from 'common/buffer/Constants';\nimport { IGlyphIdentifier } from 'browser/renderer/atlas/Types';\nimport { DIM_OPACITY, INVERTED_DEFAULT_COLOR } from 'browser/renderer/atlas/Constants';\nimport { BaseCharAtlas } from 'browser/renderer/atlas/BaseCharAtlas';\nimport { acquireCharAtlas } from 'browser/renderer/atlas/CharAtlasCache';\nimport { AttributeData } from 'common/buffer/AttributeData';\nimport { IColorSet } from 'browser/Types';\nimport { CellData } from 'common/buffer/CellData';\nimport { IBufferService, IOptionsService } from 'common/services/Services';\nimport { throwIfFalsy } from 'browser/renderer/RendererUtils';\n\nexport abstract class BaseRenderLayer implements IRenderLayer {\n  private _canvas: HTMLCanvasElement;\n  protected _ctx!: CanvasRenderingContext2D;\n  private _scaledCharWidth: number = 0;\n  private _scaledCharHeight: number = 0;\n  private _scaledCellWidth: number = 0;\n  private _scaledCellHeight: number = 0;\n  private _scaledCharLeft: number = 0;\n  private _scaledCharTop: number = 0;\n\n  protected _charAtlas: BaseCharAtlas | undefined;\n\n  /**\n   * An object that's reused when drawing glyphs in order to reduce GC.\n   */\n  private _currentGlyphIdentifier: IGlyphIdentifier = {\n    chars: '',\n    code: 0,\n    bg: 0,\n    fg: 0,\n    bold: false,\n    dim: false,\n    italic: false\n  };\n\n  constructor(\n    private _container: HTMLElement,\n    id: string,\n    zIndex: number,\n    private _alpha: boolean,\n    protected _colors: IColorSet,\n    private _rendererId: number,\n    protected readonly _bufferService: IBufferService,\n    protected readonly _optionsService: IOptionsService\n  ) {\n    this._canvas = document.createElement('canvas');\n    this._canvas.classList.add(`xterm-${id}-layer`);\n    this._canvas.style.zIndex = zIndex.toString();\n    this._initCanvas();\n    this._container.appendChild(this._canvas);\n  }\n\n  public dispose(): void {\n    this._container.removeChild(this._canvas);\n    if (this._charAtlas) {\n      this._charAtlas.dispose();\n    }\n  }\n\n  private _initCanvas(): void {\n    this._ctx = throwIfFalsy(this._canvas.getContext('2d', {alpha: this._alpha}));\n    // Draw the background if this is an opaque layer\n    if (!this._alpha) {\n      this._clearAll();\n    }\n  }\n\n  public onOptionsChanged(): void {}\n  public onBlur(): void {}\n  public onFocus(): void {}\n  public onCursorMove(): void {}\n  public onGridChanged(startRow: number, endRow: number): void {}\n  public onSelectionChanged(start: [number, number], end: [number, number], columnSelectMode: boolean = false): void {}\n\n  public setColors(colorSet: IColorSet): void {\n    this._refreshCharAtlas(colorSet);\n  }\n\n  protected _setTransparency(alpha: boolean): void {\n    // Do nothing when alpha doesn't change\n    if (alpha === this._alpha) {\n      return;\n    }\n\n    // Create new canvas and replace old one\n    const oldCanvas = this._canvas;\n    this._alpha = alpha;\n    // Cloning preserves properties\n    this._canvas = <HTMLCanvasElement>this._canvas.cloneNode();\n    this._initCanvas();\n    this._container.replaceChild(this._canvas, oldCanvas);\n\n    // Regenerate char atlas and force a full redraw\n    this._refreshCharAtlas(this._colors);\n    this.onGridChanged(0, this._bufferService.rows - 1);\n  }\n\n  /**\n   * Refreshes the char atlas, aquiring a new one if necessary.\n   * @param colorSet The color set to use for the char atlas.\n   */\n  private _refreshCharAtlas(colorSet: IColorSet): void {\n    if (this._scaledCharWidth <= 0 && this._scaledCharHeight <= 0) {\n      return;\n    }\n    this._charAtlas = acquireCharAtlas(this._optionsService.options, this._rendererId, colorSet, this._scaledCharWidth, this._scaledCharHeight);\n    this._charAtlas.warmUp();\n  }\n\n  public resize(dim: IRenderDimensions): void {\n    this._scaledCellWidth = dim.scaledCellWidth;\n    this._scaledCellHeight = dim.scaledCellHeight;\n    this._scaledCharWidth = dim.scaledCharWidth;\n    this._scaledCharHeight = dim.scaledCharHeight;\n    this._scaledCharLeft = dim.scaledCharLeft;\n    this._scaledCharTop = dim.scaledCharTop;\n    this._canvas.width = dim.scaledCanvasWidth;\n    this._canvas.height = dim.scaledCanvasHeight;\n    this._canvas.style.width = `${dim.canvasWidth}px`;\n    this._canvas.style.height = `${dim.canvasHeight}px`;\n\n    // Draw the background if this is an opaque layer\n    if (!this._alpha) {\n      this._clearAll();\n    }\n\n    this._refreshCharAtlas(this._colors);\n  }\n\n  public abstract reset(): void;\n\n  /**\n   * Fills 1+ cells completely. This uses the existing fillStyle on the context.\n   * @param x The column to start at.\n   * @param y The row to start at\n   * @param width The number of columns to fill.\n   * @param height The number of rows to fill.\n   */\n  protected _fillCells(x: number, y: number, width: number, height: number): void {\n    this._ctx.fillRect(\n        x * this._scaledCellWidth,\n        y * this._scaledCellHeight,\n        width * this._scaledCellWidth,\n        height * this._scaledCellHeight);\n  }\n\n  /**\n   * Fills a 1px line (2px on HDPI) at the bottom of the cell. This uses the\n   * existing fillStyle on the context.\n   * @param x The column to fill.\n   * @param y The row to fill.\n   */\n  protected _fillBottomLineAtCells(x: number, y: number, width: number = 1): void {\n    this._ctx.fillRect(\n        x * this._scaledCellWidth,\n        (y + 1) * this._scaledCellHeight - window.devicePixelRatio - 1 /* Ensure it's drawn within the cell */,\n        width * this._scaledCellWidth,\n        window.devicePixelRatio);\n  }\n\n  /**\n   * Fills a 1px line (2px on HDPI) at the left of the cell. This uses the\n   * existing fillStyle on the context.\n   * @param x The column to fill.\n   * @param y The row to fill.\n   */\n  protected _fillLeftLineAtCell(x: number, y: number): void {\n    this._ctx.fillRect(\n        x * this._scaledCellWidth,\n        y * this._scaledCellHeight,\n        window.devicePixelRatio,\n        this._scaledCellHeight);\n  }\n\n  /**\n   * Strokes a 1px rectangle (2px on HDPI) around a cell. This uses the existing\n   * strokeStyle on the context.\n   * @param x The column to fill.\n   * @param y The row to fill.\n   */\n  protected _strokeRectAtCell(x: number, y: number, width: number, height: number): void {\n    this._ctx.lineWidth = window.devicePixelRatio;\n    this._ctx.strokeRect(\n        x * this._scaledCellWidth + window.devicePixelRatio / 2,\n        y * this._scaledCellHeight + (window.devicePixelRatio / 2),\n        width * this._scaledCellWidth - window.devicePixelRatio,\n        (height * this._scaledCellHeight) - window.devicePixelRatio);\n  }\n\n  /**\n   * Clears the entire canvas.\n   */\n  protected _clearAll(): void {\n    if (this._alpha) {\n      this._ctx.clearRect(0, 0, this._canvas.width, this._canvas.height);\n    } else {\n      this._ctx.fillStyle = this._colors.background.css;\n      this._ctx.fillRect(0, 0, this._canvas.width, this._canvas.height);\n    }\n  }\n\n  /**\n   * Clears 1+ cells completely.\n   * @param x The column to start at.\n   * @param y The row to start at.\n   * @param width The number of columns to clear.\n   * @param height The number of rows to clear.\n   */\n  protected _clearCells(x: number, y: number, width: number, height: number): void {\n    if (this._alpha) {\n      this._ctx.clearRect(\n          x * this._scaledCellWidth,\n          y * this._scaledCellHeight,\n          width * this._scaledCellWidth,\n          height * this._scaledCellHeight);\n    } else {\n      this._ctx.fillStyle = this._colors.background.css;\n      this._ctx.fillRect(\n          x * this._scaledCellWidth,\n          y * this._scaledCellHeight,\n          width * this._scaledCellWidth,\n          height * this._scaledCellHeight);\n    }\n  }\n\n  /**\n   * Draws a truecolor character at the cell. The character will be clipped to\n   * ensure that it fits with the cell, including the cell to the right if it's\n   * a wide character. This uses the existing fillStyle on the context.\n   * @param cell The cell data for the character to draw.\n   * @param x The column to draw at.\n   * @param y The row to draw at.\n   * @param color The color of the character.\n   */\n  protected _fillCharTrueColor(cell: CellData, x: number, y: number): void {\n    this._ctx.font = this._getFont(false, false);\n    this._ctx.textBaseline = 'middle';\n    this._clipRow(y);\n    this._ctx.fillText(\n        cell.getChars(),\n        x * this._scaledCellWidth + this._scaledCharLeft,\n        y * this._scaledCellHeight + this._scaledCharTop + this._scaledCharHeight / 2);\n  }\n\n  /**\n   * Draws one or more characters at a cell. If possible this will draw using\n   * the character atlas to reduce draw time.\n   * @param chars The character or characters.\n   * @param code The character code.\n   * @param width The width of the characters.\n   * @param x The column to draw at.\n   * @param y The row to draw at.\n   * @param fg The foreground color, in the format stored within the attributes.\n   * @param bg The background color, in the format stored within the attributes.\n   * This is used to validate whether a cached image can be used.\n   * @param bold Whether the text is bold.\n   */\n  protected _drawChars(cell: ICellData, x: number, y: number): void {\n\n    // skip cache right away if we draw in RGB\n    // Note: to avoid bad runtime JoinedCellData will be skipped\n    //       in the cache handler itself (atlasDidDraw == false) and\n    //       fall through to uncached later down below\n    if (cell.isFgRGB() || cell.isBgRGB()) {\n      this._drawUncachedChars(cell, x, y);\n      return;\n    }\n\n    let fg;\n    let bg;\n    if (cell.isInverse()) {\n      fg = (cell.isBgDefault()) ? INVERTED_DEFAULT_COLOR : cell.getBgColor();\n      bg = (cell.isFgDefault()) ? INVERTED_DEFAULT_COLOR : cell.getFgColor();\n    } else {\n      bg = (cell.isBgDefault()) ? DEFAULT_COLOR : cell.getBgColor();\n      fg = (cell.isFgDefault()) ? DEFAULT_COLOR : cell.getFgColor();\n    }\n\n    const drawInBrightColor = this._optionsService.options.drawBoldTextInBrightColors && cell.isBold() && fg < 8 && fg !== INVERTED_DEFAULT_COLOR;\n\n    fg += drawInBrightColor ? 8 : 0;\n    this._currentGlyphIdentifier.chars = cell.getChars() || WHITESPACE_CELL_CHAR;\n    this._currentGlyphIdentifier.code = cell.getCode() || WHITESPACE_CELL_CODE;\n    this._currentGlyphIdentifier.bg = bg;\n    this._currentGlyphIdentifier.fg = fg;\n    this._currentGlyphIdentifier.bold = !!cell.isBold();\n    this._currentGlyphIdentifier.dim = !!cell.isDim();\n    this._currentGlyphIdentifier.italic = !!cell.isItalic();\n    const atlasDidDraw = this._charAtlas && this._charAtlas.draw(\n      this._ctx,\n      this._currentGlyphIdentifier,\n      x * this._scaledCellWidth + this._scaledCharLeft,\n      y * this._scaledCellHeight + this._scaledCharTop\n    );\n\n    if (!atlasDidDraw) {\n      this._drawUncachedChars(cell, x, y);\n    }\n  }\n\n  /**\n   * Draws one or more characters at one or more cells. The character(s) will be\n   * clipped to ensure that they fit with the cell(s), including the cell to the\n   * right if the last character is a wide character.\n   * @param chars The character.\n   * @param width The width of the character.\n   * @param fg The foreground color, in the format stored within the attributes.\n   * @param x The column to draw at.\n   * @param y The row to draw at.\n   */\n  private _drawUncachedChars(cell: ICellData, x: number, y: number): void {\n    this._ctx.save();\n    this._ctx.font = this._getFont(!!cell.isBold(), !!cell.isItalic());\n    this._ctx.textBaseline = 'middle';\n\n    if (cell.isInverse()) {\n      if (cell.isBgDefault()) {\n        this._ctx.fillStyle = this._colors.background.css;\n      } else if (cell.isBgRGB()) {\n        this._ctx.fillStyle = `rgb(${AttributeData.toColorRGB(cell.getBgColor()).join(',')})`;\n      } else {\n        this._ctx.fillStyle = this._colors.ansi[cell.getBgColor()].css;\n      }\n    } else {\n      if (cell.isFgDefault()) {\n        this._ctx.fillStyle = this._colors.foreground.css;\n      } else if (cell.isFgRGB()) {\n        this._ctx.fillStyle = `rgb(${AttributeData.toColorRGB(cell.getFgColor()).join(',')})`;\n      } else {\n        let fg = cell.getFgColor();\n        if (this._optionsService.options.drawBoldTextInBrightColors && cell.isBold() && fg < 8) {\n          fg += 8;\n        }\n        this._ctx.fillStyle = this._colors.ansi[fg].css;\n      }\n    }\n\n    this._clipRow(y);\n\n    // Apply alpha to dim the character\n    if (cell.isDim()) {\n      this._ctx.globalAlpha = DIM_OPACITY;\n    }\n    // Draw the character\n    this._ctx.fillText(\n        cell.getChars(),\n        x * this._scaledCellWidth + this._scaledCharLeft,\n        y * this._scaledCellHeight + this._scaledCharTop + this._scaledCharHeight / 2);\n    this._ctx.restore();\n  }\n\n  /**\n   * Clips a row to ensure no pixels will be drawn outside the cells in the row.\n   * @param y The row to clip.\n   */\n  private _clipRow(y: number): void {\n    this._ctx.beginPath();\n    this._ctx.rect(\n        0,\n        y * this._scaledCellHeight,\n        this._bufferService.cols * this._scaledCellWidth,\n        this._scaledCellHeight);\n    this._ctx.clip();\n  }\n\n  /**\n   * Gets the current font.\n   * @param isBold If we should use the bold fontWeight.\n   */\n  protected _getFont(isBold: boolean, isItalic: boolean): string {\n    const fontWeight = isBold ? this._optionsService.options.fontWeightBold : this._optionsService.options.fontWeight;\n    const fontStyle = isItalic ? 'italic' : '';\n\n    return `${fontStyle} ${fontWeight} ${this._optionsService.options.fontSize * window.devicePixelRatio}px ${this._optionsService.options.fontFamily}`;\n  }\n}\n\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n *\n * This was heavily inspired from microsoft/vscode's dependency injection system (MIT).\n */\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IServiceIdentifier } from 'common/services/Services';\n\nconst DI_TARGET = 'di$target';\nconst DI_DEPENDENCIES = 'di$dependencies';\n\nexport const serviceRegistry: Map<string, IServiceIdentifier<any>> = new Map();\n\nexport function getServiceDependencies(ctor: any): { id: IServiceIdentifier<any>, index: number, optional: boolean }[] {\n  return ctor[DI_DEPENDENCIES] || [];\n}\n\nexport function createDecorator<T>(id: string): IServiceIdentifier<T> {\n  if (serviceRegistry.has(id)) {\n    return serviceRegistry.get(id)!;\n  }\n\n  const decorator = <any>function (target: Function, key: string, index: number): any {\n    if (arguments.length !== 3) {\n      throw new Error('@IServiceName-decorator can only be used to decorate a parameter');\n    }\n\n    storeServiceDependency(decorator, target, index);\n  };\n\n  decorator.toString = () => id;\n\n  serviceRegistry.set(id, decorator);\n  return decorator;\n}\n\nfunction storeServiceDependency(id: Function, target: Function, index: number): void {\n  if ((target as any)[DI_TARGET] === target) {\n    (target as any)[DI_DEPENDENCIES].push({ id, index });\n  } else {\n    (target as any)[DI_DEPENDENCIES] = [{ id, index }];\n    (target as any)[DI_TARGET] = target;\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport type TypedArray = Uint8Array | Uint16Array | Uint32Array | Uint8ClampedArray\n  | Int8Array | Int16Array | Int32Array\n  | Float32Array | Float64Array;\n\n\n/**\n * polyfill for TypedArray.fill\n * This is needed to support .fill in all safari versions and IE 11.\n */\nexport function fill<T extends TypedArray>(array: T, value: number, start?: number, end?: number): T {\n  // all modern engines that support .fill\n  if (array.fill) {\n    return array.fill(value, start, end) as T;\n  }\n  return fillFallback(array, value, start, end);\n}\n\nexport function fillFallback<T extends TypedArray>(array: T, value: number, start: number = 0, end: number = array.length): T {\n  // safari and IE 11\n  // since IE 11 does not support Array.prototype.fill either\n  // we cannot use the suggested polyfill from MDN\n  // instead we simply fall back to looping\n  if (start >= array.length) {\n    return array;\n  }\n  start = (array.length + start) % array.length;\n  if (end >= array.length) {\n    end = array.length;\n  } else {\n    end = (array.length + end) % array.length;\n  }\n  for (let i = start; i < end; ++i) {\n    array[i] = value;\n  }\n  return array;\n}\n\n/**\n * Concat two typed arrays `a` and `b`.\n * Returns a new typed array.\n */\nexport function concat<T extends TypedArray>(a: T, b: T): T {\n  const result = new (a.constructor as any)(a.length + b.length);\n  result.set(a);\n  result.set(b, a.length);\n  return result;\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CharData, IBufferLine, ICellData } from 'common/Types';\nimport { stringFromCodePoint } from 'common/input/TextDecoder';\nimport { DEFAULT_COLOR, CHAR_DATA_CHAR_INDEX, CHAR_DATA_WIDTH_INDEX, CHAR_DATA_ATTR_INDEX, NULL_CELL_CHAR, NULL_CELL_WIDTH, NULL_CELL_CODE, WHITESPACE_CELL_CHAR, Content } from 'common/buffer/Constants';\nimport { CellData } from 'common/buffer/CellData';\nimport { AttributeData } from 'common/buffer/AttributeData';\n\n/**\n * buffer memory layout:\n *\n *   |             uint32_t             |        uint32_t         |        uint32_t         |\n *   |             `content`            |          `FG`           |          `BG`           |\n *   | wcwidth(2) comb(1) codepoint(21) | flags(8) R(8) G(8) B(8) | flags(8) R(8) G(8) B(8) |\n */\n\n\n/** typed array slots taken by one cell */\nconst CELL_SIZE = 3;\n\n/**\n * Cell member indices.\n *\n * Direct access:\n *    `content = data[column * CELL_SIZE + Cell.CONTENT];`\n *    `fg = data[column * CELL_SIZE + Cell.FG];`\n *    `bg = data[column * CELL_SIZE + Cell.BG];`\n */\nconst enum Cell {\n  CONTENT = 0,\n  FG = 1, // currently simply holds all known attrs\n  BG = 2  // currently unused\n}\n\nexport const DEFAULT_ATTR_DATA = Object.freeze(new AttributeData());\n\n/**\n * Typed array based bufferline implementation.\n *\n * There are 2 ways to insert data into the cell buffer:\n * - `setCellFromCodepoint` + `addCodepointToCell`\n *   Use these for data that is already UTF32.\n *   Used during normal input in `InputHandler` for faster buffer access.\n * - `setCell`\n *   This method takes a CellData object and stores the data in the buffer.\n *   Use `CellData.fromCharData` to create the CellData object (e.g. from JS string).\n *\n * To retrieve data from the buffer use either one of the primitive methods\n * (if only one particular value is needed) or `loadCell`. For `loadCell` in a loop\n * memory allocs / GC pressure can be greatly reduced by reusing the CellData object.\n */\nexport class BufferLine implements IBufferLine {\n  protected _data: Uint32Array;\n  protected _combined: {[index: number]: string} = {};\n  public length: number;\n\n  constructor(cols: number, fillCellData?: ICellData, public isWrapped: boolean = false) {\n    this._data = new Uint32Array(cols * CELL_SIZE);\n    const cell = fillCellData || CellData.fromCharData([0, NULL_CELL_CHAR, NULL_CELL_WIDTH, NULL_CELL_CODE]);\n    for (let i = 0; i < cols; ++i) {\n      this.setCell(i, cell);\n    }\n    this.length = cols;\n  }\n\n  /**\n   * Get cell data CharData.\n   * @deprecated\n   */\n  public get(index: number): CharData {\n    const content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    const cp = content & Content.CODEPOINT_MASK;\n    return [\n      this._data[index * CELL_SIZE + Cell.FG],\n      (content & Content.IS_COMBINED_MASK)\n        ? this._combined[index]\n        : (cp) ? stringFromCodePoint(cp) : '',\n      content >> Content.WIDTH_SHIFT,\n      (content & Content.IS_COMBINED_MASK)\n        ? this._combined[index].charCodeAt(this._combined[index].length - 1)\n        : cp\n    ];\n  }\n\n  /**\n   * Set cell data from CharData.\n   * @deprecated\n   */\n  public set(index: number, value: CharData): void {\n    this._data[index * CELL_SIZE + Cell.FG] = value[CHAR_DATA_ATTR_INDEX];\n    if (value[CHAR_DATA_CHAR_INDEX].length > 1) {\n      this._combined[index] = value[1];\n      this._data[index * CELL_SIZE + Cell.CONTENT] = index | Content.IS_COMBINED_MASK | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    } else {\n      this._data[index * CELL_SIZE + Cell.CONTENT] = value[CHAR_DATA_CHAR_INDEX].charCodeAt(0) | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    }\n  }\n\n  /**\n   * primitive getters\n   * use these when only one value is needed, otherwise use `loadCell`\n   */\n  public getWidth(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] >> Content.WIDTH_SHIFT;\n  }\n\n  /** Test whether content has width. */\n  public hasWidth(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] & Content.WIDTH_MASK;\n  }\n\n  /** Get FG cell component. */\n  public getFg(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.FG];\n  }\n\n  /** Get BG cell component. */\n  public getBg(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.BG];\n  }\n\n  /**\n   * Test whether contains any chars.\n   * Basically an empty has no content, but other cells might differ in FG/BG\n   * from real empty cells.\n   * */\n  public hasContent(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] & Content.HAS_CONTENT_MASK;\n  }\n\n  /**\n   * Get codepoint of the cell.\n   * To be in line with `code` in CharData this either returns\n   * a single UTF32 codepoint or the last codepoint of a combined string.\n   */\n  public getCodePoint(index: number): number {\n    const content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    if (content & Content.IS_COMBINED_MASK) {\n      return this._combined[index].charCodeAt(this._combined[index].length - 1);\n    }\n    return content & Content.CODEPOINT_MASK;\n  }\n\n  /** Test whether the cell contains a combined string. */\n  public isCombined(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] & Content.IS_COMBINED_MASK;\n  }\n\n  /** Returns the string content of the cell. */\n  public getString(index: number): string {\n    const content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    if (content & Content.IS_COMBINED_MASK) {\n      return this._combined[index];\n    }\n    if (content & Content.CODEPOINT_MASK) {\n      return stringFromCodePoint(content & Content.CODEPOINT_MASK);\n    }\n    // return empty string for empty cells\n    return '';\n  }\n\n  /**\n   * Load data at `index` into `cell`. This is used to access cells in a way that's more friendly\n   * to GC as it significantly reduced the amount of new objects/references needed.\n   */\n  public loadCell(index: number, cell: ICellData): ICellData {\n    const startIndex = index * CELL_SIZE;\n    cell.content = this._data[startIndex + Cell.CONTENT];\n    cell.fg = this._data[startIndex + Cell.FG];\n    cell.bg = this._data[startIndex + Cell.BG];\n    if (cell.content & Content.IS_COMBINED_MASK) {\n      cell.combinedData = this._combined[index];\n    }\n    return cell;\n  }\n\n  /**\n   * Set data at `index` to `cell`.\n   */\n  public setCell(index: number, cell: ICellData): void {\n    if (cell.content & Content.IS_COMBINED_MASK) {\n      this._combined[index] = cell.combinedData;\n    }\n    this._data[index * CELL_SIZE + Cell.CONTENT] = cell.content;\n    this._data[index * CELL_SIZE + Cell.FG] = cell.fg;\n    this._data[index * CELL_SIZE + Cell.BG] = cell.bg;\n  }\n\n  /**\n   * Set cell data from input handler.\n   * Since the input handler see the incoming chars as UTF32 codepoints,\n   * it gets an optimized access method.\n   */\n  public setCellFromCodePoint(index: number, codePoint: number, width: number, fg: number, bg: number): void {\n    this._data[index * CELL_SIZE + Cell.CONTENT] = codePoint | (width << Content.WIDTH_SHIFT);\n    this._data[index * CELL_SIZE + Cell.FG] = fg;\n    this._data[index * CELL_SIZE + Cell.BG] = bg;\n  }\n\n  /**\n   * Add a codepoint to a cell from input handler.\n   * During input stage combining chars with a width of 0 follow and stack\n   * onto a leading char. Since we already set the attrs\n   * by the previous `setDataFromCodePoint` call, we can omit it here.\n   */\n  public addCodepointToCell(index: number, codePoint: number): void {\n    let content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    if (content & Content.IS_COMBINED_MASK) {\n      // we already have a combined string, simply add\n      this._combined[index] += stringFromCodePoint(codePoint);\n    } else {\n      if (content & Content.CODEPOINT_MASK) {\n        // normal case for combining chars:\n        //  - move current leading char + new one into combined string\n        //  - set combined flag\n        this._combined[index] = stringFromCodePoint(content & Content.CODEPOINT_MASK) + stringFromCodePoint(codePoint);\n        content &= ~Content.CODEPOINT_MASK; // set codepoint in buffer to 0\n        content |= Content.IS_COMBINED_MASK;\n      } else {\n        // should not happen - we actually have no data in the cell yet\n        // simply set the data in the cell buffer with a width of 1\n        content = codePoint | (1 << Content.WIDTH_SHIFT);\n      }\n      this._data[index * CELL_SIZE + Cell.CONTENT] = content;\n    }\n  }\n\n  public insertCells(pos: number, n: number, fillCellData: ICellData): void {\n    pos %= this.length;\n    if (n < this.length - pos) {\n      const cell = new CellData();\n      for (let i = this.length - pos - n - 1; i >= 0; --i) {\n        this.setCell(pos + n + i, this.loadCell(pos + i, cell));\n      }\n      for (let i = 0; i < n; ++i) {\n        this.setCell(pos + i, fillCellData);\n      }\n    } else {\n      for (let i = pos; i < this.length; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    }\n  }\n\n  public deleteCells(pos: number, n: number, fillCellData: ICellData): void {\n    pos %= this.length;\n    if (n < this.length - pos) {\n      const cell = new CellData();\n      for (let i = 0; i < this.length - pos - n; ++i) {\n        this.setCell(pos + i, this.loadCell(pos + n + i, cell));\n      }\n      for (let i = this.length - n; i < this.length; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    } else {\n      for (let i = pos; i < this.length; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    }\n  }\n\n  public replaceCells(start: number, end: number, fillCellData: ICellData): void {\n    while (start < end  && start < this.length) {\n      this.setCell(start++, fillCellData);\n    }\n  }\n\n  public resize(cols: number, fillCellData: ICellData): void {\n    if (cols === this.length) {\n      return;\n    }\n    if (cols > this.length) {\n      const data = new Uint32Array(cols * CELL_SIZE);\n      if (this.length) {\n        if (cols * CELL_SIZE < this._data.length) {\n          data.set(this._data.subarray(0, cols * CELL_SIZE));\n        } else {\n          data.set(this._data);\n        }\n      }\n      this._data = data;\n      for (let i = this.length; i < cols; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    } else {\n      if (cols) {\n        const data = new Uint32Array(cols * CELL_SIZE);\n        data.set(this._data.subarray(0, cols * CELL_SIZE));\n        this._data = data;\n        // Remove any cut off combined data\n        const keys = Object.keys(this._combined);\n        for (let i = 0; i < keys.length; i++) {\n          const key = parseInt(keys[i], 10);\n          if (key >= cols) {\n            delete this._combined[key];\n          }\n        }\n      } else {\n        this._data = new Uint32Array(0);\n        this._combined = {};\n      }\n    }\n    this.length = cols;\n  }\n\n  /** fill a line with fillCharData */\n  public fill(fillCellData: ICellData): void {\n    this._combined = {};\n    for (let i = 0; i < this.length; ++i) {\n      this.setCell(i, fillCellData);\n    }\n  }\n\n  /** alter to a full copy of line  */\n  public copyFrom(line: BufferLine): void {\n    if (this.length !== line.length) {\n      this._data = new Uint32Array(line._data);\n    } else {\n      // use high speed copy if lengths are equal\n      this._data.set(line._data);\n    }\n    this.length = line.length;\n    this._combined = {};\n    for (const el in line._combined) {\n      this._combined[el] = line._combined[el];\n    }\n    this.isWrapped = line.isWrapped;\n  }\n\n  /** create a new clone */\n  public clone(): IBufferLine {\n    const newLine = new BufferLine(0);\n    newLine._data = new Uint32Array(this._data);\n    newLine.length = this.length;\n    for (const el in this._combined) {\n      newLine._combined[el] = this._combined[el];\n    }\n    newLine.isWrapped = this.isWrapped;\n    return newLine;\n  }\n\n  public getTrimmedLength(): number {\n    for (let i = this.length - 1; i >= 0; --i) {\n      if ((this._data[i * CELL_SIZE + Cell.CONTENT] & Content.HAS_CONTENT_MASK)) {\n        return i + (this._data[i * CELL_SIZE + Cell.CONTENT] >> Content.WIDTH_SHIFT);\n      }\n    }\n    return 0;\n  }\n\n  public copyCellsFrom(src: BufferLine, srcCol: number, destCol: number, length: number, applyInReverse: boolean): void {\n    const srcData = src._data;\n    if (applyInReverse) {\n      for (let cell = length - 1; cell >= 0; cell--) {\n        for (let i = 0; i < CELL_SIZE; i++) {\n          this._data[(destCol + cell) * CELL_SIZE + i] = srcData[(srcCol + cell) * CELL_SIZE + i];\n        }\n      }\n    } else {\n      for (let cell = 0; cell < length; cell++) {\n        for (let i = 0; i < CELL_SIZE; i++) {\n          this._data[(destCol + cell) * CELL_SIZE + i] = srcData[(srcCol + cell) * CELL_SIZE + i];\n        }\n      }\n    }\n\n    // Move any combined data over as needed\n    const srcCombinedKeys = Object.keys(src._combined);\n    for (let i = 0; i < srcCombinedKeys.length; i++) {\n      const key = parseInt(srcCombinedKeys[i], 10);\n      if (key >= srcCol) {\n        this._combined[key - srcCol + destCol] = src._combined[key];\n      }\n    }\n  }\n\n  public translateToString(trimRight: boolean = false, startCol: number = 0, endCol: number = this.length): string {\n    if (trimRight) {\n      endCol = Math.min(endCol, this.getTrimmedLength());\n    }\n    let result = '';\n    while (startCol < endCol) {\n      const content = this._data[startCol * CELL_SIZE + Cell.CONTENT];\n      const cp = content & Content.CODEPOINT_MASK;\n      result += (content & Content.IS_COMBINED_MASK) ? this._combined[startCol] : (cp) ? stringFromCodePoint(cp) : WHITESPACE_CELL_CHAR;\n      startCol += (content >> Content.WIDTH_SHIFT) || 1; // always advance by 1\n    }\n    return result;\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport let promptLabel = 'Terminal input';\nexport let tooMuchOutput = 'Too much output to announce, navigate to rows manually to read';\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharset } from 'common/Types';\n\n/**\n * The character sets supported by the terminal. These enable several languages\n * to be represented within the terminal with only 8-bit encoding. See ISO 2022\n * for a discussion on character sets. Only VT100 character sets are supported.\n */\nexport const CHARSETS: { [key: string]: ICharset | null } = {};\n\n/**\n * The default character set, US.\n */\nexport const DEFAULT_CHARSET: ICharset | null = CHARSETS['B'];\n\n/**\n * DEC Special Character and Line Drawing Set.\n * Reference: http://vt100.net/docs/vt102-ug/table5-13.html\n * A lot of curses apps use this if they see TERM=xterm.\n * testing: echo -e '\\e(0a\\e(B'\n * The xterm output sometimes seems to conflict with the\n * reference above. xterm seems in line with the reference\n * when running vttest however.\n * The table below now uses xterm's output from vttest.\n */\nCHARSETS['0'] = {\n  '`': '\\u25c6', // '◆'\n  'a': '\\u2592', // '▒'\n  'b': '\\u0009', // '\\t'\n  'c': '\\u000c', // '\\f'\n  'd': '\\u000d', // '\\r'\n  'e': '\\u000a', // '\\n'\n  'f': '\\u00b0', // '°'\n  'g': '\\u00b1', // '±'\n  'h': '\\u2424', // '\\u2424' (NL)\n  'i': '\\u000b', // '\\v'\n  'j': '\\u2518', // '┘'\n  'k': '\\u2510', // '┐'\n  'l': '\\u250c', // '┌'\n  'm': '\\u2514', // '└'\n  'n': '\\u253c', // '┼'\n  'o': '\\u23ba', // '⎺'\n  'p': '\\u23bb', // '⎻'\n  'q': '\\u2500', // '─'\n  'r': '\\u23bc', // '⎼'\n  's': '\\u23bd', // '⎽'\n  't': '\\u251c', // '├'\n  'u': '\\u2524', // '┤'\n  'v': '\\u2534', // '┴'\n  'w': '\\u252c', // '┬'\n  'x': '\\u2502', // '│'\n  'y': '\\u2264', // '≤'\n  'z': '\\u2265', // '≥'\n  '{': '\\u03c0', // 'π'\n  '|': '\\u2260', // '≠'\n  '}': '\\u00a3', // '£'\n  '~': '\\u00b7'  // '·'\n};\n\n/**\n * British character set\n * ESC (A\n * Reference: http://vt100.net/docs/vt220-rm/table2-5.html\n */\nCHARSETS['A'] = {\n  '#': '£'\n};\n\n/**\n * United States character set\n * ESC (B\n */\nCHARSETS['B'] = null;\n\n/**\n * Dutch character set\n * ESC (4\n * Reference: http://vt100.net/docs/vt220-rm/table2-6.html\n */\nCHARSETS['4'] = {\n  '#': '£',\n  '@': '¾',\n  '[': 'ij',\n  '\\\\': '½',\n  ']': '|',\n  '{': '¨',\n  '|': 'f',\n  '}': '¼',\n  '~': '´'\n};\n\n/**\n * Finnish character set\n * ESC (C or ESC (5\n * Reference: http://vt100.net/docs/vt220-rm/table2-7.html\n */\nCHARSETS['C'] =\nCHARSETS['5'] = {\n  '[': 'Ä',\n  '\\\\': 'Ö',\n  ']': 'Å',\n  '^': 'Ü',\n  '`': 'é',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'å',\n  '~': 'ü'\n};\n\n/**\n * French character set\n * ESC (R\n * Reference: http://vt100.net/docs/vt220-rm/table2-8.html\n */\nCHARSETS['R'] = {\n  '#': '£',\n  '@': 'à',\n  '[': '°',\n  '\\\\': 'ç',\n  ']': '§',\n  '{': 'é',\n  '|': 'ù',\n  '}': 'è',\n  '~': '¨'\n};\n\n/**\n * French Canadian character set\n * ESC (Q\n * Reference: http://vt100.net/docs/vt220-rm/table2-9.html\n */\nCHARSETS['Q'] = {\n  '@': 'à',\n  '[': 'â',\n  '\\\\': 'ç',\n  ']': 'ê',\n  '^': 'î',\n  '`': 'ô',\n  '{': 'é',\n  '|': 'ù',\n  '}': 'è',\n  '~': 'û'\n};\n\n/**\n * German character set\n * ESC (K\n * Reference: http://vt100.net/docs/vt220-rm/table2-10.html\n */\nCHARSETS['K'] = {\n  '@': '§',\n  '[': 'Ä',\n  '\\\\': 'Ö',\n  ']': 'Ü',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'ü',\n  '~': 'ß'\n};\n\n/**\n * Italian character set\n * ESC (Y\n * Reference: http://vt100.net/docs/vt220-rm/table2-11.html\n */\nCHARSETS['Y'] = {\n  '#': '£',\n  '@': '§',\n  '[': '°',\n  '\\\\': 'ç',\n  ']': 'é',\n  '`': 'ù',\n  '{': 'à',\n  '|': 'ò',\n  '}': 'è',\n  '~': 'ì'\n};\n\n/**\n * Norwegian/Danish character set\n * ESC (E or ESC (6\n * Reference: http://vt100.net/docs/vt220-rm/table2-12.html\n */\nCHARSETS['E'] =\nCHARSETS['6'] = {\n  '@': 'Ä',\n  '[': 'Æ',\n  '\\\\': 'Ø',\n  ']': 'Å',\n  '^': 'Ü',\n  '`': 'ä',\n  '{': 'æ',\n  '|': 'ø',\n  '}': 'å',\n  '~': 'ü'\n};\n\n/**\n * Spanish character set\n * ESC (Z\n * Reference: http://vt100.net/docs/vt220-rm/table2-13.html\n */\nCHARSETS['Z'] = {\n  '#': '£',\n  '@': '§',\n  '[': '¡',\n  '\\\\': 'Ñ',\n  ']': '¿',\n  '{': '°',\n  '|': 'ñ',\n  '}': 'ç'\n};\n\n/**\n * Swedish character set\n * ESC (H or ESC (7\n * Reference: http://vt100.net/docs/vt220-rm/table2-14.html\n */\nCHARSETS['H'] =\nCHARSETS['7'] = {\n  '@': 'É',\n  '[': 'Ä',\n  '\\\\': 'Ö',\n  ']': 'Å',\n  '^': 'Ü',\n  '`': 'é',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'å',\n  '~': 'ü'\n};\n\n/**\n * Swiss character set\n * ESC (=\n * Reference: http://vt100.net/docs/vt220-rm/table2-15.html\n */\nCHARSETS['='] = {\n  '#': 'ù',\n  '@': 'à',\n  '[': 'é',\n  '\\\\': 'ç',\n  ']': 'ê',\n  '^': 'î',\n  '_': 'è',\n  '`': 'ô',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'ü',\n  '~': 'û'\n};\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { fill } from 'common/TypedArrayUtils';\n\nexport const wcwidth = (function(opts: {nul: number, control: number}): (ucs: number) => number {\n  // extracted from https://www.cl.cam.ac.uk/%7Emgk25/ucs/wcwidth.c\n  // combining characters\n  const COMBINING_BMP = [\n    [0x0300, 0x036F], [0x0483, 0x0486], [0x0488, 0x0489],\n    [0x0591, 0x05BD], [0x05BF, 0x05BF], [0x05C1, 0x05C2],\n    [0x05C4, 0x05C5], [0x05C7, 0x05C7], [0x0600, 0x0603],\n    [0x0610, 0x0615], [0x064B, 0x065E], [0x0670, 0x0670],\n    [0x06D6, 0x06E4], [0x06E7, 0x06E8], [0x06EA, 0x06ED],\n    [0x070F, 0x070F], [0x0711, 0x0711], [0x0730, 0x074A],\n    [0x07A6, 0x07B0], [0x07EB, 0x07F3], [0x0901, 0x0902],\n    [0x093C, 0x093C], [0x0941, 0x0948], [0x094D, 0x094D],\n    [0x0951, 0x0954], [0x0962, 0x0963], [0x0981, 0x0981],\n    [0x09BC, 0x09BC], [0x09C1, 0x09C4], [0x09CD, 0x09CD],\n    [0x09E2, 0x09E3], [0x0A01, 0x0A02], [0x0A3C, 0x0A3C],\n    [0x0A41, 0x0A42], [0x0A47, 0x0A48], [0x0A4B, 0x0A4D],\n    [0x0A70, 0x0A71], [0x0A81, 0x0A82], [0x0ABC, 0x0ABC],\n    [0x0AC1, 0x0AC5], [0x0AC7, 0x0AC8], [0x0ACD, 0x0ACD],\n    [0x0AE2, 0x0AE3], [0x0B01, 0x0B01], [0x0B3C, 0x0B3C],\n    [0x0B3F, 0x0B3F], [0x0B41, 0x0B43], [0x0B4D, 0x0B4D],\n    [0x0B56, 0x0B56], [0x0B82, 0x0B82], [0x0BC0, 0x0BC0],\n    [0x0BCD, 0x0BCD], [0x0C3E, 0x0C40], [0x0C46, 0x0C48],\n    [0x0C4A, 0x0C4D], [0x0C55, 0x0C56], [0x0CBC, 0x0CBC],\n    [0x0CBF, 0x0CBF], [0x0CC6, 0x0CC6], [0x0CCC, 0x0CCD],\n    [0x0CE2, 0x0CE3], [0x0D41, 0x0D43], [0x0D4D, 0x0D4D],\n    [0x0DCA, 0x0DCA], [0x0DD2, 0x0DD4], [0x0DD6, 0x0DD6],\n    [0x0E31, 0x0E31], [0x0E34, 0x0E3A], [0x0E47, 0x0E4E],\n    [0x0EB1, 0x0EB1], [0x0EB4, 0x0EB9], [0x0EBB, 0x0EBC],\n    [0x0EC8, 0x0ECD], [0x0F18, 0x0F19], [0x0F35, 0x0F35],\n    [0x0F37, 0x0F37], [0x0F39, 0x0F39], [0x0F71, 0x0F7E],\n    [0x0F80, 0x0F84], [0x0F86, 0x0F87], [0x0F90, 0x0F97],\n    [0x0F99, 0x0FBC], [0x0FC6, 0x0FC6], [0x102D, 0x1030],\n    [0x1032, 0x1032], [0x1036, 0x1037], [0x1039, 0x1039],\n    [0x1058, 0x1059], [0x1160, 0x11FF], [0x135F, 0x135F],\n    [0x1712, 0x1714], [0x1732, 0x1734], [0x1752, 0x1753],\n    [0x1772, 0x1773], [0x17B4, 0x17B5], [0x17B7, 0x17BD],\n    [0x17C6, 0x17C6], [0x17C9, 0x17D3], [0x17DD, 0x17DD],\n    [0x180B, 0x180D], [0x18A9, 0x18A9], [0x1920, 0x1922],\n    [0x1927, 0x1928], [0x1932, 0x1932], [0x1939, 0x193B],\n    [0x1A17, 0x1A18], [0x1B00, 0x1B03], [0x1B34, 0x1B34],\n    [0x1B36, 0x1B3A], [0x1B3C, 0x1B3C], [0x1B42, 0x1B42],\n    [0x1B6B, 0x1B73], [0x1DC0, 0x1DCA], [0x1DFE, 0x1DFF],\n    [0x200B, 0x200F], [0x202A, 0x202E], [0x2060, 0x2063],\n    [0x206A, 0x206F], [0x20D0, 0x20EF], [0x302A, 0x302F],\n    [0x3099, 0x309A], [0xA806, 0xA806], [0xA80B, 0xA80B],\n    [0xA825, 0xA826], [0xFB1E, 0xFB1E], [0xFE00, 0xFE0F],\n    [0xFE20, 0xFE23], [0xFEFF, 0xFEFF], [0xFFF9, 0xFFFB]\n  ];\n  const COMBINING_HIGH = [\n    [0x10A01, 0x10A03], [0x10A05, 0x10A06], [0x10A0C, 0x10A0F],\n    [0x10A38, 0x10A3A], [0x10A3F, 0x10A3F], [0x1D167, 0x1D169],\n    [0x1D173, 0x1D182], [0x1D185, 0x1D18B], [0x1D1AA, 0x1D1AD],\n    [0x1D242, 0x1D244], [0xE0001, 0xE0001], [0xE0020, 0xE007F],\n    [0xE0100, 0xE01EF]\n  ];\n  // binary search\n  function bisearch(ucs: number, data: number[][]): boolean {\n    let min = 0;\n    let max = data.length - 1;\n    let mid;\n    if (ucs < data[0][0] || ucs > data[max][1]) {\n      return false;\n    }\n    while (max >= min) {\n      mid = (min + max) >> 1;\n      if (ucs > data[mid][1]) {\n        min = mid + 1;\n      } else if (ucs < data[mid][0]) {\n        max = mid - 1;\n      } else {\n        return true;\n      }\n    }\n    return false;\n  }\n  function wcwidthHigh(ucs: number): 0 | 1 | 2 {\n    if (bisearch(ucs, COMBINING_HIGH)) {\n      return 0;\n    }\n    if ((ucs >= 0x20000 && ucs <= 0x2fffd) || (ucs >= 0x30000 && ucs <= 0x3fffd)) {\n      return 2;\n    }\n    return 1;\n  }\n  const control = opts.control | 0;\n\n  // create lookup table for BMP plane\n  const table = new Uint8Array(65536);\n  fill(table, 1);\n  table[0] = opts.nul;\n  // control chars\n  fill(table, opts.control, 1, 32);\n  fill(table, opts.control, 0x7f, 0xa0);\n\n  // apply wide char rules first\n  // wide chars\n  fill(table, 2, 0x1100, 0x1160);\n  table[0x2329] = 2;\n  table[0x232a] = 2;\n  fill(table, 2, 0x2e80, 0xa4d0);\n  table[0x303f] = 1;  // wrongly in last line\n\n  fill(table, 2, 0xac00, 0xd7a4);\n  fill(table, 2, 0xf900, 0xfb00);\n  fill(table, 2, 0xfe10, 0xfe1a);\n  fill(table, 2, 0xfe30, 0xfe70);\n  fill(table, 2, 0xff00, 0xff61);\n  fill(table, 2, 0xffe0, 0xffe7);\n\n  // apply combining last to ensure we overwrite\n  // wrongly wide set chars:\n  //    the original algo evals combining first and falls\n  //    through to wide check so we simply do here the opposite\n  // combining 0\n  for (let r = 0; r < COMBINING_BMP.length; ++r) {\n    fill(table, 0, COMBINING_BMP[r][0], COMBINING_BMP[r][1] + 1);\n  }\n\n  return function (num: number): number {\n    if (num < 32) {\n      return control | 0;\n    }\n    if (num < 127) {\n      return 1;\n    }\n    if (num < 65536) {\n      return table[num];\n    }\n    // do a full search for high codepoints\n    return wcwidthHigh(num);\n  };\n})({nul: 0, control: 0});  // configurable options\n\n/**\n * Get the terminal cell width for a string.\n */\nexport function getStringCellWidth(s: string): number {\n  let result = 0;\n  const length = s.length;\n  for (let i = 0; i < length; ++i) {\n    let code = s.charCodeAt(i);\n    // surrogate pair first\n    if (0xD800 <= code && code <= 0xDBFF) {\n      if (++i >= length) {\n        // this should not happen with strings retrieved from\n        // Buffer.translateToString as it converts from UTF-32\n        // and therefore always should contain the second part\n        // for any other string we still have to handle it somehow:\n        // simply treat the lonely surrogate first as a single char (UCS-2 behavior)\n        return result + wcwidth(code);\n      }\n      const second = s.charCodeAt(i);\n      // convert surrogate pair to high codepoint only for valid second part (UTF-16)\n      // otherwise treat them independently (UCS-2 behavior)\n      if (0xDC00 <= second && second <= 0xDFFF) {\n        code = (code - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n      } else {\n        result += wcwidth(second);\n      }\n    }\n    result += wcwidth(code);\n  }\n  return result;\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IParams, ParamsArray } from 'common/parser/Types';\n\n// max value supported for a single param/subparam (clamped to positive int32 range)\nconst MAX_VALUE = 0x7FFFFFFF;\n// max allowed subparams for a single sequence (hardcoded limitation)\nconst MAX_SUBPARAMS = 256;\n\n/**\n * Params storage class.\n * This type is used by the parser to accumulate sequence parameters and sub parameters\n * and transmit them to the input handler actions.\n *\n * NOTES:\n *  - params object for action handlers is borrowed, use `.toArray` or `.clone` to get a copy\n *  - never read beyond `params.length - 1` (likely to contain arbitrary data)\n *  - `.getSubParams` returns a borrowed typed array, use `.getSubParamsAll` for cloned sub params\n *  - hardcoded limitations:\n *    - max. value for a single (sub) param is 2^31 - 1 (greater values are clamped to that)\n *    - max. 256 sub params possible\n *    - negative values are not allowed beside -1 (placeholder for default value)\n *\n * About ZDM (Zero Default Mode):\n * ZDM is not orchestrated by this class. If the parser is in ZDM,\n * it should add 0 for empty params, otherwise -1. This does not apply\n * to subparams, empty subparams should always be added with -1.\n */\nexport class Params implements IParams {\n  // params store and length\n  public params: Int32Array;\n  public length: number;\n\n  // sub params store and length\n  protected _subParams: Int32Array;\n  protected _subParamsLength: number;\n\n  // sub params offsets from param: param idx --> [start, end] offset\n  private _subParamsIdx: Uint16Array;\n  private _rejectDigits: boolean;\n  private _rejectSubDigits: boolean;\n\n  /**\n   * Create a `Params` type from JS array representation.\n   */\n  public static fromArray(values: ParamsArray): Params {\n    const params = new Params();\n    if (!values.length) {\n      return params;\n    }\n    // skip leading sub params\n    for (let i = (values[0] instanceof Array) ? 1 : 0; i < values.length; ++i) {\n      const value = values[i];\n      if (value instanceof Array) {\n        for (let k = 0; k < value.length; ++k) {\n          params.addSubParam(value[k]);\n        }\n      } else {\n        params.addParam(value);\n      }\n    }\n    return params;\n  }\n\n  /**\n   * @param maxLength max length of storable parameters\n   * @param maxSubParamsLength max length of storable sub parameters\n   */\n  constructor(public maxLength: number = 32, public maxSubParamsLength: number = 32) {\n    if (maxSubParamsLength > MAX_SUBPARAMS) {\n      throw new Error('maxSubParamsLength must not be greater than 256');\n    }\n    this.params = new Int32Array(maxLength);\n    this.length = 0;\n    this._subParams = new Int32Array(maxSubParamsLength);\n    this._subParamsLength = 0;\n    this._subParamsIdx = new Uint16Array(maxLength);\n    this._rejectDigits = false;\n    this._rejectSubDigits = false;\n  }\n\n  /**\n   * Clone object.\n   */\n  public clone(): Params {\n    const newParams = new Params(this.maxLength, this.maxSubParamsLength);\n    newParams.params.set(this.params);\n    newParams.length = this.length;\n    newParams._subParams.set(this._subParams);\n    newParams._subParamsLength = this._subParamsLength;\n    newParams._subParamsIdx.set(this._subParamsIdx);\n    return newParams;\n  }\n\n  /**\n   * Get a JS array representation of the current parameters and sub parameters.\n   * The array is structured as follows:\n   *    sequence: \"1;2:3:4;5::6\"\n   *    array   : [1, 2, [3, 4], 5, [-1, 6]]\n   */\n  public toArray(): ParamsArray {\n    const res: ParamsArray = [];\n    for (let i = 0; i < this.length; ++i) {\n      res.push(this.params[i]);\n      const start = this._subParamsIdx[i] >> 8;\n      const end = this._subParamsIdx[i] & 0xFF;\n      if (end - start > 0) {\n        res.push(Array.prototype.slice.call(this._subParams, start, end));\n      }\n    }\n    return res;\n  }\n\n  /**\n   * Reset to initial empty state.\n   */\n  public reset(): void {\n    this.length = 0;\n    this._subParamsLength = 0;\n    this._rejectDigits = false;\n    this._rejectSubDigits = false;\n  }\n\n  /**\n   * Add a parameter value.\n   * `Params` only stores up to `maxLength` parameters, any later\n   * parameter will be ignored.\n   * Note: VT devices only stored up to 16 values, xterm seems to\n   * store up to 30.\n   */\n  public addParam(value: number): void {\n    if (this.length >= this.maxLength) {\n      this._rejectDigits = true;\n      return;\n    }\n    if (value < -1) {\n      throw new Error('values lesser than -1 are not allowed');\n    }\n    this._subParamsIdx[this.length] = this._subParamsLength << 8 | this._subParamsLength;\n    this.params[this.length++] = value > MAX_VALUE ? MAX_VALUE : value;\n  }\n\n  /**\n   * Add a sub parameter value.\n   * The sub parameter is automatically associated with the last parameter value.\n   * Thus it is not possible to add a subparameter without any parameter added yet.\n   * `Params` only stores up to `subParamsLength` sub parameters, any later\n   * sub parameter will be ignored.\n   */\n  public addSubParam(value: number): void {\n    if (!this.length) {\n      return;\n    }\n    if (this._subParamsLength >= this.maxSubParamsLength) {\n      this._rejectSubDigits = true;\n      return;\n    }\n    if (value < -1) {\n      throw new Error('values lesser than -1 are not allowed');\n    }\n    this._subParams[this._subParamsLength++] = value > MAX_VALUE ? MAX_VALUE : value;\n    this._subParamsIdx[this.length - 1]++;\n  }\n\n  /**\n   * Whether parameter at index `idx` has sub parameters.\n   */\n  public hasSubParams(idx: number): boolean {\n    return ((this._subParamsIdx[idx] & 0xFF) - (this._subParamsIdx[idx] >> 8) > 0);\n  }\n\n  /**\n   * Return sub parameters for parameter at index `idx`.\n   * Note: The values are borrowed, thus you need to copy\n   * the values if you need to hold them in nonlocal scope.\n   */\n  public getSubParams(idx: number): Int32Array | null {\n    const start = this._subParamsIdx[idx] >> 8;\n    const end = this._subParamsIdx[idx] & 0xFF;\n    if (end - start > 0) {\n      return this._subParams.subarray(start, end);\n    }\n    return null;\n  }\n\n  /**\n   * Return all sub parameters as {idx: subparams} mapping.\n   * Note: The values are not borrowed.\n   */\n  public getSubParamsAll(): {[idx: number]: Int32Array} {\n    const result: {[idx: number]: Int32Array} = {};\n    for (let i = 0; i < this.length; ++i) {\n      const start = this._subParamsIdx[i] >> 8;\n      const end = this._subParamsIdx[i] & 0xFF;\n      if (end - start > 0) {\n        result[i] = this._subParams.slice(start, end);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Add a single digit value to current parameter.\n   * This is used by the parser to account digits on a char by char basis.\n   * Do not use this method directly, consider using `addParam` instead.\n   */\n  public addParamDigit(value: number): void {\n    if (this._rejectDigits) {\n      return;\n    }\n    const v = this.params[this.length - 1] * 10 + value;\n    this.params[this.length - 1] = v > MAX_VALUE ? MAX_VALUE : v;\n  }\n\n  /**\n   * Add a single digit value to current sub parameter.\n   * This is used by the parser to account digits on a char by char basis.\n   * Do not use this method directly, consider using `addSubParam` instead.\n   */\n  public addSubParamDigit(value: number): void {\n    if (!this._subParamsLength || this._rejectDigits || this._rejectSubDigits) {\n      return;\n    }\n    if (this._subParams[this._subParamsLength - 1] === -1) {\n      this._subParams[this._subParamsLength - 1] = value;\n    } else {\n      const v = this._subParams[this._subParamsLength - 1] * 10 + value;\n      this._subParams[this._subParamsLength - 1] = v > MAX_VALUE ? MAX_VALUE : v;\n    }\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IOscHandler, IHandlerCollection, OscFallbackHandlerType, IOscParser } from 'common/parser/Types';\nimport { OscState, PAYLOAD_LIMIT } from 'common/parser/Constants';\nimport { utf32ToString } from 'common/input/TextDecoder';\nimport { IDisposable } from 'common/Types';\n\n\nexport class OscParser implements IOscParser {\n  private _state = OscState.START;\n  private _id = -1;\n  private _handlers: IHandlerCollection<IOscHandler> = Object.create(null);\n  private _handlerFb: OscFallbackHandlerType = () => { };\n\n  public addHandler(ident: number, handler: IOscHandler): IDisposable {\n    if (this._handlers[ident] === undefined) {\n      this._handlers[ident] = [];\n    }\n    const handlerList = this._handlers[ident];\n    handlerList.push(handler);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(handler);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n  public setHandler(ident: number, handler: IOscHandler): void {\n    this._handlers[ident] = [handler];\n  }\n  public clearHandler(ident: number): void {\n    if (this._handlers[ident]) delete this._handlers[ident];\n  }\n  public setHandlerFallback(handler: OscFallbackHandlerType): void {\n    this._handlerFb = handler;\n  }\n\n  public dispose(): void {\n    this._handlers = Object.create(null);\n    this._handlerFb = () => {};\n  }\n\n  public reset(): void {\n    // cleanup handlers if payload was already sent\n    if (this._state === OscState.PAYLOAD) {\n      this.end(false);\n    }\n    this._id = -1;\n    this._state = OscState.START;\n  }\n\n  private _start(): void {\n    const handlers = this._handlers[this._id];\n    if (!handlers) {\n      this._handlerFb(this._id, 'START');\n    } else {\n      for (let j = handlers.length - 1; j >= 0; j--) {\n        handlers[j].start();\n      }\n    }\n  }\n\n  private _put(data: Uint32Array, start: number, end: number): void {\n    const handlers = this._handlers[this._id];\n    if (!handlers) {\n      this._handlerFb(this._id, 'PUT', utf32ToString(data, start, end));\n    } else {\n      for (let j = handlers.length - 1; j >= 0; j--) {\n        handlers[j].put(data, start, end);\n      }\n    }\n  }\n\n  private _end(success: boolean): void {\n    // other than the old code we always have to call .end\n    // to keep the bubbling we use `success` to indicate\n    // whether a handler should execute\n    const handlers = this._handlers[this._id];\n    if (!handlers) {\n      this._handlerFb(this._id, 'END', success);\n    } else {\n      let j = handlers.length - 1;\n      for (; j >= 0; j--) {\n        if (handlers[j].end(success) !== false) {\n          break;\n        }\n      }\n      j--;\n      // cleanup left over handlers\n      for (; j >= 0; j--) {\n        handlers[j].end(false);\n      }\n    }\n  }\n\n  public start(): void {\n    // always reset leftover handlers\n    this.reset();\n    this._id = -1;\n    this._state = OscState.ID;\n  }\n\n  /**\n   * Put data to current OSC command.\n   * Expects the identifier of the OSC command in the form\n   * OSC id ; payload ST/BEL\n   * Payload chunks are not further processed and get\n   * directly passed to the handlers.\n   */\n  public put(data: Uint32Array, start: number, end: number): void {\n    if (this._state === OscState.ABORT) {\n      return;\n    }\n    if (this._state === OscState.ID) {\n      while (start < end) {\n        const code = data[start++];\n        if (code === 0x3b) {\n          this._state = OscState.PAYLOAD;\n          this._start();\n          break;\n        }\n        if (code < 0x30 || 0x39 < code) {\n          this._state = OscState.ABORT;\n          return;\n        }\n        if (this._id === -1) {\n          this._id = 0;\n        }\n        this._id = this._id * 10 + code - 48;\n      }\n    }\n    if (this._state === OscState.PAYLOAD && end - start > 0) {\n      this._put(data, start, end);\n    }\n  }\n\n  /**\n   * Indicates end of an OSC command.\n   * Whether the OSC got aborted or finished normally\n   * is indicated by `success`.\n   */\n  public end(success: boolean): void {\n    if (this._state === OscState.START) {\n      return;\n    }\n    // do nothing if command was faulty\n    if (this._state !== OscState.ABORT) {\n      // if we are still in ID state and get an early end\n      // means that the command has no payload thus we still have\n      // to announce START and send END right after\n      if (this._state === OscState.ID) {\n        this._start();\n      }\n      this._end(success);\n    }\n    this._id = -1;\n    this._state = OscState.START;\n  }\n}\n\n/**\n * Convenient class to allow attaching string based handler functions\n * as OSC handlers.\n */\nexport class OscHandler implements IOscHandler {\n  private _data = '';\n  private _hitLimit: boolean = false;\n\n  constructor(private _handler: (data: string) => any) {}\n\n  public start(): void {\n    this._data = '';\n    this._hitLimit = false;\n  }\n\n  public put(data: Uint32Array, start: number, end: number): void {\n    if (this._hitLimit) {\n      return;\n    }\n    this._data += utf32ToString(data, start, end);\n    if (this._data.length > PAYLOAD_LIMIT) {\n      this._data = '';\n      this._hitLimit = true;\n    }\n  }\n\n  public end(success: boolean): any {\n    let ret;\n    if (this._hitLimit) {\n      ret = false;\n    } else if (success) {\n      ret = this._handler(this._data);\n    }\n    this._data = '';\n    this._hitLimit = false;\n    return ret;\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/**\n * Internal states of EscapeSequenceParser.\n */\nexport const enum ParserState {\n  GROUND = 0,\n  ESCAPE = 1,\n  ESCAPE_INTERMEDIATE = 2,\n  CSI_ENTRY = 3,\n  CSI_PARAM = 4,\n  CSI_INTERMEDIATE = 5,\n  CSI_IGNORE = 6,\n  SOS_PM_APC_STRING = 7,\n  OSC_STRING = 8,\n  DCS_ENTRY = 9,\n  DCS_PARAM = 10,\n  DCS_IGNORE = 11,\n  DCS_INTERMEDIATE = 12,\n  DCS_PASSTHROUGH = 13\n}\n\n/**\n* Internal actions of EscapeSequenceParser.\n*/\nexport const enum ParserAction {\n  IGNORE = 0,\n  ERROR = 1,\n  PRINT = 2,\n  EXECUTE = 3,\n  OSC_START = 4,\n  OSC_PUT = 5,\n  OSC_END = 6,\n  CSI_DISPATCH = 7,\n  PARAM = 8,\n  COLLECT = 9,\n  ESC_DISPATCH = 10,\n  CLEAR = 11,\n  DCS_HOOK = 12,\n  DCS_PUT = 13,\n  DCS_UNHOOK = 14\n}\n\n/**\n * Internal states of OscParser.\n */\nexport const enum OscState {\n  START = 0,\n  ID = 1,\n  PAYLOAD = 2,\n  ABORT = 3\n}\n\n// payload limit for OSC and DCS\nexport const PAYLOAD_LIMIT = 10000000;\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\nimport { IDcsHandler, IParams, IHandlerCollection, IDcsParser, DcsFallbackHandlerType } from 'common/parser/Types';\nimport { utf32ToString } from 'common/input/TextDecoder';\nimport { Params } from 'common/parser/Params';\nimport { PAYLOAD_LIMIT } from 'common/parser/Constants';\n\nconst EMPTY_HANDLERS: IDcsHandler[] = [];\n\nexport class DcsParser implements IDcsParser {\n  private _handlers: IHandlerCollection<IDcsHandler> = Object.create(null);\n  private _active: IDcsHandler[] = EMPTY_HANDLERS;\n  private _ident: number = 0;\n  private _handlerFb: DcsFallbackHandlerType = () => {};\n\n  public dispose(): void {\n    this._handlers = Object.create(null);\n    this._handlerFb = () => {};\n  }\n\n  public addHandler(ident: number, handler: IDcsHandler): IDisposable {\n    if (this._handlers[ident] === undefined) {\n      this._handlers[ident] = [];\n    }\n    const handlerList = this._handlers[ident];\n    handlerList.push(handler);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(handler);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n\n  public setHandler(ident: number, handler: IDcsHandler): void {\n    this._handlers[ident] = [handler];\n  }\n\n  public clearHandler(ident: number): void {\n    if (this._handlers[ident]) delete this._handlers[ident];\n  }\n\n  public setHandlerFallback(handler: DcsFallbackHandlerType): void {\n    this._handlerFb = handler;\n  }\n\n  public reset(): void {\n    if (this._active.length) {\n      this.unhook(false);\n    }\n    this._active = EMPTY_HANDLERS;\n    this._ident = 0;\n  }\n\n  public hook(ident: number, params: IParams): void {\n    // always reset leftover handlers\n    this.reset();\n    this._ident = ident;\n    this._active = this._handlers[ident] || EMPTY_HANDLERS;\n    if (!this._active.length) {\n      this._handlerFb(this._ident, 'HOOK', params);\n    } else {\n      for (let j = this._active.length - 1; j >= 0; j--) {\n        this._active[j].hook(params);\n      }\n    }\n  }\n\n  public put(data: Uint32Array, start: number, end: number): void {\n    if (!this._active.length) {\n      this._handlerFb(this._ident, 'PUT', utf32ToString(data, start, end));\n    } else {\n      for (let j = this._active.length - 1; j >= 0; j--) {\n        this._active[j].put(data, start, end);\n      }\n    }\n  }\n\n  public unhook(success: boolean): void {\n    if (!this._active.length) {\n      this._handlerFb(this._ident, 'UNHOOK', success);\n    } else {\n      let j = this._active.length - 1;\n      for (; j >= 0; j--) {\n        if (this._active[j].unhook(success) !== false) {\n          break;\n        }\n      }\n      j--;\n      // cleanup left over handlers\n      for (; j >= 0; j--) {\n        this._active[j].unhook(false);\n      }\n    }\n    this._active = EMPTY_HANDLERS;\n    this._ident = 0;\n  }\n}\n\n/**\n * Convenient class to create a DCS handler from a single callback function.\n * Note: The payload is currently limited to 50 MB (hardcoded).\n */\nexport class DcsHandler implements IDcsHandler {\n  private _data = '';\n  private _params: IParams | undefined;\n  private _hitLimit: boolean = false;\n\n  constructor(private _handler: (data: string, params: IParams) => any) {}\n\n  public hook(params: IParams): void {\n    this._params = params.clone();\n    this._data = '';\n    this._hitLimit = false;\n  }\n\n  public put(data: Uint32Array, start: number, end: number): void {\n    if (this._hitLimit) {\n      return;\n    }\n    this._data += utf32ToString(data, start, end);\n    if (this._data.length > PAYLOAD_LIMIT) {\n      this._data = '';\n      this._hitLimit = true;\n    }\n  }\n\n  public unhook(success: boolean): any {\n    let ret;\n    if (this._hitLimit) {\n      ret = false;\n    } else if (success) {\n      ret = this._handler(this._data, this._params ? this._params : new Params());\n    }\n    this._params = undefined;\n    this._data = '';\n    this._hitLimit = false;\n    return ret;\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { generateConfig, configEquals } from 'browser/renderer/atlas/CharAtlasUtils';\nimport { BaseCharAtlas } from 'browser/renderer/atlas/BaseCharAtlas';\nimport { DynamicCharAtlas } from 'browser/renderer/atlas/DynamicCharAtlas';\nimport { ICharAtlasConfig } from 'browser/renderer/atlas/Types';\nimport { IColorSet } from 'browser/Types';\nimport { ITerminalOptions } from 'common/services/Services';\n\ninterface ICharAtlasCacheEntry {\n  atlas: BaseCharAtlas;\n  config: ICharAtlasConfig;\n  // N.B. This implementation potentially holds onto copies of the terminal forever, so\n  // this may cause memory leaks.\n  ownedBy: number[];\n}\n\nconst charAtlasCache: ICharAtlasCacheEntry[] = [];\n\n/**\n * Acquires a char atlas, either generating a new one or returning an existing\n * one that is in use by another terminal.\n */\nexport function acquireCharAtlas(\n  options: ITerminalOptions,\n  rendererId: number,\n  colors: IColorSet,\n  scaledCharWidth: number,\n  scaledCharHeight: number\n): BaseCharAtlas {\n  const newConfig = generateConfig(scaledCharWidth, scaledCharHeight, options, colors);\n\n  // Check to see if the renderer already owns this config\n  for (let i = 0; i < charAtlasCache.length; i++) {\n    const entry = charAtlasCache[i];\n    const ownedByIndex = entry.ownedBy.indexOf(rendererId);\n    if (ownedByIndex >= 0) {\n      if (configEquals(entry.config, newConfig)) {\n        return entry.atlas;\n      }\n      // The configs differ, release the renderer from the entry\n      if (entry.ownedBy.length === 1) {\n        entry.atlas.dispose();\n        charAtlasCache.splice(i, 1);\n      } else {\n        entry.ownedBy.splice(ownedByIndex, 1);\n      }\n      break;\n    }\n  }\n\n  // Try match a char atlas from the cache\n  for (let i = 0; i < charAtlasCache.length; i++) {\n    const entry = charAtlasCache[i];\n    if (configEquals(entry.config, newConfig)) {\n      // Add the renderer to the cache entry and return\n      entry.ownedBy.push(rendererId);\n      return entry.atlas;\n    }\n  }\n\n  const newEntry: ICharAtlasCacheEntry = {\n    atlas: new DynamicCharAtlas(\n      document,\n      newConfig\n    ),\n    config: newConfig,\n    ownedBy: [rendererId]\n  };\n  charAtlasCache.push(newEntry);\n  return newEntry.atlas;\n}\n\n/**\n * Removes a terminal reference from the cache, allowing its memory to be freed.\n */\nexport function removeTerminalFromCache(rendererId: number): void {\n  for (let i = 0; i < charAtlasCache.length; i++) {\n    const index = charAtlasCache[i].ownedBy.indexOf(rendererId);\n    if (index !== -1) {\n      if (charAtlasCache[i].ownedBy.length === 1) {\n        // Remove the cache entry if it's the only renderer\n        charAtlasCache[i].atlas.dispose();\n        charAtlasCache.splice(i, 1);\n      } else {\n        // Remove the reference from the cache entry\n        charAtlasCache[i].ownedBy.splice(index, 1);\n      }\n      break;\n    }\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharAtlasConfig } from 'browser/renderer/atlas/Types';\nimport { DEFAULT_COLOR } from 'common/buffer/Constants';\nimport { IColorSet, IPartialColorSet } from 'browser/Types';\nimport { ITerminalOptions } from 'common/services/Services';\n\nexport function generateConfig(scaledCharWidth: number, scaledCharHeight: number, options: ITerminalOptions, colors: IColorSet): ICharAtlasConfig {\n  // null out some fields that don't matter\n  const clonedColors = <IPartialColorSet>{\n    foreground: colors.foreground,\n    background: colors.background,\n    cursor: undefined,\n    cursorAccent: undefined,\n    selection: undefined,\n    // For the static char atlas, we only use the first 16 colors, but we need all 256 for the\n    // dynamic character atlas.\n    ansi: colors.ansi.slice(0, 16)\n  };\n  return {\n    devicePixelRatio: window.devicePixelRatio,\n    scaledCharWidth,\n    scaledCharHeight,\n    fontFamily: options.fontFamily,\n    fontSize: options.fontSize,\n    fontWeight: options.fontWeight,\n    fontWeightBold: options.fontWeightBold,\n    allowTransparency: options.allowTransparency,\n    colors: clonedColors\n  };\n}\n\nexport function configEquals(a: ICharAtlasConfig, b: ICharAtlasConfig): boolean {\n  for (let i = 0; i < a.colors.ansi.length; i++) {\n    if (a.colors.ansi[i].rgba !== b.colors.ansi[i].rgba) {\n      return false;\n    }\n  }\n  return a.devicePixelRatio === b.devicePixelRatio &&\n      a.fontFamily === b.fontFamily &&\n      a.fontSize === b.fontSize &&\n      a.fontWeight === b.fontWeight &&\n      a.fontWeightBold === b.fontWeightBold &&\n      a.allowTransparency === b.allowTransparency &&\n      a.scaledCharWidth === b.scaledCharWidth &&\n      a.scaledCharHeight === b.scaledCharHeight &&\n      a.colors.foreground === b.colors.foreground &&\n      a.colors.background === b.colors.background;\n}\n\nexport function is256Color(colorCode: number): boolean {\n  return colorCode < DEFAULT_COLOR;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IColorManager, IColor, IColorSet } from 'browser/Types';\nimport { ITheme } from 'common/services/Services';\n\nconst DEFAULT_FOREGROUND = fromHex('#ffffff');\nconst DEFAULT_BACKGROUND = fromHex('#000000');\nconst DEFAULT_CURSOR = fromHex('#ffffff');\nconst DEFAULT_CURSOR_ACCENT = fromHex('#000000');\nconst DEFAULT_SELECTION = {\n  css: 'rgba(255, 255, 255, 0.3)',\n  rgba: 0xFFFFFF77\n};\n\n// An IIFE to generate DEFAULT_ANSI_COLORS. Do not mutate DEFAULT_ANSI_COLORS, instead make a copy\n// and mutate that.\nexport const DEFAULT_ANSI_COLORS = (() => {\n  const colors = [\n    // dark:\n    fromHex('#2e3436'),\n    fromHex('#cc0000'),\n    fromHex('#4e9a06'),\n    fromHex('#c4a000'),\n    fromHex('#3465a4'),\n    fromHex('#75507b'),\n    fromHex('#06989a'),\n    fromHex('#d3d7cf'),\n    // bright:\n    fromHex('#555753'),\n    fromHex('#ef2929'),\n    fromHex('#8ae234'),\n    fromHex('#fce94f'),\n    fromHex('#729fcf'),\n    fromHex('#ad7fa8'),\n    fromHex('#34e2e2'),\n    fromHex('#eeeeec')\n  ];\n\n  // Fill in the remaining 240 ANSI colors.\n  // Generate colors (16-231)\n  const v = [0x00, 0x5f, 0x87, 0xaf, 0xd7, 0xff];\n  for (let i = 0; i < 216; i++) {\n    const r = v[(i / 36) % 6 | 0];\n    const g = v[(i / 6) % 6 | 0];\n    const b = v[i % 6];\n    colors.push({\n      css: `#${toPaddedHex(r)}${toPaddedHex(g)}${toPaddedHex(b)}`,\n      // Use >>> 0 to force a conversion to an unsigned int\n      rgba: ((r << 24) | (g << 16) | (b << 8) | 0xFF) >>> 0\n    });\n  }\n\n  // Generate greys (232-255)\n  for (let i = 0; i < 24; i++) {\n    const c = 8 + i * 10;\n    const ch = toPaddedHex(c);\n    colors.push({\n      css: `#${ch}${ch}${ch}`,\n      rgba: ((c << 24) | (c << 16) | (c << 8) | 0xFF) >>> 0\n    });\n  }\n\n  return colors;\n})();\n\nfunction fromHex(css: string): IColor {\n  return {\n    css,\n    rgba: parseInt(css.slice(1), 16) << 8 | 0xFF\n  };\n}\n\nfunction toPaddedHex(c: number): string {\n  const s = c.toString(16);\n  return s.length < 2 ? '0' + s : s;\n}\n\n/**\n * Manages the source of truth for a terminal's colors.\n */\nexport class ColorManager implements IColorManager {\n  public colors: IColorSet;\n  private _ctx: CanvasRenderingContext2D;\n  private _litmusColor: CanvasGradient;\n\n  constructor(document: Document, public allowTransparency: boolean) {\n    const canvas = document.createElement('canvas');\n    canvas.width = 1;\n    canvas.height = 1;\n    const ctx = canvas.getContext('2d');\n    if (!ctx) {\n      throw new Error('Could not get rendering context');\n    }\n    this._ctx = ctx;\n    this._ctx.globalCompositeOperation = 'copy';\n    this._litmusColor = this._ctx.createLinearGradient(0, 0, 1, 1);\n    this.colors = {\n      foreground: DEFAULT_FOREGROUND,\n      background: DEFAULT_BACKGROUND,\n      cursor: DEFAULT_CURSOR,\n      cursorAccent: DEFAULT_CURSOR_ACCENT,\n      selection: DEFAULT_SELECTION,\n      ansi: DEFAULT_ANSI_COLORS.slice()\n    };\n  }\n\n  /**\n   * Sets the terminal's theme.\n   * @param theme The  theme to use. If a partial theme is provided then default\n   * colors will be used where colors are not defined.\n   */\n  public setTheme(theme: ITheme = {}): void {\n    this.colors.foreground = this._parseColor(theme.foreground, DEFAULT_FOREGROUND);\n    this.colors.background = this._parseColor(theme.background, DEFAULT_BACKGROUND);\n    this.colors.cursor = this._parseColor(theme.cursor, DEFAULT_CURSOR, true);\n    this.colors.cursorAccent = this._parseColor(theme.cursorAccent, DEFAULT_CURSOR_ACCENT, true);\n    this.colors.selection = this._parseColor(theme.selection, DEFAULT_SELECTION, true);\n    this.colors.ansi[0] = this._parseColor(theme.black, DEFAULT_ANSI_COLORS[0]);\n    this.colors.ansi[1] = this._parseColor(theme.red, DEFAULT_ANSI_COLORS[1]);\n    this.colors.ansi[2] = this._parseColor(theme.green, DEFAULT_ANSI_COLORS[2]);\n    this.colors.ansi[3] = this._parseColor(theme.yellow, DEFAULT_ANSI_COLORS[3]);\n    this.colors.ansi[4] = this._parseColor(theme.blue, DEFAULT_ANSI_COLORS[4]);\n    this.colors.ansi[5] = this._parseColor(theme.magenta, DEFAULT_ANSI_COLORS[5]);\n    this.colors.ansi[6] = this._parseColor(theme.cyan, DEFAULT_ANSI_COLORS[6]);\n    this.colors.ansi[7] = this._parseColor(theme.white, DEFAULT_ANSI_COLORS[7]);\n    this.colors.ansi[8] = this._parseColor(theme.brightBlack, DEFAULT_ANSI_COLORS[8]);\n    this.colors.ansi[9] = this._parseColor(theme.brightRed, DEFAULT_ANSI_COLORS[9]);\n    this.colors.ansi[10] = this._parseColor(theme.brightGreen, DEFAULT_ANSI_COLORS[10]);\n    this.colors.ansi[11] = this._parseColor(theme.brightYellow, DEFAULT_ANSI_COLORS[11]);\n    this.colors.ansi[12] = this._parseColor(theme.brightBlue, DEFAULT_ANSI_COLORS[12]);\n    this.colors.ansi[13] = this._parseColor(theme.brightMagenta, DEFAULT_ANSI_COLORS[13]);\n    this.colors.ansi[14] = this._parseColor(theme.brightCyan, DEFAULT_ANSI_COLORS[14]);\n    this.colors.ansi[15] = this._parseColor(theme.brightWhite, DEFAULT_ANSI_COLORS[15]);\n  }\n\n  private _parseColor(\n    css: string | undefined,\n    fallback: IColor,\n    allowTransparency: boolean = this.allowTransparency\n  ): IColor {\n    if (css === undefined) {\n      return fallback;\n    }\n\n    // If parsing the value results in failure, then it must be ignored, and the attribute must\n    // retain its previous value.\n    // -- https://html.spec.whatwg.org/multipage/canvas.html#fill-and-stroke-styles\n    this._ctx.fillStyle = this._litmusColor;\n    this._ctx.fillStyle = css;\n    if (typeof this._ctx.fillStyle !== 'string') {\n      console.warn(`Color: ${css} is invalid using fallback ${fallback.css}`);\n      return fallback;\n    }\n\n    this._ctx.fillRect(0, 0, 1, 1);\n    const data = this._ctx.getImageData(0, 0, 1, 1).data;\n\n    if (!allowTransparency && data[3] !== 0xFF) {\n      // Ideally we'd just ignore the alpha channel, but...\n      //\n      // Browsers may not give back exactly the same RGB values we put in, because most/all\n      // convert the color to a pre-multiplied representation. getImageData converts that back to\n      // a un-premultipled representation, but the precision loss may make the RGB channels unuable\n      // on their own.\n      //\n      // E.g. In Chrome #12345610 turns into #10305010, and in the extreme case, 0xFFFFFF00 turns\n      // into 0x00000000.\n      //\n      // \"Note: Due to the lossy nature of converting to and from premultiplied alpha color values,\n      // pixels that have just been set using putImageData() might be returned to an equivalent\n      // getImageData() as different values.\"\n      // -- https://html.spec.whatwg.org/multipage/canvas.html#pixel-manipulation\n      //\n      // So let's just use the fallback color in this case instead.\n      console.warn(\n        `Color: ${css} is using transparency, but allowTransparency is false. ` +\n        `Using fallback ${fallback.css}.`\n      );\n      return fallback;\n    }\n\n    return {\n      css,\n      rgba: (data[0] << 24 | data[1] << 16 | data[2] << 8 | data[3]) >>> 0\n    };\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport function throwIfFalsy<T>(value: T | undefined | null): T {\n  if (!value) {\n    throw new Error('value must not be falsy');\n  }\n  return value;\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferLine, ICellData, CharData } from 'common/Types';\nimport { ICharacterJoinerRegistry, ICharacterJoiner } from 'browser/renderer/Types';\nimport { AttributeData } from 'common/buffer/AttributeData';\nimport { WHITESPACE_CELL_CHAR, Content } from 'common/buffer/Constants';\nimport { CellData } from 'common/buffer/CellData';\nimport { IBufferService } from 'common/services/Services';\n\nexport class JoinedCellData extends AttributeData implements ICellData {\n  private _width: number;\n  // .content carries no meaning for joined CellData, simply nullify it\n  // thus we have to overload all other .content accessors\n  public content: number = 0;\n  public fg: number;\n  public bg: number;\n  public combinedData: string = '';\n\n  constructor(firstCell: ICellData, chars: string, width: number) {\n    super();\n    this.fg = firstCell.fg;\n    this.bg = firstCell.bg;\n    this.combinedData = chars;\n    this._width = width;\n  }\n\n  public isCombined(): number {\n    // always mark joined cell data as combined\n    return Content.IS_COMBINED_MASK;\n  }\n\n  public getWidth(): number {\n    return this._width;\n  }\n\n  public getChars(): string {\n    return this.combinedData;\n  }\n\n  public getCode(): number {\n    // code always gets the highest possible fake codepoint (read as -1)\n    // this is needed as code is used by caches as identifier\n    return 0x1FFFFF;\n  }\n\n  public setFromCharData(value: CharData): void {\n    throw new Error('not implemented');\n  }\n\n  public getAsCharData(): CharData {\n    return [this.fg, this.getChars(), this.getWidth(), this.getCode()];\n  }\n}\n\nexport class CharacterJoinerRegistry implements ICharacterJoinerRegistry {\n\n  private _characterJoiners: ICharacterJoiner[] = [];\n  private _nextCharacterJoinerId: number = 0;\n  private _workCell: CellData = new CellData();\n\n  constructor(private _bufferService: IBufferService) { }\n\n  public registerCharacterJoiner(handler: (text: string) => [number, number][]): number {\n    const joiner: ICharacterJoiner = {\n      id: this._nextCharacterJoinerId++,\n      handler\n    };\n\n    this._characterJoiners.push(joiner);\n    return joiner.id;\n  }\n\n  public deregisterCharacterJoiner(joinerId: number): boolean {\n    for (let i = 0; i < this._characterJoiners.length; i++) {\n      if (this._characterJoiners[i].id === joinerId) {\n        this._characterJoiners.splice(i, 1);\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  public getJoinedCharacters(row: number): [number, number][] {\n    if (this._characterJoiners.length === 0) {\n      return [];\n    }\n\n    const line = this._bufferService.buffer.lines.get(row);\n    if (!line || line.length === 0) {\n      return [];\n    }\n\n    const ranges: [number, number][] = [];\n    const lineStr = line.translateToString(true);\n\n    // Because some cells can be represented by multiple javascript characters,\n    // we track the cell and the string indexes separately. This allows us to\n    // translate the string ranges we get from the joiners back into cell ranges\n    // for use when rendering\n    let rangeStartColumn = 0;\n    let currentStringIndex = 0;\n    let rangeStartStringIndex = 0;\n    let rangeAttrFG = line.getFg(0);\n    let rangeAttrBG = line.getBg(0);\n\n    for (let x = 0; x < line.getTrimmedLength(); x++) {\n      line.loadCell(x, this._workCell);\n\n      if (this._workCell.getWidth() === 0) {\n        // If this character is of width 0, skip it.\n        continue;\n      }\n\n      // End of range\n      if (this._workCell.fg !== rangeAttrFG || this._workCell.bg !== rangeAttrBG) {\n        // If we ended up with a sequence of more than one character,\n        // look for ranges to join.\n        if (x - rangeStartColumn > 1) {\n          const joinedRanges = this._getJoinedRanges(\n            lineStr,\n            rangeStartStringIndex,\n            currentStringIndex,\n            line,\n            rangeStartColumn\n          );\n          for (let i = 0; i < joinedRanges.length; i++) {\n            ranges.push(joinedRanges[i]);\n          }\n        }\n\n        // Reset our markers for a new range.\n        rangeStartColumn = x;\n        rangeStartStringIndex = currentStringIndex;\n        rangeAttrFG = this._workCell.fg;\n        rangeAttrBG = this._workCell.bg;\n      }\n\n      currentStringIndex += this._workCell.getChars().length || WHITESPACE_CELL_CHAR.length;\n    }\n\n    // Process any trailing ranges.\n    if (this._bufferService.cols - rangeStartColumn > 1) {\n      const joinedRanges = this._getJoinedRanges(\n        lineStr,\n        rangeStartStringIndex,\n        currentStringIndex,\n        line,\n        rangeStartColumn\n      );\n      for (let i = 0; i < joinedRanges.length; i++) {\n        ranges.push(joinedRanges[i]);\n      }\n    }\n\n    return ranges;\n  }\n\n  /**\n   * Given a segment of a line of text, find all ranges of text that should be\n   * joined in a single rendering unit. Ranges are internally converted to\n   * column ranges, rather than string ranges.\n   * @param line String representation of the full line of text\n   * @param startIndex Start position of the range to search in the string (inclusive)\n   * @param endIndex End position of the range to search in the string (exclusive)\n   */\n  private _getJoinedRanges(line: string, startIndex: number, endIndex: number, lineData: IBufferLine, startCol: number): [number, number][] {\n    const text = line.substring(startIndex, endIndex);\n    // At this point we already know that there is at least one joiner so\n    // we can just pull its value and assign it directly rather than\n    // merging it into an empty array, which incurs unnecessary writes.\n    const joinedRanges: [number, number][] = this._characterJoiners[0].handler(text);\n    for (let i = 1; i < this._characterJoiners.length; i++) {\n      // We merge any overlapping ranges across the different joiners\n      const joinerRanges = this._characterJoiners[i].handler(text);\n      for (let j = 0; j < joinerRanges.length; j++) {\n        CharacterJoinerRegistry._mergeRanges(joinedRanges, joinerRanges[j]);\n      }\n    }\n    this._stringRangesToCellRanges(joinedRanges, lineData, startCol);\n    return joinedRanges;\n  }\n\n  /**\n   * Modifies the provided ranges in-place to adjust for variations between\n   * string length and cell width so that the range represents a cell range,\n   * rather than the string range the joiner provides.\n   * @param ranges String ranges containing start (inclusive) and end (exclusive) index\n   * @param line Cell data for the relevant line in the terminal\n   * @param startCol Offset within the line to start from\n   */\n  private _stringRangesToCellRanges(ranges: [number, number][], line: IBufferLine, startCol: number): void {\n    let currentRangeIndex = 0;\n    let currentRangeStarted = false;\n    let currentStringIndex = 0;\n    let currentRange = ranges[currentRangeIndex];\n\n    // If we got through all of the ranges, stop searching\n    if (!currentRange) {\n      return;\n    }\n\n    for (let x = startCol; x < this._bufferService.cols; x++) {\n      const width = line.getWidth(x);\n      const length = line.getString(x).length || WHITESPACE_CELL_CHAR.length;\n\n      // We skip zero-width characters when creating the string to join the text\n      // so we do the same here\n      if (width === 0) {\n        continue;\n      }\n\n      // Adjust the start of the range\n      if (!currentRangeStarted && currentRange[0] <= currentStringIndex) {\n        currentRange[0] = x;\n        currentRangeStarted = true;\n      }\n\n      // Adjust the end of the range\n      if (currentRange[1] <= currentStringIndex) {\n        currentRange[1] = x;\n\n        // We're finished with this range, so we move to the next one\n        currentRange = ranges[++currentRangeIndex];\n\n        // If there are no more ranges left, stop searching\n        if (!currentRange) {\n          break;\n        }\n\n        // Ranges can be on adjacent characters. Because the end index of the\n        // ranges are exclusive, this means that the index for the start of a\n        // range can be the same as the end index of the previous range. To\n        // account for the start of the next range, we check here just in case.\n        if (currentRange[0] <= currentStringIndex) {\n          currentRange[0] = x;\n          currentRangeStarted = true;\n        } else {\n          currentRangeStarted = false;\n        }\n      }\n\n      // Adjust the string index based on the character length to line up with\n      // the column adjustment\n      currentStringIndex += length;\n    }\n\n    // If there is still a range left at the end, it must extend all the way to\n    // the end of the line.\n    if (currentRange) {\n      currentRange[1] = this._bufferService.cols;\n    }\n  }\n\n  /**\n   * Merges the range defined by the provided start and end into the list of\n   * existing ranges. The merge is done in place on the existing range for\n   * performance and is also returned.\n   * @param ranges Existing range list\n   * @param newRange Tuple of two numbers representing the new range to merge in.\n   * @returns The ranges input with the new range merged in place\n   */\n  private static _mergeRanges(ranges: [number, number][], newRange: [number, number]): [number, number][] {\n    let inRange = false;\n    for (let i = 0; i < ranges.length; i++) {\n      const range = ranges[i];\n      if (!inRange) {\n        if (newRange[1] <= range[0]) {\n          // Case 1: New range is before the search range\n          ranges.splice(i, 0, newRange);\n          return ranges;\n        }\n\n        if (newRange[1] <= range[1]) {\n          // Case 2: New range is either wholly contained within the\n          // search range or overlaps with the front of it\n          range[0] = Math.min(newRange[0], range[0]);\n          return ranges;\n        }\n\n        if (newRange[0] < range[1]) {\n          // Case 3: New range either wholly contains the search range\n          // or overlaps with the end of it\n          range[0] = Math.min(newRange[0], range[0]);\n          inRange = true;\n        }\n\n        // Case 4: New range starts after the search range\n        continue;\n      } else {\n        if (newRange[1] <= range[0]) {\n          // Case 5: New range extends from previous range but doesn't\n          // reach the current one\n          ranges[i - 1][1] = newRange[1];\n          return ranges;\n        }\n\n        if (newRange[1] <= range[1]) {\n          // Case 6: New range extends from prvious range into the\n          // current range\n          ranges[i - 1][1] = Math.max(newRange[1], range[1]);\n          ranges.splice(i, 1);\n          inRange = false;\n          return ranges;\n        }\n\n        // Case 7: New range extends from previous range past the\n        // end of the current range\n        ranges.splice(i, 1);\n        i--;\n      }\n    }\n\n    if (inRange) {\n      // Case 8: New range extends past the last existing range\n      ranges[ranges.length - 1][1] = newRange[1];\n    } else {\n      // Case 9: New range starts after the last existing range\n      ranges.push(newRange);\n    }\n\n    return ranges;\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport function getCoordsRelativeToElement(event: {clientX: number, clientY: number}, element: HTMLElement): [number, number] {\n  const rect = element.getBoundingClientRect();\n  return [event.clientX - rect.left, event.clientY - rect.top];\n}\n\n/**\n * Gets coordinates within the terminal for a particular mouse event. The result\n * is returned as an array in the form [x, y] instead of an object as it's a\n * little faster and this function is used in some low level code.\n * @param event The mouse event.\n * @param element The terminal's container element.\n * @param colCount The number of columns in the terminal.\n * @param rowCount The number of rows n the terminal.\n * @param isSelection Whether the request is for the selection or not. This will\n * apply an offset to the x value such that the left half of the cell will\n * select that cell and the right half will select the next cell.\n */\nexport function getCoords(event: {clientX: number, clientY: number}, element: HTMLElement, colCount: number, rowCount: number, hasValidCharSize: boolean, actualCellWidth: number, actualCellHeight: number, isSelection?: boolean): [number, number] | undefined {\n  // Coordinates cannot be measured if there are no valid\n  if (!hasValidCharSize) {\n    return undefined;\n  }\n\n  const coords = getCoordsRelativeToElement(event, element);\n  if (!coords) {\n    return undefined;\n  }\n\n  coords[0] = Math.ceil((coords[0] + (isSelection ? actualCellWidth / 2 : 0)) / actualCellWidth);\n  coords[1] = Math.ceil(coords[1] / actualCellHeight);\n\n  // Ensure coordinates are within the terminal viewport. Note that selections\n  // need an addition point of precision to cover the end point (as characters\n  // cover half of one char and half of the next).\n  coords[0] = Math.min(Math.max(coords[0], 1), colCount + (isSelection ? 1 : 0));\n  coords[1] = Math.min(Math.max(coords[1], 1), rowCount);\n\n  return coords;\n}\n\n/**\n * Gets coordinates within the terminal for a particular mouse event, wrapping\n * them to the bounds of the terminal and adding 32 to both the x and y values\n * as expected by xterm.\n */\nexport function getRawByteCoords(coords: [number, number] | undefined): { x: number, y: number } | undefined {\n  if (!coords) {\n    return undefined;\n  }\n\n  // xterm sends raw bytes and starts at 32 (SP) for each.\n  return { x: coords[0] + 32, y: coords[1] + 32 };\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\n\n/**\n * Debounces calls to render terminal rows using animation frames.\n */\nexport class RenderDebouncer implements IDisposable {\n  private _rowStart: number | undefined;\n  private _rowEnd: number | undefined;\n  private _rowCount: number | undefined;\n  private _animationFrame: number | undefined;\n\n  constructor(\n    private _renderCallback: (start: number, end: number) => void\n  ) {\n  }\n\n  public dispose(): void {\n    if (this._animationFrame) {\n      window.cancelAnimationFrame(this._animationFrame);\n      this._animationFrame = undefined;\n    }\n  }\n\n  public refresh(rowStart: number, rowEnd: number, rowCount: number): void {\n    this._rowCount = rowCount;\n    // Get the min/max row start/end for the arg values\n    rowStart = rowStart !== undefined ? rowStart : 0;\n    rowEnd = rowEnd !== undefined ? rowEnd : this._rowCount - 1;\n    // Set the properties to the updated values\n    this._rowStart = this._rowStart !== undefined ? Math.min(this._rowStart, rowStart) : rowStart;\n    this._rowEnd = this._rowEnd !== undefined ? Math.max(this._rowEnd, rowEnd) : rowEnd;\n\n    if (this._animationFrame) {\n      return;\n    }\n\n    this._animationFrame = window.requestAnimationFrame(() => this._innerRefresh());\n  }\n\n  private _innerRefresh(): void {\n    // Make sure values are set\n    if (this._rowStart === undefined || this._rowEnd === undefined || this._rowCount === undefined) {\n      return;\n    }\n\n    // Clamp values\n    this._rowStart = Math.max(this._rowStart, 0);\n    this._rowEnd = Math.min(this._rowEnd, this._rowCount - 1);\n\n    // Run render callback\n    this._renderCallback(this._rowStart, this._rowEnd);\n\n    // Reset debouncer\n    this._rowStart = undefined;\n    this._rowEnd = undefined;\n    this._animationFrame = undefined;\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Disposable } from 'common/Lifecycle';\n\nexport type ScreenDprListener = (newDevicePixelRatio?: number, oldDevicePixelRatio?: number) => void;\n\n/**\n * The screen device pixel ratio monitor allows listening for when the\n * window.devicePixelRatio value changes. This is done not with polling but with\n * the use of window.matchMedia to watch media queries. When the event fires,\n * the listener will be reattached using a different media query to ensure that\n * any further changes will register.\n *\n * The listener should fire on both window zoom changes and switching to a\n * monitor with a different DPI.\n */\nexport class ScreenDprMonitor extends Disposable {\n  private _currentDevicePixelRatio: number = window.devicePixelRatio;\n  private _outerListener: ((this: MediaQueryList, ev: MediaQueryListEvent) => any) | undefined;\n  private _listener: ScreenDprListener | undefined;\n  private _resolutionMediaMatchList: MediaQueryList | undefined;\n\n  public setListener(listener: ScreenDprListener): void {\n    if (this._listener) {\n      this.clearListener();\n    }\n    this._listener = listener;\n    this._outerListener = () => {\n      if (!this._listener) {\n        return;\n      }\n      this._listener(window.devicePixelRatio, this._currentDevicePixelRatio);\n      this._updateDpr();\n    };\n    this._updateDpr();\n  }\n\n  public dispose(): void {\n    super.dispose();\n    this.clearListener();\n  }\n\n  private _updateDpr(): void {\n    if (!this._resolutionMediaMatchList || !this._outerListener) {\n      return;\n    }\n\n    // Clear listeners for old DPR\n    this._resolutionMediaMatchList.removeListener(this._outerListener);\n\n    // Add listeners for new DPR\n    this._currentDevicePixelRatio = window.devicePixelRatio;\n    this._resolutionMediaMatchList = window.matchMedia(`screen and (resolution: ${window.devicePixelRatio}dppx)`);\n    this._resolutionMediaMatchList.addListener(this._outerListener);\n  }\n\n  public clearListener(): void {\n    if (!this._resolutionMediaMatchList || !this._listener || !this._outerListener) {\n      return;\n    }\n    this._resolutionMediaMatchList.removeListener(this._outerListener);\n    this._resolutionMediaMatchList = undefined;\n    this._listener = undefined;\n    this._outerListener = undefined;\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/*\n * A simple utility for cloning values\n */\nexport function clone<T>(val: T, depth: number = 5): T {\n  if (typeof val !== 'object') {\n    return val;\n  }\n\n  // If we're cloning an array, use an array as the base, otherwise use an object\n  const clonedObject: any = Array.isArray(val) ? [] : {};\n\n  for (const key in val) {\n    // Recursively clone eack item unless we're at the maximum depth\n    clonedObject[key] = depth <= 1 ? val[key] : (val[key] ? clone(val[key], depth - 1) : val[key]);\n  }\n\n  return clonedObject as T;\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Terminal as ITerminalApi, ITerminalOptions, IMarker, IDisposable, ILinkMatcherOptions, ITheme, ILocalizableStrings, ITerminalAddon, ISelectionPosition, IBuffer as IBufferApi, IBufferLine as IBufferLineApi, IBufferCell as IBufferCellApi, IParser, IFunctionIdentifier } from 'xterm';\nimport { ITerminal } from '../Types';\nimport { IBufferLine } from 'common/Types';\nimport { IBuffer } from 'common/buffer/Types';\nimport { Terminal as TerminalCore } from '../Terminal';\nimport * as Strings from '../browser/LocalizableStrings';\nimport { IEvent } from 'common/EventEmitter';\nimport { AddonManager } from './AddonManager';\nimport { IParams } from 'common/parser/Types';\n\nexport class Terminal implements ITerminalApi {\n  private _core: ITerminal;\n  private _addonManager: AddonManager;\n  private _parser: IParser;\n\n  constructor(options?: ITerminalOptions) {\n    this._core = new TerminalCore(options);\n    this._addonManager = new AddonManager();\n  }\n\n  public get onCursorMove(): IEvent<void> { return this._core.onCursorMove; }\n  public get onLineFeed(): IEvent<void> { return this._core.onLineFeed; }\n  public get onSelectionChange(): IEvent<void> { return this._core.onSelectionChange; }\n  public get onData(): IEvent<string> { return this._core.onData; }\n  public get onTitleChange(): IEvent<string> { return this._core.onTitleChange; }\n  public get onScroll(): IEvent<number> { return this._core.onScroll; }\n  public get onKey(): IEvent<{ key: string, domEvent: KeyboardEvent }> { return this._core.onKey; }\n  public get onRender(): IEvent<{ start: number, end: number }> { return this._core.onRender; }\n  public get onResize(): IEvent<{ cols: number, rows: number }> { return this._core.onResize; }\n\n  public get element(): HTMLElement { return this._core.element; }\n  public get parser(): IParser {\n    if (!this._parser) {\n      this._parser = new ParserApi(this._core);\n    }\n    return this._parser;\n  }\n  public get textarea(): HTMLTextAreaElement { return this._core.textarea; }\n  public get rows(): number { return this._core.rows; }\n  public get cols(): number { return this._core.cols; }\n  public get buffer(): IBufferApi { return new BufferApiView(this._core.buffer); }\n  public get markers(): ReadonlyArray<IMarker> { return this._core.markers; }\n  public blur(): void {\n    this._core.blur();\n  }\n  public focus(): void {\n    this._core.focus();\n  }\n  public resize(columns: number, rows: number): void {\n    this._verifyIntegers(columns, rows);\n    this._core.resize(columns, rows);\n  }\n  public writeln(data: string): void {\n    this._core.writeln(data);\n  }\n  public open(parent: HTMLElement): void {\n    this._core.open(parent);\n  }\n  public attachCustomKeyEventHandler(customKeyEventHandler: (event: KeyboardEvent) => boolean): void {\n    this._core.attachCustomKeyEventHandler(customKeyEventHandler);\n  }\n  public registerLinkMatcher(regex: RegExp, handler: (event: MouseEvent, uri: string) => void, options?: ILinkMatcherOptions): number {\n    return this._core.registerLinkMatcher(regex, handler, options);\n  }\n  public deregisterLinkMatcher(matcherId: number): void {\n    this._core.deregisterLinkMatcher(matcherId);\n  }\n  public registerCharacterJoiner(handler: (text: string) => [number, number][]): number {\n    return this._core.registerCharacterJoiner(handler);\n  }\n  public deregisterCharacterJoiner(joinerId: number): void {\n    this._core.deregisterCharacterJoiner(joinerId);\n  }\n  public addMarker(cursorYOffset: number): IMarker {\n    this._verifyIntegers(cursorYOffset);\n    return this._core.addMarker(cursorYOffset);\n  }\n  public hasSelection(): boolean {\n    return this._core.hasSelection();\n  }\n  public select(column: number, row: number, length: number): void {\n    this._verifyIntegers(column, row, length);\n    this._core.select(column, row, length);\n  }\n  public getSelection(): string {\n    return this._core.getSelection();\n  }\n  public getSelectionPosition(): ISelectionPosition | undefined {\n    return this._core.getSelectionPosition();\n  }\n  public clearSelection(): void {\n    this._core.clearSelection();\n  }\n  public selectAll(): void {\n    this._core.selectAll();\n  }\n  public selectLines(start: number, end: number): void {\n    this._verifyIntegers(start, end);\n    this._core.selectLines(start, end);\n  }\n  public dispose(): void {\n    this._addonManager.dispose();\n    this._core.dispose();\n  }\n  public scrollLines(amount: number): void {\n    this._verifyIntegers(amount);\n    this._core.scrollLines(amount);\n  }\n  public scrollPages(pageCount: number): void {\n    this._verifyIntegers(pageCount);\n    this._core.scrollPages(pageCount);\n  }\n  public scrollToTop(): void {\n    this._core.scrollToTop();\n  }\n  public scrollToBottom(): void {\n    this._core.scrollToBottom();\n  }\n  public scrollToLine(line: number): void {\n    this._verifyIntegers(line);\n    this._core.scrollToLine(line);\n  }\n  public clear(): void {\n    this._core.clear();\n  }\n  public write(data: string): void {\n    this._core.write(data);\n  }\n  public writeUtf8(data: Uint8Array): void {\n    this._core.writeUtf8(data);\n  }\n  public paste(data: string): void {\n    this._core.paste(data);\n  }\n  public getOption(key: 'bellSound' | 'bellStyle' | 'cursorStyle' | 'fontFamily' | 'fontWeight' | 'fontWeightBold' | 'logLevel' | 'rendererType' | 'termName' | 'wordSeparator'): string;\n  public getOption(key: 'allowTransparency' | 'cancelEvents' | 'convertEol' | 'cursorBlink' | 'disableStdin' | 'macOptionIsMeta' | 'rightClickSelectsWord' | 'popOnBell' | 'screenKeys' | 'useFlowControl' | 'visualBell'): boolean;\n  public getOption(key: 'colors'): string[];\n  public getOption(key: 'cols' | 'fontSize' | 'letterSpacing' | 'lineHeight' | 'rows' | 'tabStopWidth' | 'scrollback'): number;\n  public getOption(key: 'handler'): (data: string) => void;\n  public getOption(key: string): any;\n  public getOption(key: any): any {\n    return this._core.optionsService.getOption(key);\n  }\n  public setOption(key: 'bellSound' | 'fontFamily' | 'termName' | 'wordSeparator', value: string): void;\n  public setOption(key: 'fontWeight' | 'fontWeightBold', value: 'normal' | 'bold' | '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900'): void;\n  public setOption(key: 'logLevel', value: 'debug' | 'info' | 'warn' | 'error' | 'off'): void;\n  public setOption(key: 'bellStyle', value: 'none' | 'visual' | 'sound' | 'both'): void;\n  public setOption(key: 'cursorStyle', value: 'block' | 'underline' | 'bar'): void;\n  public setOption(key: 'allowTransparency' | 'cancelEvents' | 'convertEol' | 'cursorBlink' | 'disableStdin' | 'macOptionIsMeta' | 'rightClickSelectsWord' | 'popOnBell' | 'screenKeys' | 'useFlowControl' | 'visualBell', value: boolean): void;\n  public setOption(key: 'colors', value: string[]): void;\n  public setOption(key: 'fontSize' | 'letterSpacing' | 'lineHeight' | 'tabStopWidth' | 'scrollback', value: number): void;\n  public setOption(key: 'handler', value: (data: string) => void): void;\n  public setOption(key: 'theme', value: ITheme): void;\n  public setOption(key: 'cols' | 'rows', value: number): void;\n  public setOption(key: string, value: any): void;\n  public setOption(key: any, value: any): void {\n    this._core.optionsService.setOption(key, value);\n  }\n  public refresh(start: number, end: number): void {\n    this._verifyIntegers(start, end);\n    this._core.refresh(start, end);\n  }\n  public reset(): void {\n    this._core.reset();\n  }\n  public loadAddon(addon: ITerminalAddon): void {\n    return this._addonManager.loadAddon(this, addon);\n  }\n  public static get strings(): ILocalizableStrings {\n    return Strings;\n  }\n\n  private _verifyIntegers(...values: number[]): void {\n    values.forEach(value => {\n      if (value % 1 !== 0) {\n        throw new Error('This API does not accept floating point numbers');\n      }\n    });\n  }\n}\n\nclass BufferApiView implements IBufferApi {\n  constructor(private _buffer: IBuffer) {}\n\n  public get cursorY(): number { return this._buffer.y; }\n  public get cursorX(): number { return this._buffer.x; }\n  public get viewportY(): number { return this._buffer.ydisp; }\n  public get baseY(): number { return this._buffer.ybase; }\n  public get length(): number { return this._buffer.lines.length; }\n  public getLine(y: number): IBufferLineApi | undefined {\n    const line = this._buffer.lines.get(y);\n    if (!line) {\n      return undefined;\n    }\n    return new BufferLineApiView(line);\n  }\n}\n\nclass BufferLineApiView implements IBufferLineApi {\n  constructor(private _line: IBufferLine) {}\n\n  public get isWrapped(): boolean { return this._line.isWrapped; }\n  public getCell(x: number): IBufferCellApi | undefined {\n    if (x < 0 || x >= this._line.length) {\n      return undefined;\n    }\n    return new BufferCellApiView(this._line, x);\n  }\n  public translateToString(trimRight?: boolean, startColumn?: number, endColumn?: number): string {\n    return this._line.translateToString(trimRight, startColumn, endColumn);\n  }\n}\n\nclass BufferCellApiView implements IBufferCellApi {\n  constructor(private _line: IBufferLine, private _x: number) {}\n  public get char(): string { return this._line.getString(this._x); }\n  public get width(): number { return this._line.getWidth(this._x); }\n}\n\nclass ParserApi implements IParser {\n  constructor(private _core: ITerminal) {}\n\n  public addCsiHandler(id: IFunctionIdentifier, callback: (params: (number | number[])[]) => boolean): IDisposable {\n    return this._core.addCsiHandler(id, (params: IParams) => callback(params.toArray()));\n  }\n  public addDcsHandler(id: IFunctionIdentifier, callback: (data: string, param: (number | number[])[]) => boolean): IDisposable {\n    return this._core.addDcsHandler(id, (data: string, params: IParams) => callback(data, params.toArray()));\n  }\n  public addEscHandler(id: IFunctionIdentifier, handler: () => boolean): IDisposable {\n    return this._core.addEscHandler(id, handler);\n  }\n  public addOscHandler(ident: number, callback: (data: string) => boolean): IDisposable {\n    return this._core.addOscHandler(ident, callback);\n  }\n}\n","/**\n * Copyright (c) 2014 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n *\n * Originally forked from (with the author's permission):\n *   Fabrice Bellard's javascript vt100 for jslinux:\n *   http://bellard.org/jslinux/\n *   Copyright (c) 2011 Fabrice Bellard\n *   The original design remains. The terminal itself\n *   has been extended to include xterm CSI codes, among\n *   other features.\n *\n * Terminal Emulation References:\n *   http://vt100.net/\n *   http://invisible-island.net/xterm/ctlseqs/ctlseqs.txt\n *   http://invisible-island.net/xterm/ctlseqs/ctlseqs.html\n *   http://invisible-island.net/vttest/\n *   http://www.inwap.com/pdp10/ansicode.txt\n *   http://linux.die.net/man/4/console_codes\n *   http://linux.die.net/man/7/urxvt\n */\n\nimport { IInputHandlingTerminal, ICompositionHelper, ITerminalOptions, ITerminal, IBrowser, CustomKeyEventHandler } from './Types';\nimport { IRenderer, CharacterJoinerHandler } from 'browser/renderer/Types';\nimport { CompositionHelper } from 'browser/input/CompositionHelper';\nimport { Viewport } from 'browser/Viewport';\nimport { rightClickHandler, moveTextAreaUnderMouseCursor, handlePasteEvent, copyHandler, paste } from 'browser/Clipboard';\nimport { C0 } from 'common/data/EscapeSequences';\nimport { InputHandler } from './InputHandler';\nimport { Renderer } from './renderer/Renderer';\nimport { Linkifier } from 'browser/Linkifier';\nimport { SelectionService } from 'browser/services/SelectionService';\nimport * as Browser from 'common/Platform';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport * as Strings from 'browser/LocalizableStrings';\nimport { SoundService } from 'browser/services/SoundService';\nimport { MouseZoneManager } from 'browser/MouseZoneManager';\nimport { AccessibilityManager } from './AccessibilityManager';\nimport { ITheme, IMarker, IDisposable, ISelectionPosition } from 'xterm';\nimport { DomRenderer } from './renderer/dom/DomRenderer';\nimport { IKeyboardEvent, KeyboardResultType, ICharset, IBufferLine, IAttributeData } from 'common/Types';\nimport { evaluateKeyboardEvent } from 'common/input/Keyboard';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { DEFAULT_ATTR_DATA } from 'common/buffer/BufferLine';\nimport { applyWindowsMode } from './WindowsMode';\nimport { ColorManager } from 'browser/ColorManager';\nimport { RenderService } from 'browser/services/RenderService';\nimport { IOptionsService, IBufferService, ICoreService, ILogService, IDirtyRowService, IInstantiationService } from 'common/services/Services';\nimport { OptionsService } from 'common/services/OptionsService';\nimport { ICharSizeService, IRenderService, IMouseService, ISelectionService, ISoundService } from 'browser/services/Services';\nimport { CharSizeService } from 'browser/services/CharSizeService';\nimport { BufferService, MINIMUM_COLS, MINIMUM_ROWS } from 'common/services/BufferService';\nimport { Disposable } from 'common/Lifecycle';\nimport { IBufferSet, IBuffer } from 'common/buffer/Types';\nimport { Attributes } from 'common/buffer/Constants';\nimport { MouseService } from 'browser/services/MouseService';\nimport { IParams, IFunctionIdentifier } from 'common/parser/Types';\nimport { CoreService } from 'common/services/CoreService';\nimport { LogService } from 'common/services/LogService';\nimport { ILinkifier, IMouseZoneManager, LinkMatcherHandler, ILinkMatcherOptions, IViewport } from 'browser/Types';\nimport { DirtyRowService } from 'common/services/DirtyRowService';\nimport { InstantiationService } from 'common/services/InstantiationService';\n\n// Let it work inside Node.js for automated testing purposes.\nconst document = (typeof window !== 'undefined') ? window.document : null;\n\n/**\n * The amount of write requests to queue before sending an XOFF signal to the\n * pty process. This number must be small in order for ^C and similar sequences\n * to be responsive.\n */\nconst WRITE_BUFFER_PAUSE_THRESHOLD = 5;\n\n/**\n * The max number of ms to spend on writes before allowing the renderer to\n * catch up with a 0ms setTimeout. A value of < 33 to keep us close to\n * 30fps, and a value of < 16 to try to run at 60fps. Of course, the real FPS\n * depends on the time it takes for the renderer to draw the frame.\n */\nconst WRITE_TIMEOUT_MS = 12;\nconst WRITE_BUFFER_LENGTH_THRESHOLD = 50;\n\nexport class Terminal extends Disposable implements ITerminal, IDisposable, IInputHandlingTerminal {\n  public textarea: HTMLTextAreaElement;\n  public element: HTMLElement;\n  public screenElement: HTMLElement;\n\n  /**\n   * The HTMLElement that the terminal is created in, set by Terminal.open.\n   */\n  private _parent: HTMLElement;\n  private _document: Document;\n  private _viewportScrollArea: HTMLElement;\n  private _viewportElement: HTMLElement;\n  private _helperContainer: HTMLElement;\n  private _compositionView: HTMLElement;\n\n  private _visualBellTimer: number;\n\n  public browser: IBrowser = <any>Browser;\n\n  // TODO: We should remove options once components adopt optionsService\n  public get options(): ITerminalOptions { return this.optionsService.options; }\n\n  // TODO: This can be changed to an enum or boolean, 0 and 1 seem to be the only options\n  public cursorState: number;\n  public cursorHidden: boolean;\n\n  private _customKeyEventHandler: CustomKeyEventHandler;\n\n  // common services\n  private _bufferService: IBufferService;\n  private _coreService: ICoreService;\n  private _dirtyRowService: IDirtyRowService;\n  private _instantiationService: IInstantiationService;\n  private _logService: ILogService;\n  public optionsService: IOptionsService;\n\n  // browser services\n  private _charSizeService: ICharSizeService;\n  private _mouseService: IMouseService;\n  private _renderService: IRenderService;\n  private _selectionService: ISelectionService;\n  private _soundService: ISoundService;\n\n  // modes\n  public applicationKeypad: boolean;\n  public originMode: boolean;\n  public insertMode: boolean;\n  public wraparoundMode: boolean; // defaults: xterm - true, vt100 - false\n  public bracketedPasteMode: boolean;\n\n  // charset\n  // The current charset\n  public charset: ICharset;\n  public gcharset: number;\n  public glevel: number;\n  public charsets: ICharset[];\n\n  // mouse properties\n  private _decLocator: boolean; // This is unstable and never set\n  public x10Mouse: boolean;\n  public vt200Mouse: boolean;\n  private _vt300Mouse: boolean; // This is unstable and never set\n  public normalMouse: boolean;\n  public mouseEvents: boolean;\n  public sendFocus: boolean;\n  public utfMouse: boolean;\n  public sgrMouse: boolean;\n  public urxvtMouse: boolean;\n\n  // misc\n  public savedCols: number;\n\n  public curAttrData: IAttributeData;\n  private _eraseAttrData: IAttributeData;\n\n  public params: (string | number)[];\n  public currentParam: string | number;\n\n  // user input states\n  public writeBuffer: string[];\n  public writeBufferUtf8: Uint8Array[];\n  private _writeInProgress: boolean;\n\n  /**\n   * Whether _xterm.js_ sent XOFF in order to catch up with the pty process.\n   * This is a distinct state from writeStopped so that if the user requested\n   * XOFF via ^S that it will not automatically resume when the writeBuffer goes\n   * below threshold.\n   */\n  private _xoffSentToCatchUp: boolean;\n\n  /** Whether writing has been stopped as a result of XOFF */\n  // private _writeStopped: boolean;\n\n  // Store if user went browsing history in scrollback\n  private _userScrolling: boolean;\n\n  /**\n   * Records whether the keydown event has already been handled and triggered a data event, if so\n   * the keypress event should not trigger a data event but should still print to the textarea so\n   * screen readers will announce it.\n   */\n  private _keyDownHandled: boolean = false;\n\n  private _inputHandler: InputHandler;\n  public linkifier: ILinkifier;\n  public viewport: IViewport;\n  private _compositionHelper: ICompositionHelper;\n  private _mouseZoneManager: IMouseZoneManager;\n  private _accessibilityManager: AccessibilityManager;\n  private _colorManager: ColorManager;\n  private _theme: ITheme;\n  private _windowsMode: IDisposable | undefined;\n\n  // bufferline to clone/copy from for new blank lines\n  private _blankLine: IBufferLine = null;\n\n  public get cols(): number { return this._bufferService.cols; }\n  public get rows(): number { return this._bufferService.rows; }\n\n  private _onCursorMove = new EventEmitter<void>();\n  public get onCursorMove(): IEvent<void> { return this._onCursorMove.event; }\n  private _onData = new EventEmitter<string>();\n  public get onData(): IEvent<string> { return this._onData.event; }\n  private _onKey = new EventEmitter<{ key: string, domEvent: KeyboardEvent }>();\n  public get onKey(): IEvent<{ key: string, domEvent: KeyboardEvent }> { return this._onKey.event; }\n  private _onLineFeed = new EventEmitter<void>();\n  public get onLineFeed(): IEvent<void> { return this._onLineFeed.event; }\n  private _onRender = new EventEmitter<{ start: number, end: number }>();\n  public get onRender(): IEvent<{ start: number, end: number }> { return this._onRender.event; }\n  private _onResize = new EventEmitter<{ cols: number, rows: number }>();\n  public get onResize(): IEvent<{ cols: number, rows: number }> { return this._onResize.event; }\n  private _onScroll = new EventEmitter<number>();\n  public get onScroll(): IEvent<number> { return this._onScroll.event; }\n  private _onSelectionChange = new EventEmitter<void>();\n  public get onSelectionChange(): IEvent<void> { return this._onSelectionChange.event; }\n  private _onTitleChange = new EventEmitter<string>();\n  public get onTitleChange(): IEvent<string> { return this._onTitleChange.event; }\n\n  private _onFocus = new EventEmitter<void>();\n  public get onFocus(): IEvent<void> { return this._onFocus.event; }\n  private _onBlur = new EventEmitter<void>();\n  public get onBlur(): IEvent<void> { return this._onBlur.event; }\n  public onA11yCharEmitter = new EventEmitter<string>();\n  public get onA11yChar(): IEvent<string> { return this.onA11yCharEmitter.event; }\n  public onA11yTabEmitter = new EventEmitter<number>();\n  public get onA11yTab(): IEvent<number> { return this.onA11yTabEmitter.event; }\n\n  /**\n   * Creates a new `Terminal` object.\n   *\n   * @param options An object containing a set of options, the available options are:\n   *   - `cursorBlink` (boolean): Whether the terminal cursor blinks\n   *   - `cols` (number): The number of columns of the terminal (horizontal size)\n   *   - `rows` (number): The number of rows of the terminal (vertical size)\n   *\n   * @public\n   * @class Xterm Xterm\n   * @alias module:xterm/src/xterm\n   */\n  constructor(\n    options: ITerminalOptions = {}\n  ) {\n    super();\n\n    // Setup and initialize common services\n    this._instantiationService = new InstantiationService();\n    this.optionsService = new OptionsService(options);\n    this._instantiationService.setService(IOptionsService, this.optionsService);\n    this._bufferService = this._instantiationService.createInstance(BufferService);\n    this._instantiationService.setService(IBufferService, this._bufferService);\n    this._logService = this._instantiationService.createInstance(LogService);\n    this._instantiationService.setService(ILogService, this._logService);\n    this._coreService = this._instantiationService.createInstance(CoreService, () => this.scrollToBottom());\n    this._instantiationService.setService(ICoreService, this._coreService);\n    this._coreService.onData(e => this._onData.fire(e));\n    this._dirtyRowService = this._instantiationService.createInstance(DirtyRowService);\n    this._instantiationService.setService(IDirtyRowService, this._dirtyRowService);\n\n    this._setupOptionsListeners();\n    this._setup();\n  }\n\n  public dispose(): void {\n    if (this._isDisposed) {\n      return;\n    }\n    super.dispose();\n    if (this._windowsMode) {\n      this._windowsMode.dispose();\n      this._windowsMode = undefined;\n    }\n    if (this._renderService) {\n      this._renderService.dispose();\n    }\n    this._customKeyEventHandler = null;\n    this.write = () => {};\n    if (this.element && this.element.parentNode) {\n      this.element.parentNode.removeChild(this.element);\n    }\n  }\n\n  private _setup(): void {\n    this._parent = document ? document.body : null;\n\n    this.cursorState = 0;\n    this.cursorHidden = false;\n    this._customKeyEventHandler = null;\n\n    // modes\n    this.applicationKeypad = false;\n    this.originMode = false;\n    this.insertMode = false;\n    this.wraparoundMode = true; // defaults: xterm - true, vt100 - false\n    this.bracketedPasteMode = false;\n\n    // charset\n    this.charset = null;\n    this.gcharset = null;\n    this.glevel = 0;\n    // TODO: Can this be just []?\n    this.charsets = [null];\n\n    this.curAttrData = DEFAULT_ATTR_DATA.clone();\n    this._eraseAttrData = DEFAULT_ATTR_DATA.clone();\n\n    this.params = [];\n    this.currentParam = 0;\n\n    // user input states\n    this.writeBuffer = [];\n    this.writeBufferUtf8 = [];\n    this._writeInProgress = false;\n\n    this._xoffSentToCatchUp = false;\n    // this._writeStopped = false;\n    this._userScrolling = false;\n\n    // Register input handler and refire/handle events\n    this._inputHandler = new InputHandler(this, this._bufferService, this._coreService, this._dirtyRowService, this._logService, this.optionsService);\n    this._inputHandler.onCursorMove(() => this._onCursorMove.fire());\n    this._inputHandler.onLineFeed(() => this._onLineFeed.fire());\n    this.register(this._inputHandler);\n\n    this.linkifier = this.linkifier || new Linkifier(this._bufferService, this._logService);\n\n    if (this.options.windowsMode) {\n      this._windowsMode = applyWindowsMode(this);\n    }\n  }\n\n  /**\n   * Convenience property to active buffer.\n   */\n  public get buffer(): IBuffer {\n    return this.buffers.active;\n  }\n\n  public get buffers(): IBufferSet {\n    return this._bufferService.buffers;\n  }\n\n  /**\n   * back_color_erase feature for xterm.\n   */\n  public eraseAttrData(): IAttributeData {\n    this._eraseAttrData.bg &= ~(Attributes.CM_MASK | 0xFFFFFF);\n    this._eraseAttrData.bg |= this.curAttrData.bg & ~0xFC000000;\n    return this._eraseAttrData;\n  }\n\n  /**\n   * Focus the terminal. Delegates focus handling to the terminal's DOM element.\n   */\n  public focus(): void {\n    if (this.textarea) {\n      this.textarea.focus({ preventScroll: true });\n    }\n  }\n\n  public get isFocused(): boolean {\n    return document.activeElement === this.textarea && document.hasFocus();\n  }\n\n  private _setupOptionsListeners(): void {\n    // TODO: These listeners should be owned by individual components\n    this.optionsService.onOptionChange(key => {\n      switch (key) {\n        case 'fontFamily':\n        case 'fontSize':\n          // When the font changes the size of the cells may change which requires a renderer clear\n          if (this._renderService) {\n            this._renderService.clear();\n          }\n          if (this._charSizeService) {\n            this._charSizeService.measure();\n          }\n          break;\n        case 'drawBoldTextInBrightColors':\n        case 'letterSpacing':\n        case 'lineHeight':\n        case 'fontWeight':\n        case 'fontWeightBold':\n          // When the font changes the size of the cells may change which requires a renderer clear\n          if (this._renderService) {\n            this._renderService.clear();\n            this._renderService.onResize(this.cols, this.rows);\n            this.refresh(0, this.rows - 1);\n          }\n          break;\n        case 'rendererType':\n          if (this._renderService) {\n            this._renderService.setRenderer(this._createRenderer());\n            this._renderService.onResize(this.cols, this.rows);\n          }\n          break;\n        case 'scrollback':\n          this.buffers.resize(this.cols, this.rows);\n          if (this.viewport) {\n            this.viewport.syncScrollArea();\n          }\n          break;\n        case 'screenReaderMode':\n          if (this.optionsService.options.screenReaderMode) {\n            if (!this._accessibilityManager && this._renderService) {\n              this._accessibilityManager = new AccessibilityManager(this, this._renderService);\n            }\n          } else {\n            if (this._accessibilityManager) {\n              this._accessibilityManager.dispose();\n              this._accessibilityManager = null;\n            }\n          }\n          break;\n        case 'tabStopWidth': this.buffers.setupTabStops(); break;\n        case 'theme':\n          this._setTheme(this.optionsService.options.theme);\n          break;\n        case 'scrollback':\n          const newBufferLength = this.rows + this.optionsService.options.scrollback;\n          if (this.buffer.lines.length > newBufferLength) {\n            const amountToTrim = this.buffer.lines.length - newBufferLength;\n            const needsRefresh = (this.buffer.ydisp - amountToTrim < 0);\n            this.buffer.lines.trimStart(amountToTrim);\n            this.buffer.ybase = Math.max(this.buffer.ybase - amountToTrim, 0);\n            this.buffer.ydisp = Math.max(this.buffer.ydisp - amountToTrim, 0);\n            if (needsRefresh) {\n              this.refresh(0, this.rows - 1);\n            }\n          }\n        case 'windowsMode':\n          if (this.optionsService.options.windowsMode) {\n            if (!this._windowsMode) {\n              this._windowsMode = applyWindowsMode(this);\n            }\n          } else {\n            if (this._windowsMode) {\n              this._windowsMode.dispose();\n              this._windowsMode = undefined;\n            }\n          }\n          break;\n      }\n    });\n  }\n\n  /**\n   * Binds the desired focus behavior on a given terminal object.\n   */\n  private _onTextAreaFocus(ev: KeyboardEvent): void {\n    if (this.sendFocus) {\n      this._coreService.triggerDataEvent(C0.ESC + '[I');\n    }\n    this.updateCursorStyle(ev);\n    this.element.classList.add('focus');\n    this.showCursor();\n    this._onFocus.fire();\n  }\n\n  /**\n   * Blur the terminal, calling the blur function on the terminal's underlying\n   * textarea.\n   */\n  public blur(): void {\n    return this.textarea.blur();\n  }\n\n  /**\n   * Binds the desired blur behavior on a given terminal object.\n   */\n  private _onTextAreaBlur(): void {\n    // Text can safely be removed on blur. Doing it earlier could interfere with\n    // screen readers reading it out.\n    this.textarea.value = '';\n    this.refresh(this.buffer.y, this.buffer.y);\n    if (this.sendFocus) {\n      this._coreService.triggerDataEvent(C0.ESC + '[O');\n    }\n    this.element.classList.remove('focus');\n    this._onBlur.fire();\n  }\n\n  /**\n   * Initialize default behavior\n   */\n  private _initGlobal(): void {\n    this._bindKeys();\n\n    // Bind clipboard functionality\n    this.register(addDisposableDomListener(this.element, 'copy', (event: ClipboardEvent) => {\n      // If mouse events are active it means the selection manager is disabled and\n      // copy should be handled by the host program.\n      if (!this.hasSelection()) {\n        return;\n      }\n      copyHandler(event, this._selectionService);\n    }));\n    const pasteHandlerWrapper = (event: ClipboardEvent) => handlePasteEvent(event, this.textarea, this.bracketedPasteMode, this._coreService);\n    this.register(addDisposableDomListener(this.textarea, 'paste', pasteHandlerWrapper));\n    this.register(addDisposableDomListener(this.element, 'paste', pasteHandlerWrapper));\n\n    // Handle right click context menus\n    if (Browser.isFirefox) {\n      // Firefox doesn't appear to fire the contextmenu event on right click\n      this.register(addDisposableDomListener(this.element, 'mousedown', (event: MouseEvent) => {\n        if (event.button === 2) {\n          rightClickHandler(event, this.textarea, this.screenElement, this._selectionService, this.options.rightClickSelectsWord);\n        }\n      }));\n    } else {\n      this.register(addDisposableDomListener(this.element, 'contextmenu', (event: MouseEvent) => {\n        rightClickHandler(event, this.textarea, this.screenElement, this._selectionService, this.options.rightClickSelectsWord);\n      }));\n    }\n\n    // Move the textarea under the cursor when middle clicking on Linux to ensure\n    // middle click to paste selection works. This only appears to work in Chrome\n    // at the time is writing.\n    if (Browser.isLinux) {\n      // Use auxclick event over mousedown the latter doesn't seem to work. Note\n      // that the regular click event doesn't fire for the middle mouse button.\n      this.register(addDisposableDomListener(this.element, 'auxclick', (event: MouseEvent) => {\n        if (event.button === 1) {\n          moveTextAreaUnderMouseCursor(event, this.textarea, this.screenElement);\n        }\n      }));\n    }\n  }\n\n  /**\n   * Apply key handling to the terminal\n   */\n  private _bindKeys(): void {\n    this.register(addDisposableDomListener(this.textarea, 'keyup', (ev: KeyboardEvent) => this._keyUp(ev), true));\n    this.register(addDisposableDomListener(this.textarea, 'keydown', (ev: KeyboardEvent) => this._keyDown(ev), true));\n    this.register(addDisposableDomListener(this.textarea, 'keypress', (ev: KeyboardEvent) => this._keyPress(ev), true));\n    this.register(addDisposableDomListener(this.textarea, 'compositionstart', () => this._compositionHelper.compositionstart()));\n    this.register(addDisposableDomListener(this.textarea, 'compositionupdate', (e: CompositionEvent) => this._compositionHelper.compositionupdate(e)));\n    this.register(addDisposableDomListener(this.textarea, 'compositionend', () => this._compositionHelper.compositionend()));\n    this.register(this.onRender(() => this._compositionHelper.updateCompositionElements()));\n    this.register(this.onRender(e => this._queueLinkification(e.start, e.end)));\n  }\n\n  /**\n   * Opens the terminal within an element.\n   *\n   * @param parent The element to create the terminal within.\n   */\n  public open(parent: HTMLElement): void {\n    this._parent = parent || this._parent;\n\n    if (!this._parent) {\n      throw new Error('Terminal requires a parent element.');\n    }\n\n    this._document = this._parent.ownerDocument;\n\n    // Create main element container\n    this.element = this._document.createElement('div');\n    this.element.dir = 'ltr';   // xterm.css assumes LTR\n    this.element.classList.add('terminal');\n    this.element.classList.add('xterm');\n    this.element.setAttribute('tabindex', '0');\n    this._parent.appendChild(this.element);\n\n    // Performance: Use a document fragment to build the terminal\n    // viewport and helper elements detached from the DOM\n    const fragment = document.createDocumentFragment();\n    this._viewportElement = document.createElement('div');\n    this._viewportElement.classList.add('xterm-viewport');\n    fragment.appendChild(this._viewportElement);\n    this._viewportScrollArea = document.createElement('div');\n    this._viewportScrollArea.classList.add('xterm-scroll-area');\n    this._viewportElement.appendChild(this._viewportScrollArea);\n\n    this.screenElement = document.createElement('div');\n    this.screenElement.classList.add('xterm-screen');\n    // Create the container that will hold helpers like the textarea for\n    // capturing DOM Events. Then produce the helpers.\n    this._helperContainer = document.createElement('div');\n    this._helperContainer.classList.add('xterm-helpers');\n    this.screenElement.appendChild(this._helperContainer);\n    fragment.appendChild(this.screenElement);\n\n    this.textarea = document.createElement('textarea');\n    this.textarea.classList.add('xterm-helper-textarea');\n    this.textarea.setAttribute('aria-label', Strings.promptLabel);\n    this.textarea.setAttribute('aria-multiline', 'false');\n    this.textarea.setAttribute('autocorrect', 'off');\n    this.textarea.setAttribute('autocapitalize', 'off');\n    this.textarea.setAttribute('spellcheck', 'false');\n    this.textarea.tabIndex = 0;\n    this.register(addDisposableDomListener(this.textarea, 'focus', (ev: KeyboardEvent) => this._onTextAreaFocus(ev)));\n    this.register(addDisposableDomListener(this.textarea, 'blur', () => this._onTextAreaBlur()));\n    this._helperContainer.appendChild(this.textarea);\n\n    this._charSizeService = this._instantiationService.createInstance(CharSizeService, this._document, this._helperContainer);\n    this._instantiationService.setService(ICharSizeService, this._charSizeService);\n\n    this._compositionView = document.createElement('div');\n    this._compositionView.classList.add('composition-view');\n    this._compositionHelper = this._instantiationService.createInstance(CompositionHelper, this.textarea, this._compositionView);\n    this._helperContainer.appendChild(this._compositionView);\n\n    // Performance: Add viewport and helper elements from the fragment\n    this.element.appendChild(fragment);\n\n    this._theme = this.options.theme;\n    this.options.theme = null;\n    this._colorManager = new ColorManager(document, this.options.allowTransparency);\n    this._colorManager.setTheme(this._theme);\n\n    const renderer = this._createRenderer();\n    this._renderService = this._instantiationService.createInstance(RenderService, renderer, this.rows, this.screenElement);\n    this._instantiationService.setService(IRenderService, this._renderService);\n    this._renderService.onRender(e => this._onRender.fire(e));\n    this.onResize(e => this._renderService.resize(e.cols, e.rows));\n\n    this._soundService = this._instantiationService.createInstance(SoundService);\n    this._instantiationService.setService(ISoundService, this._soundService);\n    this._mouseService = this._instantiationService.createInstance(MouseService);\n    this._instantiationService.setService(IMouseService, this._mouseService);\n\n    this.viewport = this._instantiationService.createInstance(Viewport,\n      (amount: number, suppressEvent: boolean) => this.scrollLines(amount, suppressEvent),\n      this._viewportElement,\n      this._viewportScrollArea\n    );\n    this.viewport.onThemeChange(this._colorManager.colors);\n    this.register(this.viewport);\n\n    this.register(this.onCursorMove(() => this._renderService.onCursorMove()));\n    this.register(this.onResize(() => this._renderService.onResize(this.cols, this.rows)));\n    this.register(this.onBlur(() => this._renderService.onBlur()));\n    this.register(this.onFocus(() => this._renderService.onFocus()));\n    this.register(this._renderService.onDimensionsChange(() => this.viewport.syncScrollArea()));\n\n    this._selectionService = this._instantiationService.createInstance(SelectionService,\n      (amount: number, suppressEvent: boolean) => this.scrollLines(amount, suppressEvent),\n      this.element,\n      this.screenElement);\n    this._instantiationService.setService(ISelectionService, this._selectionService);\n    this.register(this._selectionService.onSelectionChange(() => this._onSelectionChange.fire()));\n    this.register(this._selectionService.onRedrawRequest(e => this._renderService.onSelectionChanged(e.start, e.end, e.columnSelectMode)));\n    this.register(this._selectionService.onLinuxMouseSelection(text => {\n      // If there's a new selection, put it into the textarea, focus and select it\n      // in order to register it as a selection on the OS. This event is fired\n      // only on Linux to enable middle click to paste selection.\n      this.textarea.value = text;\n      this.textarea.focus();\n      this.textarea.select();\n    }));\n    this.register(this.onScroll(() => {\n      this.viewport.syncScrollArea();\n      this._selectionService.refresh();\n    }));\n    this.register(addDisposableDomListener(this._viewportElement, 'scroll', () => this._selectionService.refresh()));\n\n    this._mouseZoneManager = this._instantiationService.createInstance(MouseZoneManager, this.element, this.screenElement);\n    this.register(this._mouseZoneManager);\n    this.register(this.onScroll(() => this._mouseZoneManager.clearAll()));\n    this.linkifier.attachToDom(this.element, this._mouseZoneManager);\n\n    // This event listener must be registered aftre MouseZoneManager is created\n    this.register(addDisposableDomListener(this.element, 'mousedown', (e: MouseEvent) => this._selectionService.onMouseDown(e)));\n\n    // apply mouse event classes set by escape codes before terminal was attached\n    if (this.mouseEvents) {\n      this._selectionService.disable();\n      this.element.classList.add('enable-mouse-events');\n    } else {\n      this._selectionService.enable();\n    }\n    this._inputHandler.setBrowserServices(this._selectionService);\n\n    if (this.options.screenReaderMode) {\n      // Note that this must be done *after* the renderer is created in order to\n      // ensure the correct order of the dprchange event\n      this._accessibilityManager = new AccessibilityManager(this, this._renderService);\n    }\n\n    // Measure the character size\n    this._charSizeService.measure();\n\n    // Setup loop that draws to screen\n    this.refresh(0, this.rows - 1);\n\n    // Initialize global actions that need to be taken on the document.\n    this._initGlobal();\n\n    // Listen for mouse events and translate\n    // them into terminal mouse protocols.\n    this.bindMouse();\n\n  }\n\n  private _createRenderer(): IRenderer {\n    switch (this.options.rendererType) {\n      case 'canvas': return new Renderer(this._colorManager.colors, this, this._bufferService, this._charSizeService, this.optionsService);\n      case 'dom': return new DomRenderer(this, this._colorManager.colors, this._charSizeService, this.optionsService);\n      default: throw new Error(`Unrecognized rendererType \"${this.options.rendererType}\"`);\n    }\n  }\n\n  /**\n   * Sets the theme on the renderer. The renderer must have been initialized.\n   * @param theme The theme to set.\n   */\n  private _setTheme(theme: ITheme): void {\n    this._theme = theme;\n    if (this._colorManager) {\n      this._colorManager.setTheme(theme);\n    }\n    if (this._renderService) {\n      this._renderService.setColors(this._colorManager.colors);\n    }\n    if (this.viewport) {\n      this.viewport.onThemeChange(this._colorManager.colors);\n    }\n  }\n\n  /**\n   * XTerm mouse events\n   * http://invisible-island.net/xterm/ctlseqs/ctlseqs.html#Mouse%20Tracking\n   * To better understand these\n   * the xterm code is very helpful:\n   * Relevant files:\n   *   button.c, charproc.c, misc.c\n   * Relevant functions in xterm/button.c:\n   *   BtnCode, EmitButtonCode, EditorButton, SendMousePosition\n   */\n  public bindMouse(): void {\n    const el = this.element;\n    const self = this;\n    let pressed = 32;\n\n    // mouseup, mousedown, wheel\n    // left click: ^[[M 3<^[[M#3<\n    // wheel up: ^[[M`3>\n    function sendButton(ev: MouseEvent | WheelEvent): void {\n      let button;\n      let pos;\n\n      // get the xterm-style button\n      button = getButton(ev);\n\n      // get mouse coordinates\n      pos = self._mouseService.getRawByteCoords(ev, self.screenElement, self.cols, self.rows);\n      if (!pos) return;\n\n      sendEvent(button, pos);\n\n      switch ((<any>ev).overrideType || ev.type) {\n        case 'mousedown':\n          pressed = button;\n          break;\n        case 'mouseup':\n          // keep it at the left\n          // button, just in case.\n          pressed = 32;\n          break;\n        case 'wheel':\n          // nothing. don't\n          // interfere with\n          // `pressed`.\n          break;\n      }\n    }\n\n    // motion example of a left click:\n    // ^[[M 3<^[[M@4<^[[M@5<^[[M@6<^[[M@7<^[[M#7<\n    function sendMove(ev: MouseEvent): void {\n      let button = pressed;\n      const pos = self._mouseService.getRawByteCoords(ev, self.screenElement, self.cols, self.rows);\n      if (!pos) return;\n\n      // buttons marked as motions\n      // are incremented by 32\n      button += 32;\n\n      sendEvent(button, pos);\n    }\n\n    // encode button and\n    // position to characters\n    function encode(data: number[], ch: number): void {\n      if (!self.utfMouse) {\n        if (ch === 255) {\n          data.push(0);\n          return;\n        }\n        if (ch > 127) ch = 127;\n        data.push(ch);\n      } else {\n        if (ch > 2047) {\n          data.push(2047);\n          return;\n        }\n        data.push(ch);\n      }\n    }\n\n    // send a mouse event:\n    // regular/utf8: ^[[M Cb Cx Cy\n    // urxvt: ^[[ Cb ; Cx ; Cy M\n    // sgr: ^[[ Cb ; Cx ; Cy M/m\n    // vt300: ^[[ 24(1/3/5)~ [ Cx , Cy ] \\r\n    // locator: CSI P e ; P b ; P r ; P c ; P p & w\n    function sendEvent(button: number, pos: {x: number, y: number}): void {\n      if (self._vt300Mouse) {\n        // NOTE: Unstable.\n        // http://www.vt100.net/docs/vt3xx-gp/chapter15.html\n        button &= 3;\n        pos.x -= 32;\n        pos.y -= 32;\n        let data = C0.ESC + '[24';\n        if (button === 0) data += '1';\n        else if (button === 1) data += '3';\n        else if (button === 2) data += '5';\n        else if (button === 3) return;\n        else data += '0';\n        data += '~[' + pos.x + ',' + pos.y + ']\\r';\n        self._coreService.triggerDataEvent(data, true);\n        return;\n      }\n\n      if (self._decLocator) {\n        // NOTE: Unstable.\n        button &= 3;\n        pos.x -= 32;\n        pos.y -= 32;\n        if (button === 0) button = 2;\n        else if (button === 1) button = 4;\n        else if (button === 2) button = 6;\n        else if (button === 3) button = 3;\n        self._coreService.triggerDataEvent(C0.ESC + '['\n                  + button\n                  + ';'\n                  + (button === 3 ? 4 : 0)\n                  + ';'\n                  + pos.y\n                  + ';'\n                  + pos.x\n                  + ';'\n                  // Not sure what page is meant to be\n                  + (<any>pos).page || 0\n                  + '&w', true);\n        return;\n      }\n\n      if (self.urxvtMouse) {\n        pos.x -= 32;\n        pos.y -= 32;\n        pos.x++;\n        pos.y++;\n        self._coreService.triggerDataEvent(C0.ESC + '[' + button + ';' + pos.x + ';' + pos.y + 'M', true);\n        return;\n      }\n\n      if (self.sgrMouse) {\n        pos.x -= 32;\n        pos.y -= 32;\n        self._coreService.triggerDataEvent(C0.ESC + '[<'\n                  + (((button & 3) === 3 ? button & ~3 : button) - 32)\n                  + ';'\n                  + pos.x\n                  + ';'\n                  + pos.y\n                  + ((button & 3) === 3 ? 'm' : 'M'), true);\n        return;\n      }\n\n      const data: number[] = [];\n\n      encode(data, button);\n      encode(data, pos.x);\n      encode(data, pos.y);\n\n      self._coreService.triggerDataEvent(C0.ESC + '[M' + String.fromCharCode.apply(String, data), true);\n    }\n\n    function getButton(ev: MouseEvent): number {\n      let button;\n      let shift;\n      let meta;\n      let ctrl;\n      let mod;\n\n      // two low bits:\n      // 0 = left\n      // 1 = middle\n      // 2 = right\n      // 3 = release\n      // wheel up/down:\n      // 1, and 2 - with 64 added\n      switch ((<any>ev).overrideType || ev.type) {\n        case 'mousedown':\n          button = ev.button !== null && ev.button !== undefined\n            ? +ev.button\n          : ev.which !== null && ev.which !== undefined\n            ? ev.which - 1\n          : null;\n          break;\n        case 'mouseup':\n          button = 3;\n          break;\n        case 'DOMMouseScroll':\n          button = ev.detail < 0\n            ? 64\n          : 65;\n          break;\n        case 'wheel':\n          button = (<WheelEvent>ev).deltaY < 0\n            ? 64\n          : 65;\n          break;\n      }\n\n      // next three bits are the modifiers:\n      // 4 = shift, 8 = meta, 16 = control\n      shift = ev.shiftKey ? 4 : 0;\n      meta = ev.metaKey ? 8 : 0;\n      ctrl = ev.ctrlKey ? 16 : 0;\n      mod = shift | meta | ctrl;\n\n      // no mods\n      if (self.vt200Mouse) {\n        // ctrl only\n        mod &= ctrl;\n      } else if (!self.normalMouse) {\n        mod = 0;\n      }\n\n      // increment to SP\n      button = (32 + (mod << 2)) + button;\n\n      return button;\n    }\n\n    this.register(addDisposableDomListener(el, 'mousedown', (ev: MouseEvent) => {\n\n      // Prevent the focus on the textarea from getting lost\n      // and make sure we get focused on mousedown\n      ev.preventDefault();\n      this.focus();\n\n      // Don't send the mouse button to the pty if mouse events are disabled or\n      // if the selection manager is having selection forced (ie. a modifier is\n      // held).\n      if (!this.mouseEvents || this._selectionService.shouldForceSelection(ev)) {\n        return;\n      }\n\n      // send the button\n      sendButton(ev);\n\n      // fix for odd bug\n      // if (this.vt200Mouse && !this.normalMouse) {\n      if (this.vt200Mouse) {\n        (<any>ev).overrideType = 'mouseup';\n        sendButton(ev);\n        return this.cancel(ev);\n      }\n\n      // TODO: All mouse handling should be pulled into its own file.\n\n      // bind events\n      let moveHandler: (event: MouseEvent) => void;\n      if (this.normalMouse) {\n        moveHandler = (event: MouseEvent) => {\n          // Do nothing if normal mouse mode is on. This can happen if the mouse is held down when the\n          // terminal exits normalMouse mode.\n          if (!this.normalMouse) {\n            return;\n          }\n          sendMove(event);\n        };\n        // TODO: these event listeners should be managed by the disposable, the Terminal reference may\n        // be kept aroud if Terminal.dispose is fired when the mouse is down\n        this._document.addEventListener('mousemove', moveHandler);\n      }\n\n      // x10 compatibility mode can't send button releases\n      const handler = (ev: MouseEvent) => {\n        if (this.normalMouse && !this.x10Mouse) {\n          sendButton(ev);\n        }\n        if (moveHandler) {\n          // Even though this should only be attached when this.normalMouse is true, holding the\n          // mouse button down when normalMouse changes can happen. Just always try to remove it.\n          this._document.removeEventListener('mousemove', moveHandler);\n          moveHandler = null;\n        }\n        this._document.removeEventListener('mouseup', handler);\n        return this.cancel(ev);\n      };\n      this._document.addEventListener('mouseup', handler);\n\n      return this.cancel(ev);\n    }));\n\n    // if (this.normalMouse) {\n    //  on(this.document, 'mousemove', sendMove);\n    // }\n\n    this.register(addDisposableDomListener(el, 'wheel', (ev: WheelEvent) => {\n      if (!this.mouseEvents) {\n        // Convert wheel events into up/down events when the buffer does not have scrollback, this\n        // enables scrolling in apps hosted in the alt buffer such as vim or tmux.\n        if (!this.buffer.hasScrollback) {\n          const amount = this.viewport.getLinesScrolled(ev);\n\n          // Do nothing if there's no vertical scroll\n          if (amount === 0) {\n            return;\n          }\n\n          // Construct and send sequences\n          const sequence = C0.ESC + (this._coreService.decPrivateModes.applicationCursorKeys ? 'O' : '[') + ( ev.deltaY < 0 ? 'A' : 'B');\n          let data = '';\n          for (let i = 0; i < Math.abs(amount); i++) {\n            data += sequence;\n          }\n          this._coreService.triggerDataEvent(data, true);\n        }\n        return;\n      }\n      if (this.x10Mouse || this._vt300Mouse || this._decLocator) return;\n      sendButton(ev);\n      ev.preventDefault();\n    }));\n\n    // allow wheel scrolling in\n    // the shell for example\n    this.register(addDisposableDomListener(el, 'wheel', (ev: WheelEvent) => {\n      if (this.mouseEvents) return;\n      this.viewport.onWheel(ev);\n      return this.cancel(ev);\n    }));\n\n    this.register(addDisposableDomListener(el, 'touchstart', (ev: TouchEvent) => {\n      if (this.mouseEvents) return;\n      this.viewport.onTouchStart(ev);\n      return this.cancel(ev);\n    }));\n\n    this.register(addDisposableDomListener(el, 'touchmove', (ev: TouchEvent) => {\n      if (this.mouseEvents) return;\n      this.viewport.onTouchMove(ev);\n      return this.cancel(ev);\n    }));\n  }\n\n  /**\n   * Tells the renderer to refresh terminal content between two rows (inclusive) at the next\n   * opportunity.\n   * @param start The row to start from (between 0 and this.rows - 1).\n   * @param end The row to end at (between start and this.rows - 1).\n   */\n  public refresh(start: number, end: number): void {\n    if (this._renderService) {\n      this._renderService.refreshRows(start, end);\n    }\n  }\n\n  /**\n   * Queues linkification for the specified rows.\n   * @param start The row to start from (between 0 and this.rows - 1).\n   * @param end The row to end at (between start and this.rows - 1).\n   */\n  private _queueLinkification(start: number, end: number): void {\n    if (this.linkifier) {\n      this.linkifier.linkifyRows(start, end);\n    }\n  }\n\n  /**\n   * Change the cursor style for different selection modes\n   */\n  public updateCursorStyle(ev: KeyboardEvent): void {\n    if (this._selectionService && this._selectionService.shouldColumnSelect(ev)) {\n      this.element.classList.add('column-select');\n    } else {\n      this.element.classList.remove('column-select');\n    }\n  }\n\n  /**\n   * Display the cursor element\n   */\n  public showCursor(): void {\n    if (!this.cursorState) {\n      this.cursorState = 1;\n      this.refresh(this.buffer.y, this.buffer.y);\n    }\n  }\n\n  /**\n   * Scroll the terminal down 1 row, creating a blank line.\n   * @param isWrapped Whether the new line is wrapped from the previous line.\n   */\n  public scroll(isWrapped: boolean = false): void {\n    let newLine: IBufferLine;\n    newLine = this._blankLine;\n    const eraseAttr = this.eraseAttrData();\n    if (!newLine || newLine.length !== this.cols || newLine.getFg(0) !== eraseAttr.fg || newLine.getBg(0) !== eraseAttr.bg) {\n      newLine = this.buffer.getBlankLine(eraseAttr, isWrapped);\n      this._blankLine = newLine;\n    }\n    newLine.isWrapped = isWrapped;\n\n    const topRow = this.buffer.ybase + this.buffer.scrollTop;\n    const bottomRow = this.buffer.ybase + this.buffer.scrollBottom;\n\n    if (this.buffer.scrollTop === 0) {\n      // Determine whether the buffer is going to be trimmed after insertion.\n      const willBufferBeTrimmed = this.buffer.lines.isFull;\n\n      // Insert the line using the fastest method\n      if (bottomRow === this.buffer.lines.length - 1) {\n        if (willBufferBeTrimmed) {\n          this.buffer.lines.recycle().copyFrom(newLine);\n        } else {\n          this.buffer.lines.push(newLine.clone());\n        }\n      } else {\n        this.buffer.lines.splice(bottomRow + 1, 0, newLine.clone());\n      }\n\n      // Only adjust ybase and ydisp when the buffer is not trimmed\n      if (!willBufferBeTrimmed) {\n        this.buffer.ybase++;\n        // Only scroll the ydisp with ybase if the user has not scrolled up\n        if (!this._userScrolling) {\n          this.buffer.ydisp++;\n        }\n      } else {\n        // When the buffer is full and the user has scrolled up, keep the text\n        // stable unless ydisp is right at the top\n        if (this._userScrolling) {\n          this.buffer.ydisp = Math.max(this.buffer.ydisp - 1, 0);\n        }\n      }\n    } else {\n      // scrollTop is non-zero which means no line will be going to the\n      // scrollback, instead we can just shift them in-place.\n      const scrollRegionHeight = bottomRow - topRow + 1/*as it's zero-based*/;\n      this.buffer.lines.shiftElements(topRow + 1, scrollRegionHeight - 1, -1);\n      this.buffer.lines.set(bottomRow, newLine.clone());\n    }\n\n    // Move the viewport to the bottom of the buffer unless the user is\n    // scrolling.\n    if (!this._userScrolling) {\n      this.buffer.ydisp = this.buffer.ybase;\n    }\n\n    // Flag rows that need updating\n    this._dirtyRowService.markRangeDirty(this.buffer.scrollTop, this.buffer.scrollBottom);\n\n    this._onScroll.fire(this.buffer.ydisp);\n  }\n\n  /**\n   * Scroll the display of the terminal\n   * @param disp The number of lines to scroll down (negative scroll up).\n   * @param suppressScrollEvent Don't emit the scroll event as scrollLines. This is used\n   * to avoid unwanted events being handled by the viewport when the event was triggered from the\n   * viewport originally.\n   */\n  public scrollLines(disp: number, suppressScrollEvent?: boolean): void {\n    if (disp < 0) {\n      if (this.buffer.ydisp === 0) {\n        return;\n      }\n      this._userScrolling = true;\n    } else if (disp + this.buffer.ydisp >= this.buffer.ybase) {\n      this._userScrolling = false;\n    }\n\n    const oldYdisp = this.buffer.ydisp;\n    this.buffer.ydisp = Math.max(Math.min(this.buffer.ydisp + disp, this.buffer.ybase), 0);\n\n    // No change occurred, don't trigger scroll/refresh\n    if (oldYdisp === this.buffer.ydisp) {\n      return;\n    }\n\n    if (!suppressScrollEvent) {\n      this._onScroll.fire(this.buffer.ydisp);\n    }\n\n    this.refresh(0, this.rows - 1);\n  }\n\n  /**\n   * Scroll the display of the terminal by a number of pages.\n   * @param pageCount The number of pages to scroll (negative scrolls up).\n   */\n  public scrollPages(pageCount: number): void {\n    this.scrollLines(pageCount * (this.rows - 1));\n  }\n\n  /**\n   * Scrolls the display of the terminal to the top.\n   */\n  public scrollToTop(): void {\n    this.scrollLines(-this.buffer.ydisp);\n  }\n\n  /**\n   * Scrolls the display of the terminal to the bottom.\n   */\n  public scrollToBottom(): void {\n    this.scrollLines(this.buffer.ybase - this.buffer.ydisp);\n  }\n\n  public scrollToLine(line: number): void {\n    const scrollAmount = line - this.buffer.ydisp;\n    if (scrollAmount !== 0) {\n      this.scrollLines(scrollAmount);\n    }\n  }\n\n  /**\n   * Writes raw utf8 bytes to the terminal.\n   * @param data UintArray with UTF8 bytes to write to the terminal.\n   */\n  public writeUtf8(data: Uint8Array): void {\n    // Ensure the terminal isn't disposed\n    if (this._isDisposed) {\n      return;\n    }\n\n    // Ignore falsy data values\n    if (!data) {\n      return;\n    }\n\n    this.writeBufferUtf8.push(data);\n\n    // Send XOFF to pause the pty process if the write buffer becomes too large so\n    // xterm.js can catch up before more data is sent. This is necessary in order\n    // to keep signals such as ^C responsive.\n    if (this.options.useFlowControl && !this._xoffSentToCatchUp && this.writeBufferUtf8.length >= WRITE_BUFFER_PAUSE_THRESHOLD) {\n      // XOFF - stop pty pipe\n      // XON will be triggered by emulator before processing data chunk\n      this._coreService.triggerDataEvent(C0.DC3);\n      this._xoffSentToCatchUp = true;\n    }\n\n    if (!this._writeInProgress && this.writeBufferUtf8.length > 0) {\n      // Kick off a write which will write all data in sequence recursively\n      this._writeInProgress = true;\n      // Kick off an async innerWrite so more writes can come in while processing data\n      setTimeout(() => {\n        this._innerWriteUtf8();\n      });\n    }\n  }\n\n  protected _innerWriteUtf8(bufferOffset: number = 0): void {\n    // Ensure the terminal isn't disposed\n    if (this._isDisposed) {\n      this.writeBufferUtf8 = [];\n    }\n\n    const startTime = Date.now();\n    while (this.writeBufferUtf8.length > bufferOffset) {\n      const data = this.writeBufferUtf8[bufferOffset];\n      bufferOffset++;\n\n      // If XOFF was sent in order to catch up with the pty process, resume it if\n      // we reached the end of the writeBuffer to allow more data to come in.\n      if (this._xoffSentToCatchUp && this.writeBufferUtf8.length === bufferOffset) {\n        this._coreService.triggerDataEvent(C0.DC1);\n        this._xoffSentToCatchUp = false;\n      }\n\n      this._inputHandler.parseUtf8(data);\n\n      this.refresh(this._dirtyRowService.start, this._dirtyRowService.end);\n\n      if (Date.now() - startTime >= WRITE_TIMEOUT_MS) {\n        break;\n      }\n    }\n    if (this.writeBufferUtf8.length > bufferOffset) {\n      // Allow renderer to catch up before processing the next batch\n      // trim already processed chunks if we are above threshold\n      if (bufferOffset > WRITE_BUFFER_LENGTH_THRESHOLD) {\n        this.writeBufferUtf8 = this.writeBufferUtf8.slice(bufferOffset);\n        bufferOffset = 0;\n      }\n      setTimeout(() => this._innerWriteUtf8(bufferOffset), 0);\n    } else {\n      this._writeInProgress = false;\n      this.writeBufferUtf8 = [];\n    }\n  }\n\n  /**\n   * Writes text to the terminal.\n   * @param data The text to write to the terminal.\n   */\n  public write(data: string): void {\n    // Ensure the terminal isn't disposed\n    if (this._isDisposed) {\n      return;\n    }\n\n    // Ignore falsy data values (including the empty string)\n    if (!data) {\n      return;\n    }\n\n    this.writeBuffer.push(data);\n\n    // Send XOFF to pause the pty process if the write buffer becomes too large so\n    // xterm.js can catch up before more data is sent. This is necessary in order\n    // to keep signals such as ^C responsive.\n    if (this.options.useFlowControl && !this._xoffSentToCatchUp && this.writeBuffer.length >= WRITE_BUFFER_PAUSE_THRESHOLD) {\n      // XOFF - stop pty pipe\n      // XON will be triggered by emulator before processing data chunk\n      this._coreService.triggerDataEvent(C0.DC3);\n      this._xoffSentToCatchUp = true;\n    }\n\n    if (!this._writeInProgress && this.writeBuffer.length > 0) {\n      // Kick off a write which will write all data in sequence recursively\n      this._writeInProgress = true;\n      // Kick off an async innerWrite so more writes can come in while processing data\n      setTimeout(() => {\n        this._innerWrite();\n      });\n    }\n  }\n\n  protected _innerWrite(bufferOffset: number = 0): void {\n    // Ensure the terminal isn't disposed\n    if (this._isDisposed) {\n      this.writeBuffer = [];\n    }\n\n    const startTime = Date.now();\n    while (this.writeBuffer.length > bufferOffset) {\n      const data = this.writeBuffer[bufferOffset];\n      bufferOffset++;\n\n      // If XOFF was sent in order to catch up with the pty process, resume it if\n      // we reached the end of the writeBuffer to allow more data to come in.\n      if (this._xoffSentToCatchUp && this.writeBuffer.length === bufferOffset) {\n        this._coreService.triggerDataEvent(C0.DC1);\n        this._xoffSentToCatchUp = false;\n      }\n\n      this._inputHandler.parse(data);\n\n      this.refresh(this._dirtyRowService.start, this._dirtyRowService.end);\n\n      if (Date.now() - startTime >= WRITE_TIMEOUT_MS) {\n        break;\n      }\n    }\n    if (this.writeBuffer.length > bufferOffset) {\n      // Allow renderer to catch up before processing the next batch\n      // trim already processed chunks if we are above threshold\n      if (bufferOffset > WRITE_BUFFER_LENGTH_THRESHOLD) {\n        this.writeBuffer = this.writeBuffer.slice(bufferOffset);\n        bufferOffset = 0;\n      }\n      setTimeout(() => this._innerWrite(bufferOffset), 0);\n    } else {\n      this._writeInProgress = false;\n      this.writeBuffer = [];\n    }\n  }\n\n  /**\n   * Writes text to the terminal, followed by a break line character (\\n).\n   * @param data The text to write to the terminal.\n   */\n  public writeln(data: string): void {\n    this.write(data + '\\r\\n');\n  }\n\n  public paste(data: string): void {\n    paste(data, this.textarea, this.bracketedPasteMode, this._coreService);\n  }\n\n  /**\n   * Attaches a custom key event handler which is run before keys are processed,\n   * giving consumers of xterm.js ultimate control as to what keys should be\n   * processed by the terminal and what keys should not.\n   * @param customKeyEventHandler The custom KeyboardEvent handler to attach.\n   * This is a function that takes a KeyboardEvent, allowing consumers to stop\n   * propagation and/or prevent the default action. The function returns whether\n   * the event should be processed by xterm.js.\n   */\n  public attachCustomKeyEventHandler(customKeyEventHandler: CustomKeyEventHandler): void {\n    this._customKeyEventHandler = customKeyEventHandler;\n  }\n\n  /** Add handler for ESC escape sequence. See xterm.d.ts for details. */\n  public addEscHandler(id: IFunctionIdentifier, callback: () => boolean): IDisposable {\n    return this._inputHandler.addEscHandler(id, callback);\n  }\n\n  /** Add handler for DCS escape sequence. See xterm.d.ts for details. */\n  public addDcsHandler(id: IFunctionIdentifier, callback: (data: string, param: IParams) => boolean): IDisposable {\n    return this._inputHandler.addDcsHandler(id, callback);\n  }\n\n  /** Add handler for CSI escape sequence. See xterm.d.ts for details. */\n  public addCsiHandler(id: IFunctionIdentifier, callback: (params: IParams) => boolean): IDisposable {\n    return this._inputHandler.addCsiHandler(id, callback);\n  }\n  /** Add handler for OSC escape sequence. See xterm.d.ts for details. */\n  public addOscHandler(ident: number, callback: (data: string) => boolean): IDisposable {\n    return this._inputHandler.addOscHandler(ident, callback);\n  }\n\n  /**\n   * Registers a link matcher, allowing custom link patterns to be matched and\n   * handled.\n   * @param regex The regular expression to search for, specifically\n   * this searches the textContent of the rows. You will want to use \\s to match\n   * a space ' ' character for example.\n   * @param handler The callback when the link is called.\n   * @param options Options for the link matcher.\n   * @return The ID of the new matcher, this can be used to deregister.\n   */\n  public registerLinkMatcher(regex: RegExp, handler: LinkMatcherHandler, options?: ILinkMatcherOptions): number {\n    const matcherId = this.linkifier.registerLinkMatcher(regex, handler, options);\n    this.refresh(0, this.rows - 1);\n    return matcherId;\n  }\n\n  /**\n   * Deregisters a link matcher if it has been registered.\n   * @param matcherId The link matcher's ID (returned after register)\n   */\n  public deregisterLinkMatcher(matcherId: number): void {\n    if (this.linkifier.deregisterLinkMatcher(matcherId)) {\n      this.refresh(0, this.rows - 1);\n    }\n  }\n\n  public registerCharacterJoiner(handler: CharacterJoinerHandler): number {\n    const joinerId = this._renderService.registerCharacterJoiner(handler);\n    this.refresh(0, this.rows - 1);\n    return joinerId;\n  }\n\n  public deregisterCharacterJoiner(joinerId: number): void {\n    if (this._renderService.deregisterCharacterJoiner(joinerId)) {\n      this.refresh(0, this.rows - 1);\n    }\n  }\n\n  public get markers(): IMarker[] {\n    return this.buffer.markers;\n  }\n\n  public addMarker(cursorYOffset: number): IMarker {\n    // Disallow markers on the alt buffer\n    if (this.buffer !== this.buffers.normal) {\n      return;\n    }\n\n    return this.buffer.addMarker(this.buffer.ybase + this.buffer.y + cursorYOffset);\n  }\n\n  /**\n   * Gets whether the terminal has an active selection.\n   */\n  public hasSelection(): boolean {\n    return this._selectionService ? this._selectionService.hasSelection : false;\n  }\n\n  /**\n   * Selects text within the terminal.\n   * @param column The column the selection starts at..\n   * @param row The row the selection starts at.\n   * @param length The length of the selection.\n   */\n  public select(column: number, row: number, length: number): void {\n    this._selectionService.setSelection(column, row, length);\n  }\n\n  /**\n   * Gets the terminal's current selection, this is useful for implementing copy\n   * behavior outside of xterm.js.\n   */\n  public getSelection(): string {\n    return this._selectionService ? this._selectionService.selectionText : '';\n  }\n\n  public getSelectionPosition(): ISelectionPosition | undefined {\n    if (!this._selectionService.hasSelection) {\n      return undefined;\n    }\n\n    return {\n      startColumn: this._selectionService.selectionStart[0],\n      startRow: this._selectionService.selectionStart[1],\n      endColumn: this._selectionService.selectionEnd[0],\n      endRow: this._selectionService.selectionEnd[1]\n    };\n  }\n\n  /**\n   * Clears the current terminal selection.\n   */\n  public clearSelection(): void {\n    if (this._selectionService) {\n      this._selectionService.clearSelection();\n    }\n  }\n\n  /**\n   * Selects all text within the terminal.\n   */\n  public selectAll(): void {\n    if (this._selectionService) {\n      this._selectionService.selectAll();\n    }\n  }\n\n  public selectLines(start: number, end: number): void {\n    if (this._selectionService) {\n      this._selectionService.selectLines(start, end);\n    }\n  }\n\n  /**\n   * Handle a keydown event\n   * Key Resources:\n   *   - https://developer.mozilla.org/en-US/docs/DOM/KeyboardEvent\n   * @param ev The keydown event to be handled.\n   */\n  protected _keyDown(event: KeyboardEvent): boolean {\n    this._keyDownHandled = false;\n\n    if (this._customKeyEventHandler && this._customKeyEventHandler(event) === false) {\n      return false;\n    }\n\n    if (!this._compositionHelper.keydown(event)) {\n      if (this.buffer.ybase !== this.buffer.ydisp) {\n        this.scrollToBottom();\n      }\n      return false;\n    }\n\n    const result = evaluateKeyboardEvent(event, this._coreService.decPrivateModes.applicationCursorKeys, this.browser.isMac, this.options.macOptionIsMeta);\n\n    this.updateCursorStyle(event);\n\n    if (result.type === KeyboardResultType.PAGE_DOWN || result.type === KeyboardResultType.PAGE_UP) {\n      const scrollCount = this.rows - 1;\n      this.scrollLines(result.type === KeyboardResultType.PAGE_UP ? -scrollCount : scrollCount);\n      return this.cancel(event, true);\n    }\n\n    if (result.type === KeyboardResultType.SELECT_ALL) {\n      this.selectAll();\n    }\n\n    if (this._isThirdLevelShift(this.browser, event)) {\n      return true;\n    }\n\n    if (result.cancel) {\n      // The event is canceled at the end already, is this necessary?\n      this.cancel(event, true);\n    }\n\n    if (!result.key) {\n      return true;\n    }\n\n    // If ctrl+c or enter is being sent, clear out the textarea. This is done so that screen readers\n    // will announce deleted characters. This will not work 100% of the time but it should cover\n    // most scenarios.\n    if (result.key === C0.ETX || result.key === C0.CR) {\n      this.textarea.value = '';\n    }\n\n    this._onKey.fire({ key: result.key, domEvent: event });\n    this.showCursor();\n    this._coreService.triggerDataEvent(result.key, true);\n\n    // Cancel events when not in screen reader mode so events don't get bubbled up and handled by\n    // other listeners. When screen reader mode is enabled, this could cause issues if the event\n    // is handled at a higher level, this is a compromise in order to echo keys to the screen\n    // reader.\n    if (!this.optionsService.options.screenReaderMode) {\n      return this.cancel(event, true);\n    }\n\n    this._keyDownHandled = true;\n  }\n\n  private _isThirdLevelShift(browser: IBrowser, ev: IKeyboardEvent): boolean {\n    const thirdLevelKey =\n        (browser.isMac && !this.options.macOptionIsMeta && ev.altKey && !ev.ctrlKey && !ev.metaKey) ||\n        (browser.isWindows && ev.altKey && ev.ctrlKey && !ev.metaKey);\n\n    if (ev.type === 'keypress') {\n      return thirdLevelKey;\n    }\n\n    // Don't invoke for arrows, pageDown, home, backspace, etc. (on non-keypress events)\n    return thirdLevelKey && (!ev.keyCode || ev.keyCode > 47);\n  }\n\n  /**\n   * Set the G level of the terminal\n   * @param g\n   */\n  public setgLevel(g: number): void {\n    this.glevel = g;\n    this.charset = this.charsets[g];\n  }\n\n  /**\n   * Set the charset for the given G level of the terminal\n   * @param g\n   * @param charset\n   */\n  public setgCharset(g: number, charset: ICharset): void {\n    this.charsets[g] = charset;\n    if (this.glevel === g) {\n      this.charset = charset;\n    }\n  }\n\n  protected _keyUp(ev: KeyboardEvent): void {\n    if (this._customKeyEventHandler && this._customKeyEventHandler(ev) === false) {\n      return;\n    }\n\n    if (!wasModifierKeyOnlyEvent(ev)) {\n      this.focus();\n    }\n\n    this.updateCursorStyle(ev);\n  }\n\n  /**\n   * Handle a keypress event.\n   * Key Resources:\n   *   - https://developer.mozilla.org/en-US/docs/DOM/KeyboardEvent\n   * @param ev The keypress event to be handled.\n   */\n  protected _keyPress(ev: KeyboardEvent): boolean {\n    let key;\n\n    if (this._keyDownHandled) {\n      return false;\n    }\n\n    if (this._customKeyEventHandler && this._customKeyEventHandler(ev) === false) {\n      return false;\n    }\n\n    this.cancel(ev);\n\n    if (ev.charCode) {\n      key = ev.charCode;\n    } else if (ev.which === null || ev.which === undefined) {\n      key = ev.keyCode;\n    } else if (ev.which !== 0 && ev.charCode !== 0) {\n      key = ev.which;\n    } else {\n      return false;\n    }\n\n    if (!key || (\n      (ev.altKey || ev.ctrlKey || ev.metaKey) && !this._isThirdLevelShift(this.browser, ev)\n    )) {\n      return false;\n    }\n\n    key = String.fromCharCode(key);\n\n    this._onKey.fire({ key, domEvent: ev });\n    this.showCursor();\n    this._coreService.triggerDataEvent(key, true);\n\n    return true;\n  }\n\n  /**\n   * Ring the bell.\n   * Note: We could do sweet things with webaudio here\n   */\n  public bell(): void {\n    if (this._soundBell()) {\n      this._soundService.playBellSound();\n    }\n\n    if (this._visualBell()) {\n      this.element.classList.add('visual-bell-active');\n      clearTimeout(this._visualBellTimer);\n      this._visualBellTimer = window.setTimeout(() => {\n        this.element.classList.remove('visual-bell-active');\n      }, 200);\n    }\n  }\n\n  /**\n   * Resizes the terminal.\n   *\n   * @param x The number of columns to resize to.\n   * @param y The number of rows to resize to.\n   */\n  public resize(x: number, y: number): void {\n    if (isNaN(x) || isNaN(y)) {\n      return;\n    }\n\n    if (x === this.cols && y === this.rows) {\n      // Check if we still need to measure the char size (fixes #785).\n      if (this._charSizeService && !this._charSizeService.hasValidSize) {\n        this._charSizeService.measure();\n      }\n      return;\n    }\n\n    if (x < MINIMUM_COLS) x = MINIMUM_COLS;\n    if (y < MINIMUM_ROWS) y = MINIMUM_ROWS;\n\n    this.buffers.resize(x, y);\n\n    this._bufferService.resize(x, y);\n    this.buffers.setupTabStops(this.cols);\n\n    if (this._charSizeService) {\n      this._charSizeService.measure();\n    }\n\n    this.refresh(0, this.rows - 1);\n    this._onResize.fire({ cols: x, rows: y });\n  }\n\n  /**\n   * Clear the entire buffer, making the prompt line the new first line.\n   */\n  public clear(): void {\n    if (this.buffer.ybase === 0 && this.buffer.y === 0) {\n      // Don't clear if it's already clear\n      return;\n    }\n    this.buffer.lines.set(0, this.buffer.lines.get(this.buffer.ybase + this.buffer.y));\n    this.buffer.lines.length = 1;\n    this.buffer.ydisp = 0;\n    this.buffer.ybase = 0;\n    this.buffer.y = 0;\n    for (let i = 1; i < this.rows; i++) {\n      this.buffer.lines.push(this.buffer.getBlankLine(DEFAULT_ATTR_DATA));\n    }\n    this.refresh(0, this.rows - 1);\n    this._onScroll.fire(this.buffer.ydisp);\n  }\n\n  /**\n   * Evaluate if the current terminal is the given argument.\n   * @param term The terminal name to evaluate\n   */\n  public is(term: string): boolean {\n    return (this.options.termName + '').indexOf(term) === 0;\n  }\n\n  /**\n   * Emit the data event and populate the given data.\n   * @param data The data to populate in the event.\n   */\n  // public handler(data: string): void {\n  //   // Prevents all events to pty process if stdin is disabled\n  //   if (this.options.disableStdin) {\n  //     return;\n  //   }\n\n  //   // Clear the selection if the selection manager is available and has an active selection\n  //   if (this.selectionService && this.selectionService.hasSelection) {\n  //     this.selectionService.clearSelection();\n  //   }\n\n  //   // Input is being sent to the terminal, the terminal should focus the prompt.\n  //   if (this.buffer.ybase !== this.buffer.ydisp) {\n  //     this.scrollToBottom();\n  //   }\n  //   this._onData.fire(data);\n  // }\n\n  /**\n   * Emit the 'title' event and populate the given title.\n   * @param title The title to populate in the event.\n   */\n  public handleTitle(title: string): void {\n    this._onTitleChange.fire(title);\n  }\n\n  /**\n   * Reset terminal.\n   * Note: Calling this directly from JS is synchronous but does not clear\n   * input buffers and does not reset the parser, thus the terminal will\n   * continue to apply pending input data.\n   * If you need in band reset (synchronous with input data) consider\n   * using DECSTR (soft reset, CSI ! p) or RIS instead (hard reset, ESC c).\n   */\n  public reset(): void {\n    /**\n     * Since _setup handles a full terminal creation, we have to carry forward\n     * a few things that should not reset.\n     */\n    this.options.rows = this.rows;\n    this.options.cols = this.cols;\n    const customKeyEventHandler = this._customKeyEventHandler;\n    const inputHandler = this._inputHandler;\n    const cursorState = this.cursorState;\n    const writeBuffer = this.writeBuffer;\n    const writeBufferUtf8 = this.writeBufferUtf8;\n    const writeInProgress = this._writeInProgress;\n    const xoffSentToCatchUp = this._xoffSentToCatchUp;\n    const userScrolling = this._userScrolling;\n\n    this._setup();\n    this._bufferService.reset();\n    this._coreService.reset();\n    if (this._selectionService) {\n      this._selectionService.reset();\n    }\n\n    // reattach\n    this._customKeyEventHandler = customKeyEventHandler;\n    this._inputHandler = inputHandler;\n    this.cursorState = cursorState;\n    this.writeBuffer = writeBuffer;\n    this.writeBufferUtf8 = writeBufferUtf8;\n    this._writeInProgress = writeInProgress;\n    this._xoffSentToCatchUp = xoffSentToCatchUp;\n    this._userScrolling = userScrolling;\n\n    // do a full screen refresh\n    this.refresh(0, this.rows - 1);\n    if (this.viewport) {\n      this.viewport.syncScrollArea();\n    }\n  }\n\n  // TODO: Remove cancel function and cancelEvents option\n  public cancel(ev: Event, force?: boolean): boolean {\n    if (!this.options.cancelEvents && !force) {\n      return;\n    }\n    ev.preventDefault();\n    ev.stopPropagation();\n    return false;\n  }\n\n  private _visualBell(): boolean {\n    return false;\n    // return this.options.bellStyle === 'visual' ||\n    //     this.options.bellStyle === 'both';\n  }\n\n  private _soundBell(): boolean {\n    return this.options.bellStyle === 'sound';\n    // return this.options.bellStyle === 'sound' ||\n    //     this.options.bellStyle === 'both';\n  }\n}\n\n/**\n * Helpers\n */\n\nfunction wasModifierKeyOnlyEvent(ev: KeyboardEvent): boolean {\n  return ev.keyCode === 16 || // Shift\n    ev.keyCode === 17 || // Ctrl\n    ev.keyCode === 18; // Alt\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharSizeService } from 'browser/services/Services';\nimport { IBufferService, ICoreService, IOptionsService } from 'common/services/Services';\n\ninterface IPosition {\n  start: number;\n  end: number;\n}\n\n/**\n * Encapsulates the logic for handling compositionstart, compositionupdate and compositionend\n * events, displaying the in-progress composition to the UI and forwarding the final composition\n * to the handler.\n */\nexport class CompositionHelper {\n  /**\n   * Whether input composition is currently happening, eg. via a mobile keyboard, speech input or\n   * IME. This variable determines whether the compositionText should be displayed on the UI.\n   */\n  private _isComposing: boolean;\n\n  /**\n   * The position within the input textarea's value of the current composition.\n   */\n  private _compositionPosition: IPosition;\n\n  /**\n   * Whether a composition is in the process of being sent, setting this to false will cancel any\n   * in-progress composition.\n   */\n  private _isSendingComposition: boolean;\n\n  constructor(\n    private readonly _textarea: HTMLTextAreaElement,\n    private readonly _compositionView: HTMLElement,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService,\n    @ICoreService private readonly _coreService: ICoreService\n  ) {\n    this._isComposing = false;\n    this._isSendingComposition = false;\n    this._compositionPosition = { start: 0, end: 0 };\n  }\n\n  /**\n   * Handles the compositionstart event, activating the composition view.\n   */\n  public compositionstart(): void {\n    this._isComposing = true;\n    this._compositionPosition.start = this._textarea.value.length;\n    this._compositionView.textContent = '';\n    this._compositionView.classList.add('active');\n  }\n\n  /**\n   * Handles the compositionupdate event, updating the composition view.\n   * @param ev The event.\n   */\n  public compositionupdate(ev: CompositionEvent): void {\n    this._compositionView.textContent = ev.data;\n    this.updateCompositionElements();\n    setTimeout(() => {\n      this._compositionPosition.end = this._textarea.value.length;\n    }, 0);\n  }\n\n  /**\n   * Handles the compositionend event, hiding the composition view and sending the composition to\n   * the handler.\n   */\n  public compositionend(): void {\n    this._finalizeComposition(true);\n  }\n\n  /**\n   * Handles the keydown event, routing any necessary events to the CompositionHelper functions.\n   * @param ev The keydown event.\n   * @return Whether the Terminal should continue processing the keydown event.\n   */\n  public keydown(ev: KeyboardEvent): boolean {\n    if (this._isComposing || this._isSendingComposition) {\n      if (ev.keyCode === 229) {\n        // Continue composing if the keyCode is the \"composition character\"\n        return false;\n      } else if (ev.keyCode === 16 || ev.keyCode === 17 || ev.keyCode === 18) {\n        // Continue composing if the keyCode is a modifier key\n        return false;\n      }\n      // Finish composition immediately. This is mainly here for the case where enter is\n      // pressed and the handler needs to be triggered before the command is executed.\n      this._finalizeComposition(false);\n    }\n\n    if (ev.keyCode === 229) {\n      // If the \"composition character\" is used but gets to this point it means a non-composition\n      // character (eg. numbers and punctuation) was pressed when the IME was active.\n      this._handleAnyTextareaChanges();\n      return false;\n    }\n\n    return true;\n  }\n\n  /**\n   * Finalizes the composition, resuming regular input actions. This is called when a composition\n   * is ending.\n   * @param waitForPropagation Whether to wait for events to propagate before sending\n   *   the input. This should be false if a non-composition keystroke is entered before the\n   *   compositionend event is triggered, such as enter, so that the composition is sent before\n   *   the command is executed.\n   */\n  private _finalizeComposition(waitForPropagation: boolean): void {\n    this._compositionView.classList.remove('active');\n    this._isComposing = false;\n    this._clearTextareaPosition();\n\n    if (!waitForPropagation) {\n      // Cancel any delayed composition send requests and send the input immediately.\n      this._isSendingComposition = false;\n      const input = this._textarea.value.substring(this._compositionPosition.start, this._compositionPosition.end);\n      this._coreService.triggerDataEvent(input, true);\n    } else {\n      // Make a deep copy of the composition position here as a new compositionstart event may\n      // fire before the setTimeout executes.\n      const currentCompositionPosition = {\n        start: this._compositionPosition.start,\n        end: this._compositionPosition.end\n      };\n\n      // Since composition* events happen before the changes take place in the textarea on most\n      // browsers, use a setTimeout with 0ms time to allow the native compositionend event to\n      // complete. This ensures the correct character is retrieved.\n      // This solution was used because:\n      // - The compositionend event's data property is unreliable, at least on Chromium\n      // - The last compositionupdate event's data property does not always accurately describe\n      //   the character, a counter example being Korean where an ending consonsant can move to\n      //   the following character if the following input is a vowel.\n      this._isSendingComposition = true;\n      setTimeout(() => {\n        // Ensure that the input has not already been sent\n        if (this._isSendingComposition) {\n          this._isSendingComposition = false;\n          let input;\n          if (this._isComposing) {\n            // Use the end position to get the string if a new composition has started.\n            input = this._textarea.value.substring(currentCompositionPosition.start, currentCompositionPosition.end);\n          } else {\n            // Don't use the end position here in order to pick up any characters after the\n            // composition has finished, for example when typing a non-composition character\n            // (eg. 2) after a composition character.\n            input = this._textarea.value.substring(currentCompositionPosition.start);\n          }\n          this._coreService.triggerDataEvent(input, true);\n        }\n      }, 0);\n    }\n  }\n\n  /**\n   * Apply any changes made to the textarea after the current event chain is allowed to complete.\n   * This should be called when not currently composing but a keydown event with the \"composition\n   * character\" (229) is triggered, in order to allow non-composition text to be entered when an\n   * IME is active.\n   */\n  private _handleAnyTextareaChanges(): void {\n    const oldValue = this._textarea.value;\n    setTimeout(() => {\n      // Ignore if a composition has started since the timeout\n      if (!this._isComposing) {\n        const newValue = this._textarea.value;\n        const diff = newValue.replace(oldValue, '');\n        if (diff.length > 0) {\n          this._coreService.triggerDataEvent(diff, true);\n        }\n      }\n    }, 0);\n  }\n\n  /**\n   * Positions the composition view on top of the cursor and the textarea just below it (so the\n   * IME helper dialog is positioned correctly).\n   * @param dontRecurse Whether to use setTimeout to recursively trigger another update, this is\n   *   necessary as the IME events across browsers are not consistently triggered.\n   */\n  public updateCompositionElements(dontRecurse?: boolean): void {\n    if (!this._isComposing) {\n      return;\n    }\n\n    if (this._bufferService.buffer.isCursorInViewport) {\n      const cellHeight = Math.ceil(this._charSizeService.height * this._optionsService.options.lineHeight);\n      const cursorTop = this._bufferService.buffer.y * cellHeight;\n      const cursorLeft = this._bufferService.buffer.x * this._charSizeService.width;\n\n      this._compositionView.style.left = cursorLeft + 'px';\n      this._compositionView.style.top = cursorTop + 'px';\n      this._compositionView.style.height = cellHeight + 'px';\n      this._compositionView.style.lineHeight = cellHeight + 'px';\n      this._compositionView.style.fontFamily = this._optionsService.options.fontFamily;\n      this._compositionView.style.fontSize = this._optionsService.options.fontSize + 'px';\n      // Sync the textarea to the exact position of the composition view so the IME knows where the\n      // text is.\n      const compositionViewBounds = this._compositionView.getBoundingClientRect();\n      this._textarea.style.left = cursorLeft + 'px';\n      this._textarea.style.top = cursorTop + 'px';\n      this._textarea.style.width = compositionViewBounds.width + 'px';\n      this._textarea.style.height = compositionViewBounds.height + 'px';\n      this._textarea.style.lineHeight = compositionViewBounds.height + 'px';\n    }\n\n    if (!dontRecurse) {\n      setTimeout(() => this.updateCompositionElements(true), 0);\n    }\n  }\n\n  /**\n   * Clears the textarea's position so that the cursor does not blink on IE.\n   * @private\n   */\n  private _clearTextareaPosition(): void {\n    this._textarea.style.left = '';\n    this._textarea.style.top = '';\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Disposable } from 'common/Lifecycle';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { IColorSet, IViewport } from 'browser/Types';\nimport { ICharSizeService, IRenderService } from 'browser/services/Services';\nimport { IBufferService } from 'common/services/Services';\n\nconst FALLBACK_SCROLL_BAR_WIDTH = 15;\n\n/**\n * Represents the viewport of a terminal, the visible area within the larger buffer of output.\n * Logic for the virtual scroll bar is included in this object.\n */\nexport class Viewport extends Disposable implements IViewport {\n  public scrollBarWidth: number = 0;\n  private _currentRowHeight: number = 0;\n  private _lastRecordedBufferLength: number = 0;\n  private _lastRecordedViewportHeight: number = 0;\n  private _lastRecordedBufferHeight: number = 0;\n  private _lastTouchY: number = 0;\n  private _lastScrollTop: number = 0;\n\n  // Stores a partial line amount when scrolling, this is used to keep track of how much of a line\n  // is scrolled so we can \"scroll\" over partial lines and feel natural on touchpads. This is a\n  // quick fix and could have a more robust solution in place that reset the value when needed.\n  private _wheelPartialScroll: number = 0;\n\n  private _refreshAnimationFrame: number | null = null;\n  private _ignoreNextScrollEvent: boolean = false;\n\n  constructor(\n    private readonly _scrollLines: (amount: number, suppressEvent: boolean) => void,\n    private readonly _viewportElement: HTMLElement,\n    private readonly _scrollArea: HTMLElement,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService,\n    @IRenderService private readonly _renderService: IRenderService\n  ) {\n    super();\n\n    // Measure the width of the scrollbar. If it is 0 we can assume it's an OSX overlay scrollbar.\n    // Unfortunately the overlay scrollbar would be hidden underneath the screen element in that case,\n    // therefore we account for a standard amount to make it visible\n    this.scrollBarWidth = (this._viewportElement.offsetWidth - this._scrollArea.offsetWidth) || FALLBACK_SCROLL_BAR_WIDTH;\n    this.register(addDisposableDomListener(this._viewportElement, 'scroll', this._onScroll.bind(this)));\n\n    // Perform this async to ensure the ICharSizeService is ready.\n    setTimeout(() => this.syncScrollArea(), 0);\n  }\n\n  public onThemeChange(colors: IColorSet): void {\n    this._viewportElement.style.backgroundColor = colors.background.css;\n  }\n\n  /**\n   * Refreshes row height, setting line-height, viewport height and scroll area height if\n   * necessary.\n   */\n  private _refresh(): void {\n    if (this._refreshAnimationFrame === null) {\n      this._refreshAnimationFrame = requestAnimationFrame(() => this._innerRefresh());\n    }\n  }\n\n  private _innerRefresh(): void {\n    if (this._charSizeService.height > 0) {\n      this._currentRowHeight = this._renderService.dimensions.scaledCellHeight / window.devicePixelRatio;\n      this._lastRecordedViewportHeight = this._viewportElement.offsetHeight;\n      const newBufferHeight = Math.round(this._currentRowHeight * this._lastRecordedBufferLength) + (this._lastRecordedViewportHeight - this._renderService.dimensions.canvasHeight);\n      if (this._lastRecordedBufferHeight !== newBufferHeight) {\n        this._lastRecordedBufferHeight = newBufferHeight;\n        this._scrollArea.style.height = this._lastRecordedBufferHeight + 'px';\n      }\n    }\n\n    // Sync scrollTop\n    const scrollTop = this._bufferService.buffer.ydisp * this._currentRowHeight;\n    if (this._viewportElement.scrollTop !== scrollTop) {\n      // Ignore the next scroll event which will be triggered by setting the scrollTop as we do not\n      // want this event to scroll the terminal\n      this._ignoreNextScrollEvent = true;\n      this._viewportElement.scrollTop = scrollTop;\n    }\n\n    this._refreshAnimationFrame = null;\n  }\n\n  /**\n   * Updates dimensions and synchronizes the scroll area if necessary.\n   */\n  public syncScrollArea(): void {\n    // If buffer height changed\n    if (this._lastRecordedBufferLength !== this._bufferService.buffer.lines.length) {\n      this._lastRecordedBufferLength = this._bufferService.buffer.lines.length;\n      this._refresh();\n      return;\n    }\n\n    // If viewport height changed\n    if (this._lastRecordedViewportHeight !== this._renderService.dimensions.canvasHeight) {\n      this._refresh();\n      return;\n    }\n\n    // If the buffer position doesn't match last scroll top\n    const newScrollTop = this._bufferService.buffer.ydisp * this._currentRowHeight;\n    if (this._lastScrollTop !== newScrollTop) {\n      this._refresh();\n      return;\n    }\n\n    // If element's scroll top changed, this can happen when hiding the element\n    if (this._lastScrollTop !== this._viewportElement.scrollTop) {\n      this._refresh();\n      return;\n    }\n\n    // If row height changed\n    if (this._renderService.dimensions.scaledCellHeight / window.devicePixelRatio !== this._currentRowHeight) {\n      this._refresh();\n      return;\n    }\n  }\n\n  /**\n   * Handles scroll events on the viewport, calculating the new viewport and requesting the\n   * terminal to scroll to it.\n   * @param ev The scroll event.\n   */\n  private _onScroll(ev: Event): void {\n    // Record current scroll top position\n    this._lastScrollTop = this._viewportElement.scrollTop;\n\n    // Don't attempt to scroll if the element is not visible, otherwise scrollTop will be corrupt\n    // which causes the terminal to scroll the buffer to the top\n    if (!this._viewportElement.offsetParent) {\n      return;\n    }\n\n    // Ignore the event if it was flagged to ignore (when the source of the event is from Viewport)\n    if (this._ignoreNextScrollEvent) {\n      this._ignoreNextScrollEvent = false;\n      return;\n    }\n\n    const newRow = Math.round(this._lastScrollTop / this._currentRowHeight);\n    const diff = newRow - this._bufferService.buffer.ydisp;\n    this._scrollLines(diff, true);\n  }\n\n  /**\n   * Handles mouse wheel events by adjusting the viewport's scrollTop and delegating the actual\n   * scrolling to `onScroll`, this event needs to be attached manually by the consumer of\n   * `Viewport`.\n   * @param ev The mouse wheel event.\n   */\n  public onWheel(ev: WheelEvent): void {\n    const amount = this._getPixelsScrolled(ev);\n    if (amount === 0) {\n      return;\n    }\n    this._viewportElement.scrollTop += amount;\n    // Prevent the page from scrolling when the terminal scrolls\n    ev.preventDefault();\n  }\n\n  private _getPixelsScrolled(ev: WheelEvent): number {\n    // Do nothing if it's not a vertical scroll event\n    if (ev.deltaY === 0) {\n      return 0;\n    }\n\n    // Fallback to WheelEvent.DOM_DELTA_PIXEL\n    let amount = ev.deltaY;\n    if (ev.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n      amount *= this._currentRowHeight;\n    } else if (ev.deltaMode === WheelEvent.DOM_DELTA_PAGE) {\n      amount *= this._currentRowHeight * this._bufferService.rows;\n    }\n    return amount;\n  }\n\n  /**\n   * Gets the number of pixels scrolled by the mouse event taking into account what type of delta\n   * is being used.\n   * @param ev The mouse wheel event.\n   */\n  public getLinesScrolled(ev: WheelEvent): number {\n    // Do nothing if it's not a vertical scroll event\n    if (ev.deltaY === 0) {\n      return 0;\n    }\n\n    // Fallback to WheelEvent.DOM_DELTA_LINE\n    let amount = ev.deltaY;\n    if (ev.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n      amount /= this._currentRowHeight + 0.0; // Prevent integer division\n      this._wheelPartialScroll += amount;\n      amount = Math.floor(Math.abs(this._wheelPartialScroll)) * (this._wheelPartialScroll > 0 ? 1 : -1);\n      this._wheelPartialScroll %= 1;\n    } else if (ev.deltaMode === WheelEvent.DOM_DELTA_PAGE) {\n      amount *= this._bufferService.rows;\n    }\n    return amount;\n  }\n\n  /**\n   * Handles the touchstart event, recording the touch occurred.\n   * @param ev The touch event.\n   */\n  public onTouchStart(ev: TouchEvent): void {\n    this._lastTouchY = ev.touches[0].pageY;\n  }\n\n  /**\n   * Handles the touchmove event, scrolling the viewport if the position shifted.\n   * @param ev The touch event.\n   */\n  public onTouchMove(ev: TouchEvent): void {\n    const deltaY = this._lastTouchY - ev.touches[0].pageY;\n    this._lastTouchY = ev.touches[0].pageY;\n    if (deltaY === 0) {\n      return;\n    }\n    this._viewportElement.scrollTop += deltaY;\n    ev.preventDefault();\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ISelectionService } from 'browser/services/Services';\nimport { ICoreService } from 'common/services/Services';\n\n/**\n * Prepares text to be pasted into the terminal by normalizing the line endings\n * @param text The pasted text that needs processing before inserting into the terminal\n */\nexport function prepareTextForTerminal(text: string): string {\n  return text.replace(/\\r?\\n/g, '\\r');\n}\n\n/**\n * Bracket text for paste, if necessary, as per https://cirw.in/blog/bracketed-paste\n * @param text The pasted text to bracket\n */\nexport function bracketTextForPaste(text: string, bracketedPasteMode: boolean): string {\n  if (bracketedPasteMode) {\n    return '\\x1b[200~' + text + '\\x1b[201~';\n  }\n  return text;\n}\n\n/**\n * Binds copy functionality to the given terminal.\n * @param ev The original copy event to be handled\n */\nexport function copyHandler(ev: ClipboardEvent, selectionService: ISelectionService): void {\n  if (ev.clipboardData) {\n    ev.clipboardData.setData('text/plain', selectionService.selectionText);\n  }\n  // Prevent or the original text will be copied.\n  ev.preventDefault();\n}\n\n/**\n * Redirect the clipboard's data to the terminal's input handler.\n * @param ev The original paste event to be handled\n * @param term The terminal on which to apply the handled paste event\n */\nexport function handlePasteEvent(ev: ClipboardEvent, textarea: HTMLTextAreaElement, bracketedPasteMode: boolean, coreService: ICoreService): void {\n  ev.stopPropagation();\n  if (ev.clipboardData) {\n    const text = ev.clipboardData.getData('text/plain');\n    paste(text, textarea, bracketedPasteMode, coreService);\n  }\n}\n\nexport function paste(text: string, textarea: HTMLTextAreaElement, bracketedPasteMode: boolean, coreService: ICoreService): void {\n  text = prepareTextForTerminal(text);\n  text = bracketTextForPaste(text, bracketedPasteMode);\n  coreService.triggerDataEvent(text, true);\n  textarea.value = '';\n}\n\n/**\n * Moves the textarea under the mouse cursor and focuses it.\n * @param ev The original right click event to be handled.\n * @param textarea The terminal's textarea.\n */\nexport function moveTextAreaUnderMouseCursor(ev: MouseEvent, textarea: HTMLTextAreaElement, screenElement: HTMLElement): void {\n\n  // Calculate textarea position relative to the screen element\n  const pos = screenElement.getBoundingClientRect();\n  const left = ev.clientX - pos.left - 10;\n  const top = ev.clientY - pos.top - 10;\n\n  // Bring textarea at the cursor position\n  textarea.style.position = 'absolute';\n  textarea.style.width = '20px';\n  textarea.style.height = '20px';\n  textarea.style.left = `${left}px`;\n  textarea.style.top = `${top}px`;\n  textarea.style.zIndex = '1000';\n\n  textarea.focus();\n\n  // Reset the terminal textarea's styling\n  // Timeout needs to be long enough for click event to be handled.\n  setTimeout(() => {\n    textarea.style.position = null;\n    textarea.style.width = null;\n    textarea.style.height = null;\n    textarea.style.left = null;\n    textarea.style.top = null;\n    textarea.style.zIndex = null;\n  }, 200);\n}\n\n/**\n * Bind to right-click event and allow right-click copy and paste.\n * @param ev The original right click event to be handled.\n * @param textarea The terminal's textarea.\n * @param selectionService The terminal's selection manager.\n * @param shouldSelectWord If true and there is no selection the current word will be selected\n */\nexport function rightClickHandler(ev: MouseEvent, textarea: HTMLTextAreaElement, screenElement: HTMLElement, selectionService: ISelectionService, shouldSelectWord: boolean): void {\n  moveTextAreaUnderMouseCursor(ev, textarea, screenElement);\n\n  if (shouldSelectWord && !selectionService.isClickInSelection(ev)) {\n    selectionService.selectWordAtCursor(ev);\n  }\n\n  // Get textarea ready to copy from the context menu\n  textarea.value = selectionService.selectionText;\n  textarea.select();\n}\n","/**\n * Copyright (c) 2014 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n */\n\nimport { IInputHandler, IInputHandlingTerminal } from './Types';\nimport { C0, C1 } from 'common/data/EscapeSequences';\nimport { CHARSETS, DEFAULT_CHARSET } from 'common/data/Charsets';\nimport { wcwidth } from 'common/CharWidth';\nimport { EscapeSequenceParser } from 'common/parser/EscapeSequenceParser';\nimport { Disposable } from 'common/Lifecycle';\nimport { concat } from 'common/TypedArrayUtils';\nimport { StringToUtf32, stringFromCodePoint, utf32ToString, Utf8ToUtf32 } from 'common/input/TextDecoder';\nimport { DEFAULT_ATTR_DATA } from 'common/buffer/BufferLine';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { IParsingState, IDcsHandler, IEscapeSequenceParser, IParams, IFunctionIdentifier } from 'common/parser/Types';\nimport { NULL_CELL_CODE, NULL_CELL_WIDTH, Attributes, FgFlags, BgFlags, Content } from 'common/buffer/Constants';\nimport { CellData } from 'common/buffer/CellData';\nimport { AttributeData } from 'common/buffer/AttributeData';\nimport { IAttributeData, IDisposable } from 'common/Types';\nimport { ICoreService, IBufferService, IOptionsService, ILogService, IDirtyRowService } from 'common/services/Services';\nimport { ISelectionService } from 'browser/services/Services';\nimport { OscHandler } from 'common/parser/OscParser';\nimport { DcsHandler } from 'common/parser/DcsParser';\n\n/**\n * Map collect to glevel. Used in `selectCharset`.\n */\nconst GLEVEL: {[key: string]: number} = {'(': 0, ')': 1, '*': 2, '+': 3, '-': 1, '.': 2};\n\n\n/**\n * DCS subparser implementations\n */\n\n/**\n * DCS $ q Pt ST\n *   DECRQSS (https://vt100.net/docs/vt510-rm/DECRQSS.html)\n *   Request Status String (DECRQSS), VT420 and up.\n *   Response: DECRPSS (https://vt100.net/docs/vt510-rm/DECRPSS.html)\n */\nclass DECRQSS implements IDcsHandler {\n  private _data: Uint32Array = new Uint32Array(0);\n\n  constructor(\n    private _bufferService: IBufferService,\n    private _coreService: ICoreService,\n    private _logService: ILogService,\n    private _optionsService: IOptionsService\n  ) { }\n\n  hook(params: IParams): void {\n    this._data = new Uint32Array(0);\n  }\n\n  put(data: Uint32Array, start: number, end: number): void {\n    this._data = concat(this._data, data.subarray(start, end));\n  }\n\n  unhook(success: boolean): void {\n    if (!success) {\n      this._data = new Uint32Array(0);\n      return;\n    }\n    const data = utf32ToString(this._data);\n    this._data = new Uint32Array(0);\n    switch (data) {\n      // valid: DCS 1 $ r Pt ST (xterm)\n      case '\"q': // DECSCA\n        return this._coreService.triggerDataEvent(`${C0.ESC}P1$r0\"q${C0.ESC}\\\\`);\n      case '\"p': // DECSCL\n        return this._coreService.triggerDataEvent(`${C0.ESC}P1$r61\"p${C0.ESC}\\\\`);\n      case 'r': // DECSTBM\n        const pt = '' + (this._bufferService.buffer.scrollTop + 1) +\n                ';' + (this._bufferService.buffer.scrollBottom + 1) + 'r';\n        return this._coreService.triggerDataEvent(`${C0.ESC}P1$r${pt}${C0.ESC}\\\\`);\n      case 'm': // SGR\n        // TODO: report real settings instead of 0m\n        return this._coreService.triggerDataEvent(`${C0.ESC}P1$r0m${C0.ESC}\\\\`);\n      case ' q': // DECSCUSR\n        const STYLES: {[key: string]: number} = {'block': 2, 'underline': 4, 'bar': 6};\n        let style = STYLES[this._optionsService.options.cursorStyle];\n        style -= this._optionsService.options.cursorBlink ? 1 : 0;\n        return this._coreService.triggerDataEvent(`${C0.ESC}P1$r${style} q${C0.ESC}\\\\`);\n      default:\n        // invalid: DCS 0 $ r Pt ST (xterm)\n        this._logService.debug('Unknown DCS $q %s', data);\n        this._coreService.triggerDataEvent(`${C0.ESC}P0$r${C0.ESC}\\\\`);\n    }\n  }\n}\n\n/**\n * DCS Ps; Ps| Pt ST\n *   DECUDK (https://vt100.net/docs/vt510-rm/DECUDK.html)\n *   not supported\n */\n\n/**\n * DCS + q Pt ST (xterm)\n *   Request Terminfo String\n *   not implemented\n */\n\n/**\n * DCS + p Pt ST (xterm)\n *   Set Terminfo Data\n *   not supported\n */\n\n\n\n/**\n * The terminal's standard implementation of IInputHandler, this handles all\n * input from the Parser.\n *\n * Refer to http://invisible-island.net/xterm/ctlseqs/ctlseqs.html to understand\n * each function's header comment.\n */\nexport class InputHandler extends Disposable implements IInputHandler {\n  private _parseBuffer: Uint32Array = new Uint32Array(4096);\n  private _stringDecoder: StringToUtf32 = new StringToUtf32();\n  private _utf8Decoder: Utf8ToUtf32 = new Utf8ToUtf32();\n  private _workCell: CellData = new CellData();\n\n  private _selectionService: ISelectionService | undefined;\n\n  private _onCursorMove = new EventEmitter<void>();\n  public get onCursorMove(): IEvent<void> { return this._onCursorMove.event; }\n  private _onLineFeed = new EventEmitter<void>();\n  public get onLineFeed(): IEvent<void> { return this._onLineFeed.event; }\n  private _onScroll = new EventEmitter<number>();\n  public get onScroll(): IEvent<number> { return this._onScroll.event; }\n\n  constructor(\n    protected _terminal: IInputHandlingTerminal,\n    private readonly _bufferService: IBufferService,\n    private readonly _coreService: ICoreService,\n    private readonly _dirtyRowService: IDirtyRowService,\n    private readonly _logService: ILogService,\n    private readonly _optionsService: IOptionsService,\n    private readonly _parser: IEscapeSequenceParser = new EscapeSequenceParser())\n  {\n    super();\n\n    this.register(this._parser);\n\n    /**\n     * custom fallback handlers\n     */\n    this._parser.setCsiHandlerFallback((ident, params) => {\n      this._logService.debug('Unknown CSI code: ', { identifier: this._parser.identToString(ident), params: params.toArray() });\n    });\n    this._parser.setEscHandlerFallback(ident => {\n      this._logService.debug('Unknown ESC code: ', { identifier: this._parser.identToString(ident) });\n    });\n    this._parser.setExecuteHandlerFallback(code => {\n      this._logService.debug('Unknown EXECUTE code: ', { code });\n    });\n    this._parser.setOscHandlerFallback((identifier, action, data) => {\n      this._logService.debug('Unknown OSC code: ', { identifier, action, data });\n    });\n    this._parser.setDcsHandlerFallback((ident, action, payload) => {\n      if (action === 'HOOK') {\n        payload = payload.toArray();\n      }\n      this._logService.debug('Unknown DCS code: ', { identifier: this._parser.identToString(ident), action, payload });\n    });\n\n    /**\n     * print handler\n     */\n    this._parser.setPrintHandler((data, start, end) => this.print(data, start, end));\n\n    /**\n     * CSI handler\n     */\n    this._parser.setCsiHandler({final: '@'}, params => this.insertChars(params));\n    this._parser.setCsiHandler({final: 'A'}, params => this.cursorUp(params));\n    this._parser.setCsiHandler({final: 'B'}, params => this.cursorDown(params));\n    this._parser.setCsiHandler({final: 'C'}, params => this.cursorForward(params));\n    this._parser.setCsiHandler({final: 'D'}, params => this.cursorBackward(params));\n    this._parser.setCsiHandler({final: 'E'}, params => this.cursorNextLine(params));\n    this._parser.setCsiHandler({final: 'F'}, params => this.cursorPrecedingLine(params));\n    this._parser.setCsiHandler({final: 'G'}, params => this.cursorCharAbsolute(params));\n    this._parser.setCsiHandler({final: 'H'}, params => this.cursorPosition(params));\n    this._parser.setCsiHandler({final: 'I'}, params => this.cursorForwardTab(params));\n    this._parser.setCsiHandler({final: 'J'}, params => this.eraseInDisplay(params));\n    this._parser.setCsiHandler({prefix: '?', final: 'J'}, params => this.eraseInDisplay(params));\n    this._parser.setCsiHandler({final: 'K'}, params => this.eraseInLine(params));\n    this._parser.setCsiHandler({prefix: '?', final: 'K'}, params => this.eraseInLine(params));\n    this._parser.setCsiHandler({final: 'L'}, params => this.insertLines(params));\n    this._parser.setCsiHandler({final: 'M'}, params => this.deleteLines(params));\n    this._parser.setCsiHandler({final: 'P'}, params => this.deleteChars(params));\n    this._parser.setCsiHandler({final: 'S'}, params => this.scrollUp(params));\n    this._parser.setCsiHandler({final: 'T'}, params => this.scrollDown(params));\n    this._parser.setCsiHandler({final: 'X'}, params => this.eraseChars(params));\n    this._parser.setCsiHandler({final: 'Z'}, params => this.cursorBackwardTab(params));\n    this._parser.setCsiHandler({final: '`'}, params => this.charPosAbsolute(params));\n    this._parser.setCsiHandler({final: 'a'}, params => this.hPositionRelative(params));\n    this._parser.setCsiHandler({final: 'b'}, params => this.repeatPrecedingCharacter(params));\n    this._parser.setCsiHandler({final: 'c'}, params => this.sendDeviceAttributesPrimary(params));\n    this._parser.setCsiHandler({prefix: '>', final: 'c'}, params => this.sendDeviceAttributesSecondary(params));\n    this._parser.setCsiHandler({final: 'd'}, params => this.linePosAbsolute(params));\n    this._parser.setCsiHandler({final: 'e'}, params => this.vPositionRelative(params));\n    this._parser.setCsiHandler({final: 'f'}, params => this.hVPosition(params));\n    this._parser.setCsiHandler({final: 'g'}, params => this.tabClear(params));\n    this._parser.setCsiHandler({final: 'h'}, params => this.setMode(params));\n    this._parser.setCsiHandler({prefix: '?', final: 'h'}, params => this.setModePrivate(params));\n    this._parser.setCsiHandler({final: 'l'}, params => this.resetMode(params));\n    this._parser.setCsiHandler({prefix: '?', final: 'l'}, params => this.resetModePrivate(params));\n    this._parser.setCsiHandler({final: 'm'}, params => this.charAttributes(params));\n    this._parser.setCsiHandler({final: 'n'}, params => this.deviceStatus(params));\n    this._parser.setCsiHandler({prefix: '?', final: 'n'}, params => this.deviceStatusPrivate(params));\n    this._parser.setCsiHandler({intermediates: '!', final: 'p'}, params => this.softReset(params));\n    this._parser.setCsiHandler({intermediates: ' ', final: 'q'}, params => this.setCursorStyle(params));\n    this._parser.setCsiHandler({final: 'r'}, params => this.setScrollRegion(params));\n    this._parser.setCsiHandler({final: 's'}, params => this.saveCursor(params));\n    this._parser.setCsiHandler({final: 'u'}, params => this.restoreCursor(params));\n\n    /**\n     * execute handler\n     */\n    this._parser.setExecuteHandler(C0.BEL, () => this.bell());\n    this._parser.setExecuteHandler(C0.LF, () => this.lineFeed());\n    this._parser.setExecuteHandler(C0.VT, () => this.lineFeed());\n    this._parser.setExecuteHandler(C0.FF, () => this.lineFeed());\n    this._parser.setExecuteHandler(C0.CR, () => this.carriageReturn());\n    this._parser.setExecuteHandler(C0.BS, () => this.backspace());\n    this._parser.setExecuteHandler(C0.HT, () => this.tab());\n    this._parser.setExecuteHandler(C0.SO, () => this.shiftOut());\n    this._parser.setExecuteHandler(C0.SI, () => this.shiftIn());\n    // FIXME:   What do to with missing? Old code just added those to print.\n\n    this._parser.setExecuteHandler(C1.IND, () => this.index());\n    this._parser.setExecuteHandler(C1.NEL, () => this.nextLine());\n    this._parser.setExecuteHandler(C1.HTS, () => this.tabSet());\n\n    /**\n     * OSC handler\n     */\n    //   0 - icon name + title\n    this._parser.setOscHandler(0, new OscHandler((data: string) => this.setTitle(data)));\n    //   1 - icon name\n    //   2 - title\n    this._parser.setOscHandler(2, new OscHandler((data: string) => this.setTitle(data)));\n    //   3 - set property X in the form \"prop=value\"\n    //   4 - Change Color Number\n    //   5 - Change Special Color Number\n    //   6 - Enable/disable Special Color Number c\n    //   7 - current directory? (not in xterm spec, see https://gitlab.com/gnachman/iterm2/issues/3939)\n    //  10 - Change VT100 text foreground color to Pt.\n    //  11 - Change VT100 text background color to Pt.\n    //  12 - Change text cursor color to Pt.\n    //  13 - Change mouse foreground color to Pt.\n    //  14 - Change mouse background color to Pt.\n    //  15 - Change Tektronix foreground color to Pt.\n    //  16 - Change Tektronix background color to Pt.\n    //  17 - Change highlight background color to Pt.\n    //  18 - Change Tektronix cursor color to Pt.\n    //  19 - Change highlight foreground color to Pt.\n    //  46 - Change Log File to Pt.\n    //  50 - Set Font to Pt.\n    //  51 - reserved for Emacs shell.\n    //  52 - Manipulate Selection Data.\n    // 104 ; c - Reset Color Number c.\n    // 105 ; c - Reset Special Color Number c.\n    // 106 ; c; f - Enable/disable Special Color Number c.\n    // 110 - Reset VT100 text foreground color.\n    // 111 - Reset VT100 text background color.\n    // 112 - Reset text cursor color.\n    // 113 - Reset mouse foreground color.\n    // 114 - Reset mouse background color.\n    // 115 - Reset Tektronix foreground color.\n    // 116 - Reset Tektronix background color.\n    // 117 - Reset highlight color.\n    // 118 - Reset Tektronix cursor color.\n    // 119 - Reset highlight foreground color.\n\n    /**\n     * ESC handlers\n     */\n    this._parser.setEscHandler({final: '7'}, () => this.saveCursor());\n    this._parser.setEscHandler({final: '8'}, () => this.restoreCursor());\n    this._parser.setEscHandler({final: 'D'}, () => this.index());\n    this._parser.setEscHandler({final: 'E'}, () => this.nextLine());\n    this._parser.setEscHandler({final: 'H'}, () => this.tabSet());\n    this._parser.setEscHandler({final: 'M'}, () => this.reverseIndex());\n    this._parser.setEscHandler({final: '='}, () => this.keypadApplicationMode());\n    this._parser.setEscHandler({final: '>'}, () => this.keypadNumericMode());\n    this._parser.setEscHandler({final: 'c'}, () => this.reset());\n    this._parser.setEscHandler({final: 'n'}, () => this.setgLevel(2));\n    this._parser.setEscHandler({final: 'o'}, () => this.setgLevel(3));\n    this._parser.setEscHandler({final: '|'}, () => this.setgLevel(3));\n    this._parser.setEscHandler({final: '}'}, () => this.setgLevel(2));\n    this._parser.setEscHandler({final: '~'}, () => this.setgLevel(1));\n    this._parser.setEscHandler({intermediates: '%', final: '@'}, () => this.selectDefaultCharset());\n    this._parser.setEscHandler({intermediates: '%', final: 'G'}, () => this.selectDefaultCharset());\n    for (const flag in CHARSETS) {\n      this._parser.setEscHandler({intermediates: '(', final: flag}, () => this.selectCharset('(' + flag));\n      this._parser.setEscHandler({intermediates: ')', final: flag}, () => this.selectCharset(')' + flag));\n      this._parser.setEscHandler({intermediates: '*', final: flag}, () => this.selectCharset('*' + flag));\n      this._parser.setEscHandler({intermediates: '+', final: flag}, () => this.selectCharset('+' + flag));\n      this._parser.setEscHandler({intermediates: '-', final: flag}, () => this.selectCharset('-' + flag));\n      this._parser.setEscHandler({intermediates: '.', final: flag}, () => this.selectCharset('.' + flag));\n      this._parser.setEscHandler({intermediates: '/', final: flag}, () => this.selectCharset('/' + flag)); // TODO: supported?\n    }\n    this._parser.setEscHandler({intermediates: '#', final: '8'}, () => this.screenAlignmentPattern());\n\n    /**\n     * error handler\n     */\n    this._parser.setErrorHandler((state: IParsingState) => {\n      this._logService.error('Parsing error: ', state);\n      return state;\n    });\n\n    /**\n     * DCS handler\n     */\n    this._parser.setDcsHandler({intermediates: '$', final: 'q'}, new DECRQSS(this._bufferService, this._coreService, this._logService, this._optionsService));\n  }\n\n  public dispose(): void {\n    super.dispose();\n  }\n\n  // TODO: When InputHandler moves into common, browser dependencies need to move out\n  public setBrowserServices(selectionService: ISelectionService): void {\n    this._selectionService = selectionService;\n  }\n\n  public parse(data: string): void {\n    let buffer = this._bufferService.buffer;\n    const cursorStartX = buffer.x;\n    const cursorStartY = buffer.y;\n\n    this._logService.debug('parsing data', data);\n\n    if (this._parseBuffer.length < data.length) {\n      this._parseBuffer = new Uint32Array(data.length);\n    }\n    this._parser.parse(this._parseBuffer, this._stringDecoder.decode(data, this._parseBuffer));\n\n    buffer = this._bufferService.buffer;\n    if (buffer.x !== cursorStartX || buffer.y !== cursorStartY) {\n      this._onCursorMove.fire();\n    }\n  }\n\n  public parseUtf8(data: Uint8Array): void {\n    let buffer = this._bufferService.buffer;\n    const cursorStartX = buffer.x;\n    const cursorStartY = buffer.y;\n\n    this._logService.debug('parsing data', data);\n\n    if (this._parseBuffer.length < data.length) {\n      this._parseBuffer = new Uint32Array(data.length);\n    }\n    this._parser.parse(this._parseBuffer, this._utf8Decoder.decode(data, this._parseBuffer));\n\n    buffer = this._bufferService.buffer;\n    if (buffer.x !== cursorStartX || buffer.y !== cursorStartY) {\n      this._onCursorMove.fire();\n    }\n  }\n\n  public print(data: Uint32Array, start: number, end: number): void {\n    let code: number;\n    let chWidth: number;\n    const buffer = this._bufferService.buffer;\n    const charset = this._terminal.charset;\n    const screenReaderMode = this._optionsService.options.screenReaderMode;\n    const cols = this._bufferService.cols;\n    const wraparoundMode = this._terminal.wraparoundMode;\n    const insertMode = this._terminal.insertMode;\n    const curAttr = this._terminal.curAttrData;\n    let bufferRow = buffer.lines.get(buffer.y + buffer.ybase);\n\n    this._dirtyRowService.markDirty(buffer.y);\n    for (let pos = start; pos < end; ++pos) {\n      code = data[pos];\n\n      // calculate print space\n      // expensive call, therefore we save width in line buffer\n      chWidth = wcwidth(code);\n\n      // get charset replacement character\n      // charset is only defined for ASCII, therefore we only\n      // search for an replacement char if code < 127\n      if (code < 127 && charset) {\n        const ch = charset[String.fromCharCode(code)];\n        if (ch) {\n          code = ch.charCodeAt(0);\n        }\n      }\n\n      if (screenReaderMode) {\n        this._terminal.onA11yCharEmitter.fire(stringFromCodePoint(code));\n      }\n\n      // insert combining char at last cursor position\n      // FIXME: needs handling after cursor jumps\n      // buffer.x should never be 0 for a combining char\n      // since they always follow a cell consuming char\n      // therefore we can test for buffer.x to avoid overflow left\n      if (!chWidth && buffer.x) {\n        if (!bufferRow.getWidth(buffer.x - 1)) {\n          // found empty cell after fullwidth, need to go 2 cells back\n          // it is save to step 2 cells back here\n          // since an empty cell is only set by fullwidth chars\n          bufferRow.addCodepointToCell(buffer.x - 2, code);\n        } else {\n          bufferRow.addCodepointToCell(buffer.x - 1, code);\n        }\n        continue;\n      }\n\n      // goto next line if ch would overflow\n      // TODO: needs a global min terminal width of 2\n      // FIXME: additionally ensure chWidth fits into a line\n      //   -->  maybe forbid cols<xy at higher level as it would\n      //        introduce a bad runtime penalty here\n      if (buffer.x + chWidth - 1 >= cols) {\n        // autowrap - DECAWM\n        // automatically wraps to the beginning of the next line\n        if (wraparoundMode) {\n          buffer.x = 0;\n          buffer.y++;\n          if (buffer.y === buffer.scrollBottom + 1) {\n            buffer.y--;\n            this._terminal.scroll(true);\n          } else {\n            if (buffer.y >= this._bufferService.rows) {\n              buffer.y = this._bufferService.rows - 1;\n            }\n            // The line already exists (eg. the initial viewport), mark it as a\n            // wrapped line\n            buffer.lines.get(buffer.y).isWrapped = true;\n          }\n          // row changed, get it again\n          bufferRow = buffer.lines.get(buffer.y + buffer.ybase);\n        } else {\n          buffer.x = cols - 1;\n          if (chWidth === 2) {\n            // FIXME: check for xterm behavior\n            // What to do here? We got a wide char that does not fit into last cell\n            continue;\n          }\n        }\n      }\n\n      // insert mode: move characters to right\n      if (insertMode) {\n        // right shift cells according to the width\n        bufferRow.insertCells(buffer.x, chWidth, buffer.getNullCell(curAttr));\n        // test last cell - since the last cell has only room for\n        // a halfwidth char any fullwidth shifted there is lost\n        // and will be set to empty cell\n        if (bufferRow.getWidth(cols - 1) === 2) {\n          bufferRow.setCellFromCodePoint(cols - 1, NULL_CELL_CODE, NULL_CELL_WIDTH, curAttr.fg, curAttr.bg);\n        }\n      }\n\n      // write current char to buffer and advance cursor\n      bufferRow.setCellFromCodePoint(buffer.x++, code, chWidth, curAttr.fg, curAttr.bg);\n\n      // fullwidth char - also set next cell to placeholder stub and advance cursor\n      // for graphemes bigger than fullwidth we can simply loop to zero\n      // we already made sure above, that buffer.x + chWidth will not overflow right\n      if (chWidth > 0) {\n        while (--chWidth) {\n          // other than a regular empty cell a cell following a wide char has no width\n          bufferRow.setCellFromCodePoint(buffer.x++, 0, 0, curAttr.fg, curAttr.bg);\n        }\n      }\n    }\n    // store last char in Parser.precedingCodepoint for REP to work correctly\n    // This needs to check whether:\n    //  - fullwidth + surrogates: reset\n    //  - combining: only base char gets carried on (bug in xterm?)\n    if (end) {\n      bufferRow.loadCell(buffer.x - 1, this._workCell);\n      if (this._workCell.getWidth() === 2 || this._workCell.getCode() > 0xFFFF) {\n        this._parser.precedingCodepoint = 0;\n      } else if (this._workCell.isCombined()) {\n        this._parser.precedingCodepoint = this._workCell.getChars().charCodeAt(0);\n      } else {\n        this._parser.precedingCodepoint = this._workCell.content;\n      }\n    }\n    this._dirtyRowService.markDirty(buffer.y);\n  }\n\n  /**\n   * Forward addCsiHandler from parser.\n   */\n  public addCsiHandler(id: IFunctionIdentifier, callback: (params: IParams) => boolean): IDisposable {\n    return this._parser.addCsiHandler(id, callback);\n  }\n\n  /**\n   * Forward addDcsHandler from parser.\n   */\n  public addDcsHandler(id: IFunctionIdentifier, callback: (data: string, param: IParams) => boolean): IDisposable {\n    return this._parser.addDcsHandler(id, new DcsHandler(callback));\n  }\n\n  /**\n   * Forward addEscHandler from parser.\n   */\n  public addEscHandler(id: IFunctionIdentifier, callback: () => boolean): IDisposable {\n    return this._parser.addEscHandler(id, callback);\n  }\n\n  /**\n   * Forward addOscHandler from parser.\n   */\n  public addOscHandler(ident: number, callback: (data: string) => boolean): IDisposable {\n    return this._parser.addOscHandler(ident, new OscHandler(callback));\n  }\n\n  /**\n   * BEL\n   * Bell (Ctrl-G).\n   */\n  public bell(): void {\n    this._terminal.bell();\n  }\n\n  /**\n   * LF\n   * Line Feed or New Line (NL).  (LF  is Ctrl-J).\n   */\n  public lineFeed(): void {\n    // make buffer local for faster access\n    const buffer = this._bufferService.buffer;\n\n    if (this._optionsService.options.convertEol) {\n      buffer.x = 0;\n    }\n    buffer.y++;\n    if (buffer.y === buffer.scrollBottom + 1) {\n      buffer.y--;\n      this._terminal.scroll();\n    } else if (buffer.y >= this._bufferService.rows) {\n      buffer.y = this._bufferService.rows - 1;\n    }\n    // If the end of the line is hit, prevent this action from wrapping around to the next line.\n    if (buffer.x >= this._bufferService.cols) {\n      buffer.x--;\n    }\n\n    this._onLineFeed.fire();\n  }\n\n  /**\n   * CR\n   * Carriage Return (Ctrl-M).\n   */\n  public carriageReturn(): void {\n    this._bufferService.buffer.x = 0;\n  }\n\n  /**\n   * BS\n   * Backspace (Ctrl-H).\n   */\n  public backspace(): void {\n    this._restrictCursor();\n    if (this._bufferService.buffer.x > 0) {\n      this._bufferService.buffer.x--;\n    }\n  }\n\n  /**\n   * TAB\n   * Horizontal Tab (HT) (Ctrl-I).\n   */\n  public tab(): void {\n    if (this._bufferService.buffer.x >= this._bufferService.cols) {\n      return;\n    }\n    const originalX = this._bufferService.buffer.x;\n    this._bufferService.buffer.x = this._bufferService.buffer.nextStop();\n    if (this._optionsService.options.screenReaderMode) {\n      this._terminal.onA11yTabEmitter.fire(this._bufferService.buffer.x - originalX);\n    }\n  }\n\n  /**\n   * SO\n   * Shift Out (Ctrl-N) -> Switch to Alternate Character Set.  This invokes the\n   * G1 character set.\n   */\n  public shiftOut(): void {\n    this._terminal.setgLevel(1);\n  }\n\n  /**\n   * SI\n   * Shift In (Ctrl-O) -> Switch to Standard Character Set.  This invokes the G0\n   * character set (the default).\n   */\n  public shiftIn(): void {\n    this._terminal.setgLevel(0);\n  }\n\n  /**\n   * Restrict cursor to viewport size / scroll margin (origin mode).\n   */\n  private _restrictCursor(): void {\n    this._bufferService.buffer.x = Math.min(this._bufferService.cols - 1, Math.max(0, this._bufferService.buffer.x));\n    this._bufferService.buffer.y = this._terminal.originMode\n      ? Math.min(this._bufferService.buffer.scrollBottom, Math.max(this._bufferService.buffer.scrollTop, this._bufferService.buffer.y))\n      : Math.min(this._bufferService.rows - 1, Math.max(0, this._bufferService.buffer.y));\n  }\n\n  /**\n   * Set absolute cursor position.\n   */\n  private _setCursor(x: number, y: number): void {\n    if (this._terminal.originMode) {\n      this._bufferService.buffer.x = x;\n      this._bufferService.buffer.y = this._bufferService.buffer.scrollTop + y;\n    } else {\n      this._bufferService.buffer.x = x;\n      this._bufferService.buffer.y = y;\n    }\n    this._restrictCursor();\n  }\n\n  /**\n   * Set relative cursor position.\n   */\n  private _moveCursor(x: number, y: number): void {\n    // for relative changes we have to make sure we are within 0 .. cols/rows - 1\n    // before calculating the new position\n    this._restrictCursor();\n    this._setCursor(this._bufferService.buffer.x + x, this._bufferService.buffer.y + y);\n  }\n\n  /**\n   * CSI Ps A\n   * Cursor Up Ps Times (default = 1) (CUU).\n   */\n  public cursorUp(params: IParams): void {\n    // stop at scrollTop\n    const diffToTop = this._bufferService.buffer.y - this._bufferService.buffer.scrollTop;\n    if (diffToTop >= 0) {\n      this._moveCursor(0, -Math.min(diffToTop, params.params[0] || 1));\n    } else {\n      this._moveCursor(0, -(params.params[0] || 1));\n    }\n  }\n\n  /**\n   * CSI Ps B\n   * Cursor Down Ps Times (default = 1) (CUD).\n   */\n  public cursorDown(params: IParams): void {\n    // stop at scrollBottom\n    const diffToBottom = this._bufferService.buffer.scrollBottom - this._bufferService.buffer.y;\n    if (diffToBottom >= 0) {\n      this._moveCursor(0, Math.min(diffToBottom, params.params[0] || 1));\n    } else {\n      this._moveCursor(0, params.params[0] || 1);\n    }\n  }\n\n  /**\n   * CSI Ps C\n   * Cursor Forward Ps Times (default = 1) (CUF).\n   */\n  public cursorForward(params: IParams): void {\n    this._moveCursor(params.params[0] || 1, 0);\n  }\n\n  /**\n   * CSI Ps D\n   * Cursor Backward Ps Times (default = 1) (CUB).\n   */\n  public cursorBackward(params: IParams): void {\n    this._moveCursor(-(params.params[0] || 1), 0);\n  }\n\n  /**\n   * CSI Ps E\n   * Cursor Next Line Ps Times (default = 1) (CNL).\n   * Other than cursorDown (CUD) also set the cursor to first column.\n   */\n  public cursorNextLine(params: IParams): void {\n    this.cursorDown(params);\n    this._bufferService.buffer.x = 0;\n  }\n\n  /**\n   * CSI Ps F\n   * Cursor Previous Line Ps Times (default = 1) (CPL).\n   * Other than cursorUp (CUU) also set the cursor to first column.\n   */\n  public cursorPrecedingLine(params: IParams): void {\n    this.cursorUp(params);\n    this._bufferService.buffer.x = 0;\n  }\n\n  /**\n   * CSI Ps G\n   * Cursor Character Absolute  [column] (default = [row,1]) (CHA).\n   */\n  public cursorCharAbsolute(params: IParams): void {\n    this._setCursor((params.params[0] || 1) - 1, this._bufferService.buffer.y);\n  }\n\n  /**\n   * CSI Ps ; Ps H\n   * Cursor Position [row;column] (default = [1,1]) (CUP).\n   */\n  public cursorPosition(params: IParams): void {\n    this._setCursor(\n      // col\n      (params.length >= 2) ? (params.params[1] || 1) - 1 : 0,\n      // row\n      (params.params[0] || 1) - 1);\n  }\n\n  /**\n   * CSI Pm `  Character Position Absolute\n   *   [column] (default = [row,1]) (HPA).\n   * Currently same functionality as CHA.\n   */\n  public charPosAbsolute(params: IParams): void {\n    this._setCursor((params.params[0] || 1) - 1, this._bufferService.buffer.y);\n  }\n\n  /**\n   * CSI Pm a  Character Position Relative\n   *   [columns] (default = [row,col+1]) (HPR)\n   * Currently same functionality as CUF.\n   */\n  public hPositionRelative(params: IParams): void {\n    this._moveCursor(params.params[0] || 1, 0);\n  }\n\n  /**\n   * CSI Pm d  Vertical Position Absolute (VPA)\n   *   [row] (default = [1,column])\n   */\n  public linePosAbsolute(params: IParams): void {\n    this._setCursor(this._bufferService.buffer.x, (params.params[0] || 1) - 1);\n  }\n\n  /**\n   * CSI Pm e  Vertical Position Relative (VPR)\n   *   [rows] (default = [row+1,column])\n   * reuse CSI Ps B ?\n   */\n  public vPositionRelative(params: IParams): void {\n    this._moveCursor(0, params.params[0] || 1);\n  }\n\n  /**\n   * CSI Ps ; Ps f\n   *   Horizontal and Vertical Position [row;column] (default =\n   *   [1,1]) (HVP).\n   *   Same as CUP.\n   */\n  public hVPosition(params: IParams): void {\n    this.cursorPosition(params);\n  }\n\n  /**\n   * CSI Ps g  Tab Clear (TBC).\n   *     Ps = 0  -> Clear Current Column (default).\n   *     Ps = 3  -> Clear All.\n   * Potentially:\n   *   Ps = 2  -> Clear Stops on Line.\n   *   http://vt100.net/annarbor/aaa-ug/section6.html\n   */\n  public tabClear(params: IParams): void {\n    const param = params.params[0];\n    if (param === 0) {\n      delete this._bufferService.buffer.tabs[this._bufferService.buffer.x];\n    } else if (param === 3) {\n      this._bufferService.buffer.tabs = {};\n    }\n  }\n\n  /**\n   * CSI Ps I\n   *   Cursor Forward Tabulation Ps tab stops (default = 1) (CHT).\n   */\n  public cursorForwardTab(params: IParams): void {\n    if (this._bufferService.buffer.x >= this._bufferService.cols) {\n      return;\n    }\n    let param = params.params[0] || 1;\n    while (param--) {\n      this._bufferService.buffer.x = this._bufferService.buffer.nextStop();\n    }\n  }\n\n  /**\n   * CSI Ps Z  Cursor Backward Tabulation Ps tab stops (default = 1) (CBT).\n   */\n  public cursorBackwardTab(params: IParams): void {\n    if (this._bufferService.buffer.x >= this._bufferService.cols) {\n      return;\n    }\n    let param = params.params[0] || 1;\n\n    // make buffer local for faster access\n    const buffer = this._bufferService.buffer;\n\n    while (param--) {\n      buffer.x = buffer.prevStop();\n    }\n  }\n\n\n  /**\n   * Helper method to erase cells in a terminal row.\n   * The cell gets replaced with the eraseChar of the terminal.\n   * @param y row index\n   * @param start first cell index to be erased\n   * @param end   end - 1 is last erased cell\n   */\n  private _eraseInBufferLine(y: number, start: number, end: number, clearWrap: boolean = false): void {\n    const line = this._bufferService.buffer.lines.get(this._bufferService.buffer.ybase + y);\n    line.replaceCells(\n      start,\n      end,\n      this._bufferService.buffer.getNullCell(this._terminal.eraseAttrData())\n    );\n    if (clearWrap) {\n      line.isWrapped = false;\n    }\n  }\n\n  /**\n   * Helper method to reset cells in a terminal row.\n   * The cell gets replaced with the eraseChar of the terminal and the isWrapped property is set to false.\n   * @param y row index\n   */\n  private _resetBufferLine(y: number): void {\n    const line = this._bufferService.buffer.lines.get(this._bufferService.buffer.ybase + y);\n    line.fill(this._bufferService.buffer.getNullCell(this._terminal.eraseAttrData()));\n    line.isWrapped = false;\n  }\n\n  /**\n   * CSI Ps J  Erase in Display (ED).\n   *     Ps = 0  -> Erase Below (default).\n   *     Ps = 1  -> Erase Above.\n   *     Ps = 2  -> Erase All.\n   *     Ps = 3  -> Erase Saved Lines (xterm).\n   * CSI ? Ps J\n   *   Erase in Display (DECSED).\n   *     Ps = 0  -> Selective Erase Below (default).\n   *     Ps = 1  -> Selective Erase Above.\n   *     Ps = 2  -> Selective Erase All.\n   */\n  public eraseInDisplay(params: IParams): void {\n    this._restrictCursor();\n    let j;\n    switch (params.params[0]) {\n      case 0:\n        j = this._bufferService.buffer.y;\n        this._dirtyRowService.markDirty(j);\n        this._eraseInBufferLine(j++, this._bufferService.buffer.x, this._bufferService.cols, this._bufferService.buffer.x === 0);\n        for (; j < this._bufferService.rows; j++) {\n          this._resetBufferLine(j);\n        }\n        this._dirtyRowService.markDirty(j);\n        break;\n      case 1:\n        j = this._bufferService.buffer.y;\n        this._dirtyRowService.markDirty(j);\n        // Deleted front part of line and everything before. This line will no longer be wrapped.\n        this._eraseInBufferLine(j, 0, this._bufferService.buffer.x + 1, true);\n        if (this._bufferService.buffer.x + 1 >= this._bufferService.cols) {\n          // Deleted entire previous line. This next line can no longer be wrapped.\n          this._bufferService.buffer.lines.get(j + 1).isWrapped = false;\n        }\n        while (j--) {\n          this._resetBufferLine(j);\n        }\n        this._dirtyRowService.markDirty(0);\n        break;\n      case 2:\n        j = this._bufferService.rows;\n        this._dirtyRowService.markDirty(j - 1);\n        while (j--) {\n          this._resetBufferLine(j);\n        }\n        this._dirtyRowService.markDirty(0);\n        break;\n      case 3:\n        // Clear scrollback (everything not in viewport)\n        const scrollBackSize = this._bufferService.buffer.lines.length - this._bufferService.rows;\n        if (scrollBackSize > 0) {\n          this._bufferService.buffer.lines.trimStart(scrollBackSize);\n          this._bufferService.buffer.ybase = Math.max(this._bufferService.buffer.ybase - scrollBackSize, 0);\n          this._bufferService.buffer.ydisp = Math.max(this._bufferService.buffer.ydisp - scrollBackSize, 0);\n          // Force a scroll event to refresh viewport\n          this._onScroll.fire(0);\n        }\n        break;\n    }\n  }\n\n  /**\n   * CSI Ps K  Erase in Line (EL).\n   *     Ps = 0  -> Erase to Right (default).\n   *     Ps = 1  -> Erase to Left.\n   *     Ps = 2  -> Erase All.\n   * CSI ? Ps K\n   *   Erase in Line (DECSEL).\n   *     Ps = 0  -> Selective Erase to Right (default).\n   *     Ps = 1  -> Selective Erase to Left.\n   *     Ps = 2  -> Selective Erase All.\n   */\n  public eraseInLine(params: IParams): void {\n    this._restrictCursor();\n    switch (params.params[0]) {\n      case 0:\n        this._eraseInBufferLine(this._bufferService.buffer.y, this._bufferService.buffer.x, this._bufferService.cols);\n        break;\n      case 1:\n        this._eraseInBufferLine(this._bufferService.buffer.y, 0, this._bufferService.buffer.x + 1);\n        break;\n      case 2:\n        this._eraseInBufferLine(this._bufferService.buffer.y, 0, this._bufferService.cols);\n        break;\n    }\n    this._dirtyRowService.markDirty(this._bufferService.buffer.y);\n  }\n\n  /**\n   * CSI Ps L\n   * Insert Ps Line(s) (default = 1) (IL).\n   */\n  public insertLines(params: IParams): void {\n    this._restrictCursor();\n    let param = params.params[0] || 1;\n\n    // make buffer local for faster access\n    const buffer = this._bufferService.buffer;\n\n    if (buffer.y > buffer.scrollBottom || buffer.y < buffer.scrollTop) {\n      return;\n    }\n\n    const row: number = buffer.y + buffer.ybase;\n\n    const scrollBottomRowsOffset = this._bufferService.rows - 1 - buffer.scrollBottom;\n    const scrollBottomAbsolute = this._bufferService.rows - 1 + buffer.ybase - scrollBottomRowsOffset + 1;\n    while (param--) {\n      // test: echo -e '\\e[44m\\e[1L\\e[0m'\n      // blankLine(true) - xterm/linux behavior\n      buffer.lines.splice(scrollBottomAbsolute - 1, 1);\n      buffer.lines.splice(row, 0, buffer.getBlankLine(this._terminal.eraseAttrData()));\n    }\n\n    this._dirtyRowService.markRangeDirty(buffer.y, buffer.scrollBottom);\n    buffer.x = 0; // see https://vt100.net/docs/vt220-rm/chapter4.html - vt220 only?\n  }\n\n  /**\n   * CSI Ps M\n   * Delete Ps Line(s) (default = 1) (DL).\n   */\n  public deleteLines(params: IParams): void {\n    this._restrictCursor();\n    let param = params.params[0] || 1;\n\n    // make buffer local for faster access\n    const buffer = this._bufferService.buffer;\n\n    if (buffer.y > buffer.scrollBottom || buffer.y < buffer.scrollTop) {\n      return;\n    }\n\n    const row: number = buffer.y + buffer.ybase;\n\n    let j: number;\n    j = this._bufferService.rows - 1 - buffer.scrollBottom;\n    j = this._bufferService.rows - 1 + buffer.ybase - j;\n    while (param--) {\n      // test: echo -e '\\e[44m\\e[1M\\e[0m'\n      // blankLine(true) - xterm/linux behavior\n      buffer.lines.splice(row, 1);\n      buffer.lines.splice(j, 0, buffer.getBlankLine(this._terminal.eraseAttrData()));\n    }\n\n    this._dirtyRowService.markRangeDirty(buffer.y, buffer.scrollBottom);\n    buffer.x = 0; // see https://vt100.net/docs/vt220-rm/chapter4.html - vt220 only?\n  }\n\n  /**\n   * CSI Ps @\n   * Insert Ps (Blank) Character(s) (default = 1) (ICH).\n   */\n  public insertChars(params: IParams): void {\n    this._restrictCursor();\n    const line = this._bufferService.buffer.lines.get(this._bufferService.buffer.y + this._bufferService.buffer.ybase);\n    if (line) {\n      line.insertCells(\n        this._bufferService.buffer.x,\n        params.params[0] || 1,\n        this._bufferService.buffer.getNullCell(this._terminal.eraseAttrData())\n      );\n      this._dirtyRowService.markDirty(this._bufferService.buffer.y);\n    }\n  }\n\n  /**\n   * CSI Ps P\n   * Delete Ps Character(s) (default = 1) (DCH).\n   */\n  public deleteChars(params: IParams): void {\n    this._restrictCursor();\n    const line = this._bufferService.buffer.lines.get(this._bufferService.buffer.y + this._bufferService.buffer.ybase);\n    if (line) {\n      line.deleteCells(\n        this._bufferService.buffer.x,\n        params.params[0] || 1,\n        this._bufferService.buffer.getNullCell(this._terminal.eraseAttrData())\n      );\n      this._dirtyRowService.markDirty(this._bufferService.buffer.y);\n    }\n  }\n\n  /**\n   * CSI Ps S  Scroll up Ps lines (default = 1) (SU).\n   */\n  public scrollUp(params: IParams): void {\n    let param = params.params[0] || 1;\n\n    // make buffer local for faster access\n    const buffer = this._bufferService.buffer;\n\n    while (param--) {\n      buffer.lines.splice(buffer.ybase + buffer.scrollTop, 1);\n      buffer.lines.splice(buffer.ybase + buffer.scrollBottom, 0, buffer.getBlankLine(this._terminal.eraseAttrData()));\n    }\n    this._dirtyRowService.markRangeDirty(buffer.scrollTop, buffer.scrollBottom);\n  }\n\n  /**\n   * CSI Ps T  Scroll down Ps lines (default = 1) (SD).\n   */\n  public scrollDown(params: IParams): void {\n    if (params.length < 2) {\n      let param = params.params[0] || 1;\n\n      // make buffer local for faster access\n      const buffer = this._bufferService.buffer;\n\n      while (param--) {\n        buffer.lines.splice(buffer.ybase + buffer.scrollBottom, 1);\n        buffer.lines.splice(buffer.ybase + buffer.scrollTop, 0, buffer.getBlankLine(this._terminal.eraseAttrData()));\n      }\n      this._dirtyRowService.markRangeDirty(buffer.scrollTop, buffer.scrollBottom);\n    }\n  }\n\n  /**\n   * CSI Ps X\n   * Erase Ps Character(s) (default = 1) (ECH).\n   */\n  public eraseChars(params: IParams): void {\n    this._restrictCursor();\n    const line = this._bufferService.buffer.lines.get(this._bufferService.buffer.y + this._bufferService.buffer.ybase);\n    if (line) {\n      line.replaceCells(\n        this._bufferService.buffer.x,\n        this._bufferService.buffer.x + (params.params[0] || 1),\n        this._bufferService.buffer.getNullCell(this._terminal.eraseAttrData())\n      );\n      this._dirtyRowService.markDirty(this._bufferService.buffer.y);\n    }\n  }\n\n  /**\n   * CSI Ps b  Repeat the preceding graphic character Ps times (REP).\n   * From ECMA 48 (@see http://www.ecma-international.org/publications/files/ECMA-ST/Ecma-048.pdf)\n   *    Notation: (Pn)\n   *    Representation: CSI Pn 06/02\n   *    Parameter default value: Pn = 1\n   *    REP is used to indicate that the preceding character in the data stream,\n   *    if it is a graphic character (represented by one or more bit combinations) including SPACE,\n   *    is to be repeated n times, where n equals the value of Pn.\n   *    If the character preceding REP is a control function or part of a control function,\n   *    the effect of REP is not defined by this Standard.\n   *\n   * Since we propagate the terminal as xterm-256color we have to follow xterm's behavior:\n   *    - fullwidth + surrogate chars are ignored\n   *    - for combining chars only the base char gets repeated\n   *    - text attrs are applied normally\n   *    - wrap around is respected\n   *    - any valid sequence resets the carried forward char\n   *\n   * Note: To get reset on a valid sequence working correctly without much runtime penalty,\n   * the preceding codepoint is stored on the parser in `this.print` and reset during `parser.parse`.\n   */\n  public repeatPrecedingCharacter(params: IParams): void {\n    if (!this._parser.precedingCodepoint) {\n      return;\n    }\n    // call print to insert the chars and handle correct wrapping\n    const length = params.params[0] || 1;\n    const data = new Uint32Array(length);\n    for (let i = 0; i < length; ++i) {\n      data[i] = this._parser.precedingCodepoint;\n    }\n    this.print(data, 0, data.length);\n  }\n\n  /**\n   * CSI Ps c  Send Device Attributes (Primary DA).\n   *     Ps = 0  or omitted -> request attributes from terminal.  The\n   *     response depends on the decTerminalID resource setting.\n   *     -> CSI ? 1 ; 2 c  (``VT100 with Advanced Video Option'')\n   *     -> CSI ? 1 ; 0 c  (``VT101 with No Options'')\n   *     -> CSI ? 6 c  (``VT102'')\n   *     -> CSI ? 6 0 ; 1 ; 2 ; 6 ; 8 ; 9 ; 1 5 ; c  (``VT220'')\n   *   The VT100-style response parameters do not mean anything by\n   *   themselves.  VT220 parameters do, telling the host what fea-\n   *   tures the terminal supports:\n   *     Ps = 1  -> 132-columns.\n   *     Ps = 2  -> Printer.\n   *     Ps = 6  -> Selective erase.\n   *     Ps = 8  -> User-defined keys.\n   *     Ps = 9  -> National replacement character sets.\n   *     Ps = 1 5  -> Technical characters.\n   *     Ps = 2 2  -> ANSI color, e.g., VT525.\n   *     Ps = 2 9  -> ANSI text locator (i.e., DEC Locator mode).\n   * CSI > Ps c\n   *   Send Device Attributes (Secondary DA).\n   *     Ps = 0  or omitted -> request the terminal's identification\n   *     code.  The response depends on the decTerminalID resource set-\n   *     ting.  It should apply only to VT220 and up, but xterm extends\n   *     this to VT100.\n   *     -> CSI  > Pp ; Pv ; Pc c\n   *   where Pp denotes the terminal type\n   *     Pp = 0  -> ``VT100''.\n   *     Pp = 1  -> ``VT220''.\n   *   and Pv is the firmware version (for xterm, this was originally\n   *   the XFree86 patch number, starting with 95).  In a DEC termi-\n   *   nal, Pc indicates the ROM cartridge registration number and is\n   *   always zero.\n   * More information:\n   *   xterm/charproc.c - line 2012, for more information.\n   *   vim responds with ^[[?0c or ^[[?1c after the terminal's response (?)\n   */\n  public sendDeviceAttributesPrimary(params: IParams): void {\n    if (params.params[0] > 0) {\n      return;\n    }\n    if (this._terminal.is('xterm') || this._terminal.is('rxvt-unicode') || this._terminal.is('screen')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[?1;2c');\n    } else if (this._terminal.is('linux')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[?6c');\n    }\n  }\n  public sendDeviceAttributesSecondary(params: IParams): void {\n    if (params.params[0] > 0) {\n      return;\n    }\n    // xterm and urxvt\n    // seem to spit this\n    // out around ~370 times (?).\n    if (this._terminal.is('xterm')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[>0;276;0c');\n    } else if (this._terminal.is('rxvt-unicode')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[>85;95;0c');\n    } else if (this._terminal.is('linux')) {\n      // not supported by linux console.\n      // linux console echoes parameters.\n      this._coreService.triggerDataEvent(params.params[0] + 'c');\n    } else if (this._terminal.is('screen')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[>83;40003;0c');\n    }\n  }\n\n  /**\n   * CSI Pm h  Set Mode (SM).\n   *     Ps = 2  -> Keyboard Action Mode (AM).\n   *     Ps = 4  -> Insert Mode (IRM).\n   *     Ps = 1 2  -> Send/receive (SRM).\n   *     Ps = 2 0  -> Automatic Newline (LNM).\n   * CSI ? Pm h\n   *   DEC Private Mode Set (DECSET).\n   *     Ps = 1  -> Application Cursor Keys (DECCKM).\n   *     Ps = 2  -> Designate USASCII for character sets G0-G3\n   *     (DECANM), and set VT100 mode.\n   *     Ps = 3  -> 132 Column Mode (DECCOLM).\n   *     Ps = 4  -> Smooth (Slow) Scroll (DECSCLM).\n   *     Ps = 5  -> Reverse Video (DECSCNM).\n   *     Ps = 6  -> Origin Mode (DECOM).\n   *     Ps = 7  -> Wraparound Mode (DECAWM).\n   *     Ps = 8  -> Auto-repeat Keys (DECARM).\n   *     Ps = 9  -> Send Mouse X & Y on button press.  See the sec-\n   *     tion Mouse Tracking.\n   *     Ps = 1 0  -> Show toolbar (rxvt).\n   *     Ps = 1 2  -> Start Blinking Cursor (att610).\n   *     Ps = 1 8  -> Print form feed (DECPFF).\n   *     Ps = 1 9  -> Set print extent to full screen (DECPEX).\n   *     Ps = 2 5  -> Show Cursor (DECTCEM).\n   *     Ps = 3 0  -> Show scrollbar (rxvt).\n   *     Ps = 3 5  -> Enable font-shifting functions (rxvt).\n   *     Ps = 3 8  -> Enter Tektronix Mode (DECTEK).\n   *     Ps = 4 0  -> Allow 80 -> 132 Mode.\n   *     Ps = 4 1  -> more(1) fix (see curses resource).\n   *     Ps = 4 2  -> Enable Nation Replacement Character sets (DECN-\n   *     RCM).\n   *     Ps = 4 4  -> Turn On Margin Bell.\n   *     Ps = 4 5  -> Reverse-wraparound Mode.\n   *     Ps = 4 6  -> Start Logging.  This is normally disabled by a\n   *     compile-time option.\n   *     Ps = 4 7  -> Use Alternate Screen Buffer.  (This may be dis-\n   *     abled by the titeInhibit resource).\n   *     Ps = 6 6  -> Application keypad (DECNKM).\n   *     Ps = 6 7  -> Backarrow key sends backspace (DECBKM).\n   *     Ps = 1 0 0 0  -> Send Mouse X & Y on button press and\n   *     release.  See the section Mouse Tracking.\n   *     Ps = 1 0 0 1  -> Use Hilite Mouse Tracking.\n   *     Ps = 1 0 0 2  -> Use Cell Motion Mouse Tracking.\n   *     Ps = 1 0 0 3  -> Use All Motion Mouse Tracking.\n   *     Ps = 1 0 0 4  -> Send FocusIn/FocusOut events.\n   *     Ps = 1 0 0 5  -> Enable Extended Mouse Mode.\n   *     Ps = 1 0 1 0  -> Scroll to bottom on tty output (rxvt).\n   *     Ps = 1 0 1 1  -> Scroll to bottom on key press (rxvt).\n   *     Ps = 1 0 3 4  -> Interpret \"meta\" key, sets eighth bit.\n   *     (enables the eightBitInput resource).\n   *     Ps = 1 0 3 5  -> Enable special modifiers for Alt and Num-\n   *     Lock keys.  (This enables the numLock resource).\n   *     Ps = 1 0 3 6  -> Send ESC   when Meta modifies a key.  (This\n   *     enables the metaSendsEscape resource).\n   *     Ps = 1 0 3 7  -> Send DEL from the editing-keypad Delete\n   *     key.\n   *     Ps = 1 0 3 9  -> Send ESC  when Alt modifies a key.  (This\n   *     enables the altSendsEscape resource).\n   *     Ps = 1 0 4 0  -> Keep selection even if not highlighted.\n   *     (This enables the keepSelection resource).\n   *     Ps = 1 0 4 1  -> Use the CLIPBOARD selection.  (This enables\n   *     the selectToClipboard resource).\n   *     Ps = 1 0 4 2  -> Enable Urgency window manager hint when\n   *     Control-G is received.  (This enables the bellIsUrgent\n   *     resource).\n   *     Ps = 1 0 4 3  -> Enable raising of the window when Control-G\n   *     is received.  (enables the popOnBell resource).\n   *     Ps = 1 0 4 7  -> Use Alternate Screen Buffer.  (This may be\n   *     disabled by the titeInhibit resource).\n   *     Ps = 1 0 4 8  -> Save cursor as in DECSC.  (This may be dis-\n   *     abled by the titeInhibit resource).\n   *     Ps = 1 0 4 9  -> Save cursor as in DECSC and use Alternate\n   *     Screen Buffer, clearing it first.  (This may be disabled by\n   *     the titeInhibit resource).  This combines the effects of the 1\n   *     0 4 7  and 1 0 4 8  modes.  Use this with terminfo-based\n   *     applications rather than the 4 7  mode.\n   *     Ps = 1 0 5 0  -> Set terminfo/termcap function-key mode.\n   *     Ps = 1 0 5 1  -> Set Sun function-key mode.\n   *     Ps = 1 0 5 2  -> Set HP function-key mode.\n   *     Ps = 1 0 5 3  -> Set SCO function-key mode.\n   *     Ps = 1 0 6 0  -> Set legacy keyboard emulation (X11R6).\n   *     Ps = 1 0 6 1  -> Set VT220 keyboard emulation.\n   *     Ps = 2 0 0 4  -> Set bracketed paste mode.\n   * Modes:\n   *   http: *vt100.net/docs/vt220-rm/chapter4.html\n   */\n  public setMode(params: IParams): void {\n    for (let i = 0; i < params.length; i++) {\n      switch (params.params[i]) {\n        case 4:\n          this._terminal.insertMode = true;\n          break;\n        case 20:\n          // this._t.convertEol = true;\n          break;\n      }\n    }\n  }\n  public setModePrivate(params: IParams): void {\n    for (let i = 0; i < params.length; i++) {\n      switch (params.params[i]) {\n        case 1:\n          this._coreService.decPrivateModes.applicationCursorKeys = true;\n          break;\n        case 2:\n          this._terminal.setgCharset(0, DEFAULT_CHARSET);\n          this._terminal.setgCharset(1, DEFAULT_CHARSET);\n          this._terminal.setgCharset(2, DEFAULT_CHARSET);\n          this._terminal.setgCharset(3, DEFAULT_CHARSET);\n          // set VT100 mode here\n          break;\n        case 3: // 132 col mode\n          // TODO: move DECCOLM into compat addon\n          this._terminal.savedCols = this._bufferService.cols;\n          this._terminal.resize(132, this._bufferService.rows);\n          this._terminal.reset();\n          break;\n        case 6:\n          this._terminal.originMode = true;\n          this._setCursor(0, 0);\n          break;\n        case 7:\n          this._terminal.wraparoundMode = true;\n          break;\n        case 12:\n          // this.cursorBlink = true;\n          break;\n        case 66:\n          this._logService.debug('Serial port requested application keypad.');\n          this._terminal.applicationKeypad = true;\n          if (this._terminal.viewport) {\n            this._terminal.viewport.syncScrollArea();\n          }\n          break;\n        case 9: // X10 Mouse\n          // no release, no motion, no wheel, no modifiers.\n        case 1000: // vt200 mouse\n          // no motion.\n          // no modifiers, except control on the wheel.\n        case 1002: // button event mouse\n        case 1003: // any event mouse\n          // any event - sends motion events,\n          // even if there is no button held down.\n\n          // TODO: Why are params[0] compares nested within a switch for params[0]?\n\n          this._terminal.x10Mouse = params.params[i] === 9;\n          this._terminal.vt200Mouse = params.params[i] === 1000;\n          this._terminal.normalMouse = params.params[i] > 1000;\n          this._terminal.mouseEvents = true;\n          if (this._terminal.element) {\n            this._terminal.element.classList.add('enable-mouse-events');\n          }\n          if (this._selectionService) {\n            this._selectionService.disable();\n          }\n          this._logService.debug('Binding to mouse events.');\n          break;\n        case 1004: // send focusin/focusout events\n          // focusin: ^[[I\n          // focusout: ^[[O\n          this._terminal.sendFocus = true;\n          break;\n        case 1005: // utf8 ext mode mouse\n          this._terminal.utfMouse = true;\n          // for wide terminals\n          // simply encodes large values as utf8 characters\n          break;\n        case 1006: // sgr ext mode mouse\n          this._terminal.sgrMouse = true;\n          // for wide terminals\n          // does not add 32 to fields\n          // press: ^[[<b;x;yM\n          // release: ^[[<b;x;ym\n          break;\n        case 1015: // urxvt ext mode mouse\n          this._terminal.urxvtMouse = true;\n          // for wide terminals\n          // numbers for fields\n          // press: ^[[b;x;yM\n          // motion: ^[[b;x;yT\n          break;\n        case 25: // show cursor\n          this._terminal.cursorHidden = false;\n          break;\n        case 1048: // alt screen cursor\n          this.saveCursor();\n          break;\n        case 1049: // alt screen buffer cursor\n          this.saveCursor();\n          // FALL-THROUGH\n        case 47: // alt screen buffer\n        case 1047: // alt screen buffer\n          this._bufferService.buffers.activateAltBuffer(this._terminal.eraseAttrData());\n          this._terminal.refresh(0, this._bufferService.rows - 1);\n          if (this._terminal.viewport) {\n            this._terminal.viewport.syncScrollArea();\n          }\n          this._terminal.showCursor();\n          break;\n        case 2004: // bracketed paste mode (https://cirw.in/blog/bracketed-paste)\n          this._terminal.bracketedPasteMode = true;\n          break;\n      }\n    }\n  }\n\n\n  /**\n   * CSI Pm l  Reset Mode (RM).\n   *     Ps = 2  -> Keyboard Action Mode (AM).\n   *     Ps = 4  -> Replace Mode (IRM).\n   *     Ps = 1 2  -> Send/receive (SRM).\n   *     Ps = 2 0  -> Normal Linefeed (LNM).\n   * CSI ? Pm l\n   *   DEC Private Mode Reset (DECRST).\n   *     Ps = 1  -> Normal Cursor Keys (DECCKM).\n   *     Ps = 2  -> Designate VT52 mode (DECANM).\n   *     Ps = 3  -> 80 Column Mode (DECCOLM).\n   *     Ps = 4  -> Jump (Fast) Scroll (DECSCLM).\n   *     Ps = 5  -> Normal Video (DECSCNM).\n   *     Ps = 6  -> Normal Cursor Mode (DECOM).\n   *     Ps = 7  -> No Wraparound Mode (DECAWM).\n   *     Ps = 8  -> No Auto-repeat Keys (DECARM).\n   *     Ps = 9  -> Don't send Mouse X & Y on button press.\n   *     Ps = 1 0  -> Hide toolbar (rxvt).\n   *     Ps = 1 2  -> Stop Blinking Cursor (att610).\n   *     Ps = 1 8  -> Don't print form feed (DECPFF).\n   *     Ps = 1 9  -> Limit print to scrolling region (DECPEX).\n   *     Ps = 2 5  -> Hide Cursor (DECTCEM).\n   *     Ps = 3 0  -> Don't show scrollbar (rxvt).\n   *     Ps = 3 5  -> Disable font-shifting functions (rxvt).\n   *     Ps = 4 0  -> Disallow 80 -> 132 Mode.\n   *     Ps = 4 1  -> No more(1) fix (see curses resource).\n   *     Ps = 4 2  -> Disable Nation Replacement Character sets (DEC-\n   *     NRCM).\n   *     Ps = 4 4  -> Turn Off Margin Bell.\n   *     Ps = 4 5  -> No Reverse-wraparound Mode.\n   *     Ps = 4 6  -> Stop Logging.  (This is normally disabled by a\n   *     compile-time option).\n   *     Ps = 4 7  -> Use Normal Screen Buffer.\n   *     Ps = 6 6  -> Numeric keypad (DECNKM).\n   *     Ps = 6 7  -> Backarrow key sends delete (DECBKM).\n   *     Ps = 1 0 0 0  -> Don't send Mouse X & Y on button press and\n   *     release.  See the section Mouse Tracking.\n   *     Ps = 1 0 0 1  -> Don't use Hilite Mouse Tracking.\n   *     Ps = 1 0 0 2  -> Don't use Cell Motion Mouse Tracking.\n   *     Ps = 1 0 0 3  -> Don't use All Motion Mouse Tracking.\n   *     Ps = 1 0 0 4  -> Don't send FocusIn/FocusOut events.\n   *     Ps = 1 0 0 5  -> Disable Extended Mouse Mode.\n   *     Ps = 1 0 1 0  -> Don't scroll to bottom on tty output\n   *     (rxvt).\n   *     Ps = 1 0 1 1  -> Don't scroll to bottom on key press (rxvt).\n   *     Ps = 1 0 3 4  -> Don't interpret \"meta\" key.  (This disables\n   *     the eightBitInput resource).\n   *     Ps = 1 0 3 5  -> Disable special modifiers for Alt and Num-\n   *     Lock keys.  (This disables the numLock resource).\n   *     Ps = 1 0 3 6  -> Don't send ESC  when Meta modifies a key.\n   *     (This disables the metaSendsEscape resource).\n   *     Ps = 1 0 3 7  -> Send VT220 Remove from the editing-keypad\n   *     Delete key.\n   *     Ps = 1 0 3 9  -> Don't send ESC  when Alt modifies a key.\n   *     (This disables the altSendsEscape resource).\n   *     Ps = 1 0 4 0  -> Do not keep selection when not highlighted.\n   *     (This disables the keepSelection resource).\n   *     Ps = 1 0 4 1  -> Use the PRIMARY selection.  (This disables\n   *     the selectToClipboard resource).\n   *     Ps = 1 0 4 2  -> Disable Urgency window manager hint when\n   *     Control-G is received.  (This disables the bellIsUrgent\n   *     resource).\n   *     Ps = 1 0 4 3  -> Disable raising of the window when Control-\n   *     G is received.  (This disables the popOnBell resource).\n   *     Ps = 1 0 4 7  -> Use Normal Screen Buffer, clearing screen\n   *     first if in the Alternate Screen.  (This may be disabled by\n   *     the titeInhibit resource).\n   *     Ps = 1 0 4 8  -> Restore cursor as in DECRC.  (This may be\n   *     disabled by the titeInhibit resource).\n   *     Ps = 1 0 4 9  -> Use Normal Screen Buffer and restore cursor\n   *     as in DECRC.  (This may be disabled by the titeInhibit\n   *     resource).  This combines the effects of the 1 0 4 7  and 1 0\n   *     4 8  modes.  Use this with terminfo-based applications rather\n   *     than the 4 7  mode.\n   *     Ps = 1 0 5 0  -> Reset terminfo/termcap function-key mode.\n   *     Ps = 1 0 5 1  -> Reset Sun function-key mode.\n   *     Ps = 1 0 5 2  -> Reset HP function-key mode.\n   *     Ps = 1 0 5 3  -> Reset SCO function-key mode.\n   *     Ps = 1 0 6 0  -> Reset legacy keyboard emulation (X11R6).\n   *     Ps = 1 0 6 1  -> Reset keyboard emulation to Sun/PC style.\n   *     Ps = 2 0 0 4  -> Reset bracketed paste mode.\n   */\n  public resetMode(params: IParams): void {\n    for (let i = 0; i < params.length; i++) {\n      switch (params.params[i]) {\n        case 4:\n          this._terminal.insertMode = false;\n          break;\n        case 20:\n          // this._t.convertEol = false;\n          break;\n      }\n    }\n  }\n  public resetModePrivate(params: IParams): void {\n    for (let i = 0; i < params.length; i++) {\n      switch (params.params[i]) {\n        case 1:\n          this._coreService.decPrivateModes.applicationCursorKeys = false;\n          break;\n        case 3:\n          // TODO: move DECCOLM into compat addon\n          // Note: This impl currently does not enforce col 80, instead reverts\n          // to previous terminal width before entering DECCOLM 132\n          if (this._bufferService.cols === 132 && this._terminal.savedCols) {\n            this._terminal.resize(this._terminal.savedCols, this._bufferService.rows);\n          }\n          delete this._terminal.savedCols;\n          this._terminal.reset();\n          break;\n        case 6:\n          this._terminal.originMode = false;\n          this._setCursor(0, 0);\n          break;\n        case 7:\n          this._terminal.wraparoundMode = false;\n          break;\n        case 12:\n          // this.cursorBlink = false;\n          break;\n        case 66:\n          this._logService.debug('Switching back to normal keypad.');\n          this._terminal.applicationKeypad = false;\n          if (this._terminal.viewport) {\n            this._terminal.viewport.syncScrollArea();\n          }\n          break;\n        case 9: // X10 Mouse\n        case 1000: // vt200 mouse\n        case 1002: // button event mouse\n        case 1003: // any event mouse\n          this._terminal.x10Mouse = false;\n          this._terminal.vt200Mouse = false;\n          this._terminal.normalMouse = false;\n          this._terminal.mouseEvents = false;\n          if (this._terminal.element) {\n            this._terminal.element.classList.remove('enable-mouse-events');\n          }\n          if (this._selectionService) {\n            this._selectionService.enable();\n          }\n          break;\n        case 1004: // send focusin/focusout events\n          this._terminal.sendFocus = false;\n          break;\n        case 1005: // utf8 ext mode mouse\n          this._terminal.utfMouse = false;\n          break;\n        case 1006: // sgr ext mode mouse\n          this._terminal.sgrMouse = false;\n          break;\n        case 1015: // urxvt ext mode mouse\n          this._terminal.urxvtMouse = false;\n          break;\n        case 25: // hide cursor\n          this._terminal.cursorHidden = true;\n          break;\n        case 1048: // alt screen cursor\n          this.restoreCursor();\n          break;\n        case 1049: // alt screen buffer cursor\n           // FALL-THROUGH\n        case 47: // normal screen buffer\n        case 1047: // normal screen buffer - clearing it first\n          // Ensure the selection manager has the correct buffer\n          this._bufferService.buffers.activateNormalBuffer();\n          if (params.params[i] === 1049) {\n            this.restoreCursor();\n          }\n          this._terminal.refresh(0, this._bufferService.rows - 1);\n          if (this._terminal.viewport) {\n            this._terminal.viewport.syncScrollArea();\n          }\n          this._terminal.showCursor();\n          break;\n        case 2004: // bracketed paste mode (https://cirw.in/blog/bracketed-paste)\n          this._terminal.bracketedPasteMode = false;\n          break;\n      }\n    }\n  }\n\n  /**\n   * Helper to extract and apply color params/subparams.\n   * Returns advance for params index.\n   */\n  private _extractColor(params: IParams, pos: number, attr: IAttributeData): number {\n    // normalize params\n    // meaning: [target, CM, ign, val, val, val]\n    // RGB    : [ 38/48,  2, ign,   r,   g,   b]\n    // P256   : [ 38/48,  5, ign,   v, ign, ign]\n    const accu = [0, 0, -1, 0, 0, 0];\n\n    // alignment placeholder for non color space sequences\n    let cSpace = 0;\n\n    // return advance we took in params\n    let advance = 0;\n\n    do {\n      accu[advance + cSpace] = params.params[pos + advance];\n      if (params.hasSubParams(pos + advance)) {\n        const subparams = params.getSubParams(pos + advance);\n        let i = 0;\n        do {\n          if (accu[1] === 5) {\n            cSpace = 1;\n          }\n          accu[advance + i + 1 + cSpace] = subparams[i];\n        } while (++i < subparams.length && i + advance + 1 + cSpace < accu.length);\n        break;\n      }\n      // exit early if can decide color mode with semicolons\n      if ((accu[1] === 5 && advance + cSpace >= 2)\n          || (accu[1] === 2 && advance + cSpace >= 5)) {\n        break;\n      }\n      // offset colorSpace slot for semicolon mode\n      if (accu[1]) {\n        cSpace = 1;\n      }\n    } while (++advance + pos < params.length && advance + cSpace < accu.length);\n\n    // set default values to 0\n    for (let i = 2; i < accu.length; ++i) {\n      if (accu[i] === -1) {\n        accu[i] = 0;\n      }\n    }\n\n    // apply colors\n    if (accu[0] === 38) {\n      if (accu[1] === 2) {\n        attr.fg |= Attributes.CM_RGB;\n        attr.fg &= ~Attributes.RGB_MASK;\n        attr.fg |= AttributeData.fromColorRGB([accu[3], accu[4], accu[5]]);\n      } else if (accu[1] === 5) {\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.fg |= Attributes.CM_P256 | (accu[3] & 0xff);\n      }\n    } else if (accu[0] === 48) {\n      if (accu[1] === 2) {\n        attr.bg |= Attributes.CM_RGB;\n        attr.bg &= ~Attributes.RGB_MASK;\n        attr.bg |= AttributeData.fromColorRGB([accu[3], accu[4], accu[5]]);\n      } else if (accu[1] === 5) {\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.bg |= Attributes.CM_P256 | (accu[3] & 0xff);\n      }\n    }\n\n    return advance;\n  }\n\n  /**\n   * CSI Pm m  Character Attributes (SGR).\n   *     Ps = 0  -> Normal (default).\n   *     Ps = 1  -> Bold.\n   *     Ps = 2  -> Faint, decreased intensity (ISO 6429).\n   *     Ps = 4  -> Underlined.\n   *     Ps = 5  -> Blink (appears as Bold).\n   *     Ps = 7  -> Inverse.\n   *     Ps = 8  -> Invisible, i.e., hidden (VT300).\n   *     Ps = 2 2  -> Normal (neither bold nor faint).\n   *     Ps = 2 4  -> Not underlined.\n   *     Ps = 2 5  -> Steady (not blinking).\n   *     Ps = 2 7  -> Positive (not inverse).\n   *     Ps = 2 8  -> Visible, i.e., not hidden (VT300).\n   *     Ps = 3 0  -> Set foreground color to Black.\n   *     Ps = 3 1  -> Set foreground color to Red.\n   *     Ps = 3 2  -> Set foreground color to Green.\n   *     Ps = 3 3  -> Set foreground color to Yellow.\n   *     Ps = 3 4  -> Set foreground color to Blue.\n   *     Ps = 3 5  -> Set foreground color to Magenta.\n   *     Ps = 3 6  -> Set foreground color to Cyan.\n   *     Ps = 3 7  -> Set foreground color to White.\n   *     Ps = 3 9  -> Set foreground color to default (original).\n   *     Ps = 4 0  -> Set background color to Black.\n   *     Ps = 4 1  -> Set background color to Red.\n   *     Ps = 4 2  -> Set background color to Green.\n   *     Ps = 4 3  -> Set background color to Yellow.\n   *     Ps = 4 4  -> Set background color to Blue.\n   *     Ps = 4 5  -> Set background color to Magenta.\n   *     Ps = 4 6  -> Set background color to Cyan.\n   *     Ps = 4 7  -> Set background color to White.\n   *     Ps = 4 9  -> Set background color to default (original).\n   *\n   *   If 16-color support is compiled, the following apply.  Assume\n   *   that xterm's resources are set so that the ISO color codes are\n   *   the first 8 of a set of 16.  Then the aixterm colors are the\n   *   bright versions of the ISO colors:\n   *     Ps = 9 0  -> Set foreground color to Black.\n   *     Ps = 9 1  -> Set foreground color to Red.\n   *     Ps = 9 2  -> Set foreground color to Green.\n   *     Ps = 9 3  -> Set foreground color to Yellow.\n   *     Ps = 9 4  -> Set foreground color to Blue.\n   *     Ps = 9 5  -> Set foreground color to Magenta.\n   *     Ps = 9 6  -> Set foreground color to Cyan.\n   *     Ps = 9 7  -> Set foreground color to White.\n   *     Ps = 1 0 0  -> Set background color to Black.\n   *     Ps = 1 0 1  -> Set background color to Red.\n   *     Ps = 1 0 2  -> Set background color to Green.\n   *     Ps = 1 0 3  -> Set background color to Yellow.\n   *     Ps = 1 0 4  -> Set background color to Blue.\n   *     Ps = 1 0 5  -> Set background color to Magenta.\n   *     Ps = 1 0 6  -> Set background color to Cyan.\n   *     Ps = 1 0 7  -> Set background color to White.\n   *\n   *   If xterm is compiled with the 16-color support disabled, it\n   *   supports the following, from rxvt:\n   *     Ps = 1 0 0  -> Set foreground and background color to\n   *     default.\n   *\n   *   If 88- or 256-color support is compiled, the following apply.\n   *     Ps = 3 8  ; 5  ; Ps -> Set foreground color to the second\n   *     Ps.\n   *     Ps = 4 8  ; 5  ; Ps -> Set background color to the second\n   *     Ps.\n   */\n  public charAttributes(params: IParams): void {\n    // Optimize a single SGR0.\n    if (params.length === 1 && params.params[0] === 0) {\n      this._terminal.curAttrData.fg = DEFAULT_ATTR_DATA.fg;\n      this._terminal.curAttrData.bg = DEFAULT_ATTR_DATA.bg;\n      return;\n    }\n\n    const l = params.length;\n    let p;\n    const attr = this._terminal.curAttrData;\n\n    for (let i = 0; i < l; i++) {\n      p = params.params[i];\n      if (p >= 30 && p <= 37) {\n        // fg color 8\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.fg |= Attributes.CM_P16 | (p - 30);\n      } else if (p >= 40 && p <= 47) {\n        // bg color 8\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.bg |= Attributes.CM_P16 | (p - 40);\n      } else if (p >= 90 && p <= 97) {\n        // fg color 16\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.fg |= Attributes.CM_P16 | (p - 90) | 8;\n      } else if (p >= 100 && p <= 107) {\n        // bg color 16\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.bg |= Attributes.CM_P16 | (p - 100) | 8;\n      } else if (p === 0) {\n        // default\n        attr.fg = DEFAULT_ATTR_DATA.fg;\n        attr.bg = DEFAULT_ATTR_DATA.bg;\n      } else if (p === 1) {\n        // bold text\n        attr.fg |= FgFlags.BOLD;\n      } else if (p === 3) {\n        // italic text\n        attr.bg |= BgFlags.ITALIC;\n      } else if (p === 4) {\n        // underlined text\n        attr.fg |= FgFlags.UNDERLINE;\n      } else if (p === 5) {\n        // blink\n        attr.fg |= FgFlags.BLINK;\n      } else if (p === 7) {\n        // inverse and positive\n        // test with: echo -e '\\e[31m\\e[42mhello\\e[7mworld\\e[27mhi\\e[m'\n        attr.fg |= FgFlags.INVERSE;\n      } else if (p === 8) {\n        // invisible\n        attr.fg |= FgFlags.INVISIBLE;\n      } else if (p === 2) {\n        // dimmed text\n        attr.bg |= BgFlags.DIM;\n      } else if (p === 22) {\n        // not bold nor faint\n        attr.fg &= ~FgFlags.BOLD;\n        attr.bg &= ~BgFlags.DIM;\n      } else if (p === 23) {\n        // not italic\n        attr.bg &= ~BgFlags.ITALIC;\n      } else if (p === 24) {\n        // not underlined\n        attr.fg &= ~FgFlags.UNDERLINE;\n      } else if (p === 25) {\n        // not blink\n        attr.fg &= ~FgFlags.BLINK;\n      } else if (p === 27) {\n        // not inverse\n        attr.fg &= ~FgFlags.INVERSE;\n      } else if (p === 28) {\n        // not invisible\n        attr.fg &= ~FgFlags.INVISIBLE;\n      } else if (p === 39) {\n        // reset fg\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.fg |= DEFAULT_ATTR_DATA.fg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n      } else if (p === 49) {\n        // reset bg\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.bg |= DEFAULT_ATTR_DATA.bg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n      } else if (p === 38 || p === 48) {\n        // fg color 256 and RGB\n        i += this._extractColor(params, i, attr);\n      } else if (p === 100) {\n        // reset fg/bg\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.fg |= DEFAULT_ATTR_DATA.fg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.bg |= DEFAULT_ATTR_DATA.bg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n      } else {\n        this._logService.debug('Unknown SGR attribute: %d.', p);\n      }\n    }\n  }\n\n  /**\n   * CSI Ps n  Device Status Report (DSR).\n   *     Ps = 5  -> Status Report.  Result (``OK'') is\n   *   CSI 0 n\n   *     Ps = 6  -> Report Cursor Position (CPR) [row;column].\n   *   Result is\n   *   CSI r ; c R\n   * CSI ? Ps n\n   *   Device Status Report (DSR, DEC-specific).\n   *     Ps = 6  -> Report Cursor Position (CPR) [row;column] as CSI\n   *     ? r ; c R (assumes page is zero).\n   *     Ps = 1 5  -> Report Printer status as CSI ? 1 0  n  (ready).\n   *     or CSI ? 1 1  n  (not ready).\n   *     Ps = 2 5  -> Report UDK status as CSI ? 2 0  n  (unlocked)\n   *     or CSI ? 2 1  n  (locked).\n   *     Ps = 2 6  -> Report Keyboard status as\n   *   CSI ? 2 7  ;  1  ;  0  ;  0  n  (North American).\n   *   The last two parameters apply to VT400 & up, and denote key-\n   *   board ready and LK01 respectively.\n   *     Ps = 5 3  -> Report Locator status as\n   *   CSI ? 5 3  n  Locator available, if compiled-in, or\n   *   CSI ? 5 0  n  No Locator, if not.\n   */\n  public deviceStatus(params: IParams): void {\n    switch (params.params[0]) {\n      case 5:\n        // status report\n        this._coreService.triggerDataEvent(`${C0.ESC}[0n`);\n        break;\n      case 6:\n        // cursor position\n        const y = this._bufferService.buffer.y + 1;\n        const x = this._bufferService.buffer.x + 1;\n        this._coreService.triggerDataEvent(`${C0.ESC}[${y};${x}R`);\n        break;\n    }\n  }\n\n  public deviceStatusPrivate(params: IParams): void {\n    // modern xterm doesnt seem to\n    // respond to any of these except ?6, 6, and 5\n    switch (params.params[0]) {\n      case 6:\n        // cursor position\n        const y = this._bufferService.buffer.y + 1;\n        const x = this._bufferService.buffer.x + 1;\n        this._coreService.triggerDataEvent(`${C0.ESC}[?${y};${x}R`);\n        break;\n      case 15:\n        // no printer\n        // this.handler(C0.ESC + '[?11n');\n        break;\n      case 25:\n        // dont support user defined keys\n        // this.handler(C0.ESC + '[?21n');\n        break;\n      case 26:\n        // north american keyboard\n        // this.handler(C0.ESC + '[?27;1;0;0n');\n        break;\n      case 53:\n        // no dec locator/mouse\n        // this.handler(C0.ESC + '[?50n');\n        break;\n    }\n  }\n\n  /**\n   * CSI ! p   Soft terminal reset (DECSTR).\n   * http://vt100.net/docs/vt220-rm/table4-10.html\n   */\n  public softReset(params: IParams): void {\n    this._terminal.cursorHidden = false;\n    this._terminal.insertMode = false;\n    this._terminal.originMode = false;\n    this._terminal.wraparoundMode = true;  // defaults: xterm - true, vt100 - false\n    this._terminal.applicationKeypad = false; // ?\n    if (this._terminal.viewport) {\n      this._terminal.viewport.syncScrollArea();\n    }\n    this._coreService.decPrivateModes.applicationCursorKeys = false;\n    this._bufferService.buffer.scrollTop = 0;\n    this._bufferService.buffer.scrollBottom = this._bufferService.rows - 1;\n    this._terminal.curAttrData = DEFAULT_ATTR_DATA.clone();\n    this._bufferService.buffer.x = this._bufferService.buffer.y = 0; // ?\n    this._terminal.charset = null;\n    this._terminal.glevel = 0; // ??\n    this._terminal.charsets = [null]; // ??\n  }\n\n  /**\n   * CSI Ps SP q  Set cursor style (DECSCUSR, VT520).\n   *   Ps = 0  -> blinking block.\n   *   Ps = 1  -> blinking block (default).\n   *   Ps = 2  -> steady block.\n   *   Ps = 3  -> blinking underline.\n   *   Ps = 4  -> steady underline.\n   *   Ps = 5  -> blinking bar (xterm).\n   *   Ps = 6  -> steady bar (xterm).\n   */\n  public setCursorStyle(params: IParams): void {\n    const param = params.params[0] || 1;\n    switch (param) {\n      case 1:\n      case 2:\n        this._optionsService.options.cursorStyle = 'block';\n        break;\n      case 3:\n      case 4:\n        this._optionsService.options.cursorStyle = 'underline';\n        break;\n      case 5:\n      case 6:\n        this._optionsService.options.cursorStyle = 'bar';\n        break;\n    }\n    const isBlinking = param % 2 === 1;\n    this._optionsService.options.cursorBlink = isBlinking;\n  }\n\n  /**\n   * CSI Ps ; Ps r\n   *   Set Scrolling Region [top;bottom] (default = full size of win-\n   *   dow) (DECSTBM).\n   */\n  public setScrollRegion(params: IParams): void {\n    const top = params.params[0] || 1;\n    let bottom: number;\n\n    if (params.length < 2 || (bottom = params.params[1]) >  this._bufferService.rows || bottom === 0) {\n      bottom = this._bufferService.rows;\n    }\n\n    if (bottom > top) {\n      this._bufferService.buffer.scrollTop = top - 1;\n      this._bufferService.buffer.scrollBottom = bottom - 1;\n      this._setCursor(0, 0);\n    }\n  }\n\n\n  /**\n   * CSI s\n   * ESC 7\n   *   Save cursor (ANSI.SYS).\n   */\n  public saveCursor(params?: IParams): void {\n    this._bufferService.buffer.savedX = this._bufferService.buffer.x;\n    this._bufferService.buffer.savedY = this._bufferService.buffer.ybase + this._bufferService.buffer.y;\n    this._bufferService.buffer.savedCurAttrData.fg = this._terminal.curAttrData.fg;\n    this._bufferService.buffer.savedCurAttrData.bg = this._terminal.curAttrData.bg;\n    this._bufferService.buffer.savedCharset = this._terminal.charset;\n  }\n\n\n  /**\n   * CSI u\n   * ESC 8\n   *   Restore cursor (ANSI.SYS).\n   */\n  public restoreCursor(params?: IParams): void {\n    this._bufferService.buffer.x = this._bufferService.buffer.savedX || 0;\n    this._bufferService.buffer.y = Math.max(this._bufferService.buffer.savedY - this._bufferService.buffer.ybase, 0);\n    this._terminal.curAttrData.fg = this._bufferService.buffer.savedCurAttrData.fg;\n    this._terminal.curAttrData.bg = this._bufferService.buffer.savedCurAttrData.bg;\n    this._terminal.charset = (this as any)._savedCharset;\n    if (this._bufferService.buffer.savedCharset) {\n      this._terminal.charset = this._bufferService.buffer.savedCharset;\n    }\n    this._restrictCursor();\n  }\n\n\n  /**\n   * OSC 0; <data> ST (set icon name + window title)\n   * OSC 2; <data> ST (set window title)\n   *   Proxy to set window title. Icon name is not supported.\n   */\n  public setTitle(data: string): void {\n    this._terminal.handleTitle(data);\n  }\n\n  /**\n   * ESC E\n   * C1.NEL\n   *   DEC mnemonic: NEL (https://vt100.net/docs/vt510-rm/NEL)\n   *   Moves cursor to first position on next line.\n   */\n  public nextLine(): void {\n    this._bufferService.buffer.x = 0;\n    this.index();\n  }\n\n  /**\n   * ESC =\n   *   DEC mnemonic: DECKPAM (https://vt100.net/docs/vt510-rm/DECKPAM.html)\n   *   Enables the numeric keypad to send application sequences to the host.\n   */\n  public keypadApplicationMode(): void {\n    this._logService.debug('Serial port requested application keypad.');\n    this._terminal.applicationKeypad = true;\n    if (this._terminal.viewport) {\n      this._terminal.viewport.syncScrollArea();\n    }\n  }\n\n  /**\n   * ESC >\n   *   DEC mnemonic: DECKPNM (https://vt100.net/docs/vt510-rm/DECKPNM.html)\n   *   Enables the keypad to send numeric characters to the host.\n   */\n  public keypadNumericMode(): void {\n    this._logService.debug('Switching back to normal keypad.');\n    this._terminal.applicationKeypad = false;\n    if (this._terminal.viewport) {\n      this._terminal.viewport.syncScrollArea();\n    }\n  }\n\n  /**\n   * ESC % @\n   * ESC % G\n   *   Select default character set. UTF-8 is not supported (string are unicode anyways)\n   *   therefore ESC % G does the same.\n   */\n  public selectDefaultCharset(): void {\n    this._terminal.setgLevel(0);\n    this._terminal.setgCharset(0, DEFAULT_CHARSET); // US (default)\n  }\n\n  /**\n   * ESC ( C\n   *   Designate G0 Character Set, VT100, ISO 2022.\n   * ESC ) C\n   *   Designate G1 Character Set (ISO 2022, VT100).\n   * ESC * C\n   *   Designate G2 Character Set (ISO 2022, VT220).\n   * ESC + C\n   *   Designate G3 Character Set (ISO 2022, VT220).\n   * ESC - C\n   *   Designate G1 Character Set (VT300).\n   * ESC . C\n   *   Designate G2 Character Set (VT300).\n   * ESC / C\n   *   Designate G3 Character Set (VT300). C = A  -> ISO Latin-1 Supplemental. - Supported?\n   */\n  public selectCharset(collectAndFlag: string): void {\n    if (collectAndFlag.length !== 2) {\n      this.selectDefaultCharset();\n      return;\n    }\n    if (collectAndFlag[0] === '/') {\n      return;  // TODO: Is this supported?\n    }\n    this._terminal.setgCharset(GLEVEL[collectAndFlag[0]], CHARSETS[collectAndFlag[1]] || DEFAULT_CHARSET);\n    return;\n  }\n\n  /**\n   * ESC D\n   * C1.IND\n   *   DEC mnemonic: IND (https://vt100.net/docs/vt510-rm/IND.html)\n   *   Moves the cursor down one line in the same column.\n   */\n  public index(): void {\n    this._restrictCursor();\n    const buffer = this._bufferService.buffer;\n    this._bufferService.buffer.y++;\n    if (buffer.y === buffer.scrollBottom + 1) {\n      buffer.y--;\n      this._terminal.scroll();\n    } else if (buffer.y >= this._bufferService.rows) {\n      buffer.y = this._bufferService.rows - 1;\n    }\n    this._restrictCursor();\n  }\n\n  /**\n   * ESC H\n   * C1.HTS\n   *   DEC mnemonic: HTS (https://vt100.net/docs/vt510-rm/HTS.html)\n   *   Sets a horizontal tab stop at the column position indicated by\n   *   the value of the active column when the terminal receives an HTS.\n   */\n  public tabSet(): void {\n    this._bufferService.buffer.tabs[this._bufferService.buffer.x] = true;\n  }\n\n  /**\n   * ESC M\n   * C1.RI\n   *   DEC mnemonic: HTS\n   *   Moves the cursor up one line in the same column. If the cursor is at the top margin,\n   *   the page scrolls down.\n   */\n  public reverseIndex(): void {\n    this._restrictCursor();\n    const buffer = this._bufferService.buffer;\n    if (buffer.y === buffer.scrollTop) {\n      // possibly move the code below to term.reverseScroll();\n      // test: echo -ne '\\e[1;1H\\e[44m\\eM\\e[0m'\n      // blankLine(true) is xterm/linux behavior\n      const scrollRegionHeight = buffer.scrollBottom - buffer.scrollTop;\n      buffer.lines.shiftElements(buffer.y + buffer.ybase, scrollRegionHeight, 1);\n      buffer.lines.set(buffer.y + buffer.ybase, buffer.getBlankLine(this._terminal.eraseAttrData()));\n      this._dirtyRowService.markRangeDirty(buffer.scrollTop, buffer.scrollBottom);\n    } else {\n      buffer.y--;\n      this._restrictCursor(); // quickfix to not run out of bounds\n    }\n  }\n\n  /**\n   * ESC c\n   *   DEC mnemonic: RIS (https://vt100.net/docs/vt510-rm/RIS.html)\n   *   Reset to initial state.\n   */\n  public reset(): void {\n    this._parser.reset();\n    this._terminal.reset();  // TODO: save to move from terminal?\n  }\n\n  /**\n   * ESC n\n   * ESC o\n   * ESC |\n   * ESC }\n   * ESC ~\n   *   DEC mnemonic: LS (https://vt100.net/docs/vt510-rm/LS.html)\n   *   When you use a locking shift, the character set remains in GL or GR until\n   *   you use another locking shift. (partly supported)\n   */\n  public setgLevel(level: number): void {\n    this._terminal.setgLevel(level);  // TODO: save to move from terminal?\n  }\n\n  /**\n   * ESC # 8\n   *   DEC mnemonic: DECALN (https://vt100.net/docs/vt510-rm/DECALN.html)\n   *   This control function fills the complete screen area with\n   *   a test pattern (E) used for adjusting screen alignment.\n   *\n   * TODO: move DECALN into compat addon\n   */\n  public screenAlignmentPattern(): void {\n    // prepare cell data\n    const cell = new CellData();\n    cell.content = 1 << Content.WIDTH_SHIFT | 'E'.charCodeAt(0);\n    cell.fg = this._terminal.curAttrData.fg;\n    cell.bg = this._terminal.curAttrData.bg;\n\n    const buffer = this._bufferService.buffer;\n\n    this._setCursor(0, 0);\n    for (let yOffset = 0; yOffset < this._bufferService.rows; ++yOffset) {\n      const row = buffer.y + buffer.ybase + yOffset;\n      buffer.lines.get(row).fill(cell);\n      buffer.lines.get(row).isWrapped = false;\n    }\n    this._dirtyRowService.markAllDirty();\n    this._setCursor(0, 0);\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IParsingState, IDcsHandler, IEscapeSequenceParser, IParams, IOscHandler, IHandlerCollection, CsiHandlerType, OscFallbackHandlerType, IOscParser, EscHandlerType, IDcsParser, DcsFallbackHandlerType, IFunctionIdentifier, ExecuteFallbackHandlerType, CsiFallbackHandlerType, EscFallbackHandlerType, PrintHandlerType, PrintFallbackHandlerType, ExecuteHandlerType } from 'common/parser/Types';\nimport { ParserState, ParserAction } from 'common/parser/Constants';\nimport { Disposable } from 'common/Lifecycle';\nimport { IDisposable } from 'common/Types';\nimport { fill } from 'common/TypedArrayUtils';\nimport { Params } from 'common/parser/Params';\nimport { OscParser } from 'common/parser/OscParser';\nimport { DcsParser } from 'common/parser/DcsParser';\n\n/**\n * Table values are generated like this:\n *    index:  currentState << TableValue.INDEX_STATE_SHIFT | charCode\n *    value:  action << TableValue.TRANSITION_ACTION_SHIFT | nextState\n */\nconst enum TableAccess {\n  TRANSITION_ACTION_SHIFT = 4,\n  TRANSITION_STATE_MASK = 15,\n  INDEX_STATE_SHIFT = 8\n}\n\n/**\n * Transition table for EscapeSequenceParser.\n */\nexport class TransitionTable {\n  public table: Uint8Array;\n\n  constructor(length: number) {\n    this.table = new Uint8Array(length);\n  }\n\n  /**\n   * Set default transition.\n   * @param action default action\n   * @param next default next state\n   */\n  public setDefault(action: ParserAction, next: ParserState): void {\n    fill(this.table, action << TableAccess.TRANSITION_ACTION_SHIFT | next);\n  }\n\n  /**\n   * Add a transition to the transition table.\n   * @param code input character code\n   * @param state current parser state\n   * @param action parser action to be done\n   * @param next next parser state\n   */\n  public add(code: number, state: ParserState, action: ParserAction, next: ParserState): void {\n    this.table[state << TableAccess.INDEX_STATE_SHIFT | code] = action << TableAccess.TRANSITION_ACTION_SHIFT | next;\n  }\n\n  /**\n   * Add transitions for multiple input character codes.\n   * @param codes input character code array\n   * @param state current parser state\n   * @param action parser action to be done\n   * @param next next parser state\n   */\n  public addMany(codes: number[], state: ParserState, action: ParserAction, next: ParserState): void {\n    for (let i = 0; i < codes.length; i++) {\n      this.table[state << TableAccess.INDEX_STATE_SHIFT | codes[i]] = action << TableAccess.TRANSITION_ACTION_SHIFT | next;\n    }\n  }\n}\n\n\n// Pseudo-character placeholder for printable non-ascii characters (unicode).\nconst NON_ASCII_PRINTABLE = 0xA0;\n\n\n/**\n * VT500 compatible transition table.\n * Taken from https://vt100.net/emu/dec_ansi_parser.\n */\nexport const VT500_TRANSITION_TABLE = (function (): TransitionTable {\n  const table: TransitionTable = new TransitionTable(4095);\n\n  // range macro for byte\n  const BYTE_VALUES = 256;\n  const blueprint = Array.apply(null, Array(BYTE_VALUES)).map((unused: any, i: number) => i);\n  const r = (start: number, end: number) => blueprint.slice(start, end);\n\n  // Default definitions.\n  const PRINTABLES = r(0x20, 0x7f); // 0x20 (SP) included, 0x7F (DEL) excluded\n  const EXECUTABLES = r(0x00, 0x18);\n  EXECUTABLES.push(0x19);\n  EXECUTABLES.push.apply(EXECUTABLES, r(0x1c, 0x20));\n\n  const states: number[] = r(ParserState.GROUND, ParserState.DCS_PASSTHROUGH + 1);\n  let state: any;\n\n  // set default transition\n  table.setDefault(ParserAction.ERROR, ParserState.GROUND);\n  // printables\n  table.addMany(PRINTABLES, ParserState.GROUND, ParserAction.PRINT, ParserState.GROUND);\n  // global anywhere rules\n  for (state in states) {\n    table.addMany([0x18, 0x1a, 0x99, 0x9a], state, ParserAction.EXECUTE, ParserState.GROUND);\n    table.addMany(r(0x80, 0x90), state, ParserAction.EXECUTE, ParserState.GROUND);\n    table.addMany(r(0x90, 0x98), state, ParserAction.EXECUTE, ParserState.GROUND);\n    table.add(0x9c, state, ParserAction.IGNORE, ParserState.GROUND); // ST as terminator\n    table.add(0x1b, state, ParserAction.CLEAR, ParserState.ESCAPE);  // ESC\n    table.add(0x9d, state, ParserAction.OSC_START, ParserState.OSC_STRING);  // OSC\n    table.addMany([0x98, 0x9e, 0x9f], state, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n    table.add(0x9b, state, ParserAction.CLEAR, ParserState.CSI_ENTRY);  // CSI\n    table.add(0x90, state, ParserAction.CLEAR, ParserState.DCS_ENTRY);  // DCS\n  }\n  // rules for executables and 7f\n  table.addMany(EXECUTABLES, ParserState.GROUND, ParserAction.EXECUTE, ParserState.GROUND);\n  table.addMany(EXECUTABLES, ParserState.ESCAPE, ParserAction.EXECUTE, ParserState.ESCAPE);\n  table.add(0x7f, ParserState.ESCAPE, ParserAction.IGNORE, ParserState.ESCAPE);\n  table.addMany(EXECUTABLES, ParserState.OSC_STRING, ParserAction.IGNORE, ParserState.OSC_STRING);\n  table.addMany(EXECUTABLES, ParserState.CSI_ENTRY, ParserAction.EXECUTE, ParserState.CSI_ENTRY);\n  table.add(0x7f, ParserState.CSI_ENTRY, ParserAction.IGNORE, ParserState.CSI_ENTRY);\n  table.addMany(EXECUTABLES, ParserState.CSI_PARAM, ParserAction.EXECUTE, ParserState.CSI_PARAM);\n  table.add(0x7f, ParserState.CSI_PARAM, ParserAction.IGNORE, ParserState.CSI_PARAM);\n  table.addMany(EXECUTABLES, ParserState.CSI_IGNORE, ParserAction.EXECUTE, ParserState.CSI_IGNORE);\n  table.addMany(EXECUTABLES, ParserState.CSI_INTERMEDIATE, ParserAction.EXECUTE, ParserState.CSI_INTERMEDIATE);\n  table.add(0x7f, ParserState.CSI_INTERMEDIATE, ParserAction.IGNORE, ParserState.CSI_INTERMEDIATE);\n  table.addMany(EXECUTABLES, ParserState.ESCAPE_INTERMEDIATE, ParserAction.EXECUTE, ParserState.ESCAPE_INTERMEDIATE);\n  table.add(0x7f, ParserState.ESCAPE_INTERMEDIATE, ParserAction.IGNORE, ParserState.ESCAPE_INTERMEDIATE);\n  // osc\n  table.add(0x5d, ParserState.ESCAPE, ParserAction.OSC_START, ParserState.OSC_STRING);\n  table.addMany(PRINTABLES, ParserState.OSC_STRING, ParserAction.OSC_PUT, ParserState.OSC_STRING);\n  table.add(0x7f, ParserState.OSC_STRING, ParserAction.OSC_PUT, ParserState.OSC_STRING);\n  table.addMany([0x9c, 0x1b, 0x18, 0x1a, 0x07], ParserState.OSC_STRING, ParserAction.OSC_END, ParserState.GROUND);\n  table.addMany(r(0x1c, 0x20), ParserState.OSC_STRING, ParserAction.IGNORE, ParserState.OSC_STRING);\n  // sos/pm/apc does nothing\n  table.addMany([0x58, 0x5e, 0x5f], ParserState.ESCAPE, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  table.addMany(PRINTABLES, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  table.addMany(EXECUTABLES, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  table.add(0x9c, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.GROUND);\n  table.add(0x7f, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  // csi entries\n  table.add(0x5b, ParserState.ESCAPE, ParserAction.CLEAR, ParserState.CSI_ENTRY);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_ENTRY, ParserAction.CSI_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x30, 0x3c), ParserState.CSI_ENTRY, ParserAction.PARAM, ParserState.CSI_PARAM);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.CSI_ENTRY, ParserAction.COLLECT, ParserState.CSI_PARAM);\n  table.addMany(r(0x30, 0x3c), ParserState.CSI_PARAM, ParserAction.PARAM, ParserState.CSI_PARAM);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_PARAM, ParserAction.CSI_DISPATCH, ParserState.GROUND);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.CSI_PARAM, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.addMany(r(0x20, 0x40), ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.add(0x7f, ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.GROUND);\n  table.addMany(r(0x20, 0x30), ParserState.CSI_ENTRY, ParserAction.COLLECT, ParserState.CSI_INTERMEDIATE);\n  table.addMany(r(0x20, 0x30), ParserState.CSI_INTERMEDIATE, ParserAction.COLLECT, ParserState.CSI_INTERMEDIATE);\n  table.addMany(r(0x30, 0x40), ParserState.CSI_INTERMEDIATE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_INTERMEDIATE, ParserAction.CSI_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x20, 0x30), ParserState.CSI_PARAM, ParserAction.COLLECT, ParserState.CSI_INTERMEDIATE);\n  // esc_intermediate\n  table.addMany(r(0x20, 0x30), ParserState.ESCAPE, ParserAction.COLLECT, ParserState.ESCAPE_INTERMEDIATE);\n  table.addMany(r(0x20, 0x30), ParserState.ESCAPE_INTERMEDIATE, ParserAction.COLLECT, ParserState.ESCAPE_INTERMEDIATE);\n  table.addMany(r(0x30, 0x7f), ParserState.ESCAPE_INTERMEDIATE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x30, 0x50), ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x51, 0x58), ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany([0x59, 0x5a, 0x5c], ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x60, 0x7f), ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  // dcs entry\n  table.add(0x50, ParserState.ESCAPE, ParserAction.CLEAR, ParserState.DCS_ENTRY);\n  table.addMany(EXECUTABLES, ParserState.DCS_ENTRY, ParserAction.IGNORE, ParserState.DCS_ENTRY);\n  table.add(0x7f, ParserState.DCS_ENTRY, ParserAction.IGNORE, ParserState.DCS_ENTRY);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_ENTRY, ParserAction.IGNORE, ParserState.DCS_ENTRY);\n  table.addMany(r(0x20, 0x30), ParserState.DCS_ENTRY, ParserAction.COLLECT, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x30, 0x3c), ParserState.DCS_ENTRY, ParserAction.PARAM, ParserState.DCS_PARAM);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.DCS_ENTRY, ParserAction.COLLECT, ParserState.DCS_PARAM);\n  table.addMany(EXECUTABLES, ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x20, 0x80), ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(EXECUTABLES, ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_PARAM);\n  table.add(0x7f, ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_PARAM);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_PARAM);\n  table.addMany(r(0x30, 0x3c), ParserState.DCS_PARAM, ParserAction.PARAM, ParserState.DCS_PARAM);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x20, 0x30), ParserState.DCS_PARAM, ParserAction.COLLECT, ParserState.DCS_INTERMEDIATE);\n  table.addMany(EXECUTABLES, ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_INTERMEDIATE);\n  table.add(0x7f, ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x20, 0x30), ParserState.DCS_INTERMEDIATE, ParserAction.COLLECT, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x30, 0x40), ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x40, 0x7f), ParserState.DCS_INTERMEDIATE, ParserAction.DCS_HOOK, ParserState.DCS_PASSTHROUGH);\n  table.addMany(r(0x40, 0x7f), ParserState.DCS_PARAM, ParserAction.DCS_HOOK, ParserState.DCS_PASSTHROUGH);\n  table.addMany(r(0x40, 0x7f), ParserState.DCS_ENTRY, ParserAction.DCS_HOOK, ParserState.DCS_PASSTHROUGH);\n  table.addMany(EXECUTABLES, ParserState.DCS_PASSTHROUGH, ParserAction.DCS_PUT, ParserState.DCS_PASSTHROUGH);\n  table.addMany(PRINTABLES, ParserState.DCS_PASSTHROUGH, ParserAction.DCS_PUT, ParserState.DCS_PASSTHROUGH);\n  table.add(0x7f, ParserState.DCS_PASSTHROUGH, ParserAction.IGNORE, ParserState.DCS_PASSTHROUGH);\n  table.addMany([0x1b, 0x9c, 0x18, 0x1a], ParserState.DCS_PASSTHROUGH, ParserAction.DCS_UNHOOK, ParserState.GROUND);\n  // special handling of unicode chars\n  table.add(NON_ASCII_PRINTABLE, ParserState.GROUND, ParserAction.PRINT, ParserState.GROUND);\n  table.add(NON_ASCII_PRINTABLE, ParserState.OSC_STRING, ParserAction.OSC_PUT, ParserState.OSC_STRING);\n  table.add(NON_ASCII_PRINTABLE, ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.add(NON_ASCII_PRINTABLE, ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.add(NON_ASCII_PRINTABLE, ParserState.DCS_PASSTHROUGH, ParserAction.DCS_PUT, ParserState.DCS_PASSTHROUGH);\n  return table;\n})();\n\n\n/**\n * EscapeSequenceParser.\n * This class implements the ANSI/DEC compatible parser described by\n * Paul Williams (https://vt100.net/emu/dec_ansi_parser).\n *\n * To implement custom ANSI compliant escape sequences it is not needed to\n * alter this parser, instead consider registering a custom handler.\n * For non ANSI compliant sequences change the transition table with\n * the optional `transitions` constructor argument and\n * reimplement the `parse` method.\n *\n * This parser is currently hardcoded to operate in ZDM (Zero Default Mode)\n * as suggested by the original parser, thus empty parameters are set to 0.\n * This this is not in line with the latest ECMA-48 specification\n * (ZDM was part of the early specs and got completely removed later on).\n *\n * Other than the original parser from vt100.net this parser supports\n * sub parameters in digital parameters separated by colons. Empty sub parameters\n * are set to -1 (no ZDM for sub parameters).\n *\n * About prefix and intermediate bytes:\n * This parser follows the assumptions of the vt100.net parser with these restrictions:\n * - only one prefix byte is allowed as first parameter byte, byte range 0x3c .. 0x3f\n * - max. two intermediates are respected, byte range 0x20 .. 0x2f\n * Note that this is not in line with ECMA-48 which does not limit either of those.\n * Furthermore ECMA-48 allows the prefix byte range at any param byte position. Currently\n * there are no known sequences that follow the broader definition of the specification.\n *\n * TODO: implement error recovery hook via error handler return values\n */\nexport class EscapeSequenceParser extends Disposable implements IEscapeSequenceParser {\n  public initialState: number;\n  public currentState: number;\n  public precedingCodepoint: number;\n\n  // buffers over several parse calls\n  protected _params: Params;\n  protected _collect: number;\n\n  // handler lookup containers\n  protected _printHandler: PrintHandlerType;\n  protected _executeHandlers: {[flag: number]: ExecuteHandlerType};\n  protected _csiHandlers: IHandlerCollection<CsiHandlerType>;\n  protected _escHandlers: IHandlerCollection<EscHandlerType>;\n  protected _oscParser: IOscParser;\n  protected _dcsParser: IDcsParser;\n  protected _errorHandler: (state: IParsingState) => IParsingState;\n\n  // fallback handlers\n  protected _printHandlerFb: PrintFallbackHandlerType;\n  protected _executeHandlerFb: ExecuteFallbackHandlerType;\n  protected _csiHandlerFb: CsiFallbackHandlerType;\n  protected _escHandlerFb: EscFallbackHandlerType;\n  protected _errorHandlerFb: (state: IParsingState) => IParsingState;\n\n  constructor(readonly TRANSITIONS: TransitionTable = VT500_TRANSITION_TABLE) {\n    super();\n\n    this.initialState = ParserState.GROUND;\n    this.currentState = this.initialState;\n    this._params = new Params(); // defaults to 32 storable params/subparams\n    this._params.addParam(0);    // ZDM\n    this._collect = 0;\n    this.precedingCodepoint = 0;\n\n    // set default fallback handlers and handler lookup containers\n    this._printHandlerFb = (data, start, end): void => { };\n    this._executeHandlerFb = (code: number): void => { };\n    this._csiHandlerFb = (ident: number, params: IParams): void => { };\n    this._escHandlerFb = (ident: number): void => { };\n    this._errorHandlerFb = (state: IParsingState): IParsingState => state;\n    this._printHandler = this._printHandlerFb;\n    this._executeHandlers = Object.create(null);\n    this._csiHandlers = Object.create(null);\n    this._escHandlers = Object.create(null);\n    this._oscParser = new OscParser();\n    this._dcsParser = new DcsParser();\n    this._errorHandler = this._errorHandlerFb;\n\n    // swallow 7bit ST (ESC+\\)\n    this.setEscHandler({final: '\\\\'}, () => {});\n  }\n\n  private _identifier(id: IFunctionIdentifier, finalRange: number[] = [0x40, 0x7e]): number {\n    let res = 0;\n    if (id.prefix) {\n      if (id.prefix.length > 1) {\n        throw new Error('only one byte as prefix supported');\n      }\n      res = id.prefix.charCodeAt(0);\n      if (res && 0x3c > res || res > 0x3f) {\n        throw new Error('prefix must be in range 0x3c .. 0x3f');\n      }\n    }\n    if (id.intermediates) {\n      if (id.intermediates.length > 2) {\n        throw new Error('only two bytes as intermediates are supported');\n      }\n      for (let i = 0; i < id.intermediates.length; ++i) {\n        const intermediate = id.intermediates.charCodeAt(i);\n        if (0x20 > intermediate || intermediate > 0x2f) {\n          throw new Error('intermediate must be in range 0x20 .. 0x2f');\n        }\n        res <<= 8;\n        res |= intermediate;\n      }\n    }\n    if (id.final.length !== 1) {\n      throw new Error('final must be a single byte');\n    }\n    const finalCode = id.final.charCodeAt(0);\n    if (finalRange[0] > finalCode || finalCode > finalRange[1]) {\n      throw new Error(`final must be in range ${finalRange[0]} .. ${finalRange[1]}`);\n    }\n    res <<= 8;\n    res |= finalCode;\n\n    return res;\n  }\n\n  public identToString(ident: number): string {\n    const res: string[] = [];\n    while (ident) {\n      res.push(String.fromCharCode(ident & 0xFF));\n      ident >>= 8;\n    }\n    return res.reverse().join('');\n  }\n\n  public dispose(): void {\n    this._csiHandlers = Object.create(null);\n    this._executeHandlers = Object.create(null);\n    this._escHandlers = Object.create(null);\n    this._oscParser.dispose();\n    this._dcsParser.dispose();\n  }\n\n  public setPrintHandler(handler: PrintHandlerType): void {\n    this._printHandler = handler;\n  }\n  public clearPrintHandler(): void {\n    this._printHandler = this._printHandlerFb;\n  }\n\n  public addEscHandler(id: IFunctionIdentifier, handler: EscHandlerType): IDisposable {\n    const ident = this._identifier(id, [0x30, 0x7e]);\n    if (this._escHandlers[ident] === undefined) {\n      this._escHandlers[ident] = [];\n    }\n    const handlerList = this._escHandlers[ident];\n    handlerList.push(handler);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(handler);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n  public setEscHandler(id: IFunctionIdentifier, handler: EscHandlerType): void {\n    this._escHandlers[this._identifier(id, [0x30, 0x7e])] = [handler];\n  }\n  public clearEscHandler(id: IFunctionIdentifier): void {\n    if (this._escHandlers[this._identifier(id, [0x30, 0x7e])]) delete this._escHandlers[this._identifier(id, [0x30, 0x7e])];\n  }\n  public setEscHandlerFallback(handler: EscFallbackHandlerType): void {\n    this._escHandlerFb = handler;\n  }\n\n  public setExecuteHandler(flag: string, handler: ExecuteHandlerType): void {\n    this._executeHandlers[flag.charCodeAt(0)] = handler;\n  }\n  public clearExecuteHandler(flag: string): void {\n    if (this._executeHandlers[flag.charCodeAt(0)]) delete this._executeHandlers[flag.charCodeAt(0)];\n  }\n  public setExecuteHandlerFallback(handler: ExecuteFallbackHandlerType): void {\n    this._executeHandlerFb = handler;\n  }\n\n  public addCsiHandler(id: IFunctionIdentifier, handler: CsiHandlerType): IDisposable {\n    const ident = this._identifier(id);\n    if (this._csiHandlers[ident] === undefined) {\n      this._csiHandlers[ident] = [];\n    }\n    const handlerList = this._csiHandlers[ident];\n    handlerList.push(handler);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(handler);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n  public setCsiHandler(id: IFunctionIdentifier, handler: CsiHandlerType): void {\n    this._csiHandlers[this._identifier(id)] = [handler];\n  }\n  public clearCsiHandler(id: IFunctionIdentifier): void {\n    if (this._csiHandlers[this._identifier(id)]) delete this._csiHandlers[this._identifier(id)];\n  }\n  public setCsiHandlerFallback(callback: (ident: number, params: IParams) => void): void {\n    this._csiHandlerFb = callback;\n  }\n\n  public addDcsHandler(id: IFunctionIdentifier, handler: IDcsHandler): IDisposable {\n    return this._dcsParser.addHandler(this._identifier(id), handler);\n  }\n  public setDcsHandler(id: IFunctionIdentifier, handler: IDcsHandler): void {\n    this._dcsParser.setHandler(this._identifier(id), handler);\n  }\n  public clearDcsHandler(id: IFunctionIdentifier): void {\n    this._dcsParser.clearHandler(this._identifier(id));\n  }\n  public setDcsHandlerFallback(handler: DcsFallbackHandlerType): void {\n    this._dcsParser.setHandlerFallback(handler);\n  }\n\n  public addOscHandler(ident: number, handler: IOscHandler): IDisposable {\n    return this._oscParser.addHandler(ident, handler);\n  }\n  public setOscHandler(ident: number, handler: IOscHandler): void {\n    this._oscParser.setHandler(ident, handler);\n  }\n  public clearOscHandler(ident: number): void {\n    this._oscParser.clearHandler(ident);\n  }\n  public setOscHandlerFallback(handler: OscFallbackHandlerType): void {\n    this._oscParser.setHandlerFallback(handler);\n  }\n\n  public setErrorHandler(callback: (state: IParsingState) => IParsingState): void {\n    this._errorHandler = callback;\n  }\n  public clearErrorHandler(): void {\n    this._errorHandler = this._errorHandlerFb;\n  }\n\n  public reset(): void {\n    this.currentState = this.initialState;\n    this._oscParser.reset();\n    this._dcsParser.reset();\n    this._params.reset();\n    this._params.addParam(0); // ZDM\n    this._collect = 0;\n    this.precedingCodepoint = 0;\n  }\n\n\n\n  /**\n   * Parse UTF32 codepoints in `data` up to `length`.\n   *\n   * Note: For several actions with high data load the parsing is optimized\n   * by using local read ahead loops with hardcoded conditions to\n   * avoid costly table lookups. Make sure that any change of table values\n   * will be reflected in the loop conditions as well and vice versa.\n   * Affected states/actions:\n   * - GROUND:PRINT\n   * - CSI_PARAM:PARAM\n   * - DCS_PARAM:PARAM\n   * - OSC_STRING:OSC_PUT\n   * - DCS_PASSTHROUGH:DCS_PUT\n   */\n  public parse(data: Uint32Array, length: number): void {\n    let code = 0;\n    let transition = 0;\n    let currentState = this.currentState;\n    const osc = this._oscParser;\n    const dcs = this._dcsParser;\n    let collect = this._collect;\n    const params = this._params;\n    const table: Uint8Array = this.TRANSITIONS.table;\n\n    // process input string\n    for (let i = 0; i < length; ++i) {\n      code = data[i];\n\n      // normal transition & action lookup\n      transition = table[currentState << TableAccess.INDEX_STATE_SHIFT | (code < 0xa0 ? code : NON_ASCII_PRINTABLE)];\n      switch (transition >> TableAccess.TRANSITION_ACTION_SHIFT) {\n        case ParserAction.PRINT:\n          // read ahead with loop unrolling\n          // Note: 0x20 (SP) is included, 0x7F (DEL) is excluded\n          for (let j = i + 1; ; ++j) {\n            if (j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n            if (++j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n            if (++j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n            if (++j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n          }\n          break;\n        case ParserAction.EXECUTE:\n          if (this._executeHandlers[code]) this._executeHandlers[code]();\n          else this._executeHandlerFb(code);\n          this.precedingCodepoint = 0;\n          break;\n        case ParserAction.IGNORE:\n          break;\n        case ParserAction.ERROR:\n          const inject: IParsingState = this._errorHandler(\n            {\n              position: i,\n              code,\n              currentState,\n              collect,\n              params,\n              abort: false\n            });\n          if (inject.abort) return;\n          // inject values: currently not implemented\n          break;\n        case ParserAction.CSI_DISPATCH:\n          // Trigger CSI Handler\n          const handlers = this._csiHandlers[collect << 8 | code];\n          let j = handlers ? handlers.length - 1 : -1;\n          for (; j >= 0; j--) {\n            // undefined or true means success and to stop bubbling\n            if (handlers[j](params) !== false) {\n              break;\n            }\n          }\n          if (j < 0) {\n            this._csiHandlerFb(collect << 8 | code, params);\n          }\n          this.precedingCodepoint = 0;\n          break;\n        case ParserAction.PARAM:\n          // inner loop: digits (0x30 - 0x39) and ; (0x3b) and : (0x3a)\n          let isSub = false;\n          do {\n            switch (code) {\n              case 0x3b:\n                params.addParam(0);  // ZDM\n                isSub = false;\n                break;\n              case 0x3a:\n                params.addSubParam(-1);\n                isSub = true;\n                break;\n              default:  // 0x30 - 0x39\n                if (isSub) params.addSubParamDigit(code - 48);\n                else params.addParamDigit(code - 48);\n            }\n          } while (++i < length && (code = data[i]) > 0x2f && code < 0x3c);\n          i--;\n          break;\n        case ParserAction.COLLECT:\n          collect |= code;\n          break;\n        case ParserAction.ESC_DISPATCH:\n          const handlersEsc = this._escHandlers[collect << 8 | code];\n          let jj = handlersEsc ? handlersEsc.length - 1 : -1;\n          for (; jj >= 0; jj--) {\n            // undefined or true means success and to stop bubbling\n            if (handlersEsc[jj]() !== false) {\n              break;\n            }\n          }\n          if (jj < 0) {\n            this._escHandlerFb(collect << 8 | code);\n          }\n          this.precedingCodepoint = 0;\n          break;\n        case ParserAction.CLEAR:\n          params.reset();\n          params.addParam(0); // ZDM\n          collect = 0;\n          break;\n        case ParserAction.DCS_HOOK:\n          dcs.hook(collect << 8 | code, params);\n          break;\n        case ParserAction.DCS_PUT:\n          // inner loop - exit DCS_PUT: 0x18, 0x1a, 0x1b, 0x7f, 0x80 - 0x9f\n          // unhook triggered by: 0x1b, 0x9c (success) and 0x18, 0x1a (abort)\n          for (let j = i + 1; ; ++j) {\n            if (j >= length || (code = data[j]) === 0x18 || code === 0x1a || code === 0x1b || (code > 0x7f && code < NON_ASCII_PRINTABLE)) {\n              dcs.put(data, i, j);\n              i = j - 1;\n              break;\n            }\n          }\n          break;\n        case ParserAction.DCS_UNHOOK:\n          dcs.unhook(code !== 0x18 && code !== 0x1a);\n          if (code === 0x1b) transition |= ParserState.ESCAPE;\n          params.reset();\n          params.addParam(0); // ZDM\n          collect = 0;\n          this.precedingCodepoint = 0;\n          break;\n        case ParserAction.OSC_START:\n          osc.start();\n          break;\n        case ParserAction.OSC_PUT:\n          // inner loop: 0x20 (SP) included, 0x7F (DEL) included\n          for (let j = i + 1; ; j++) {\n            if (j >= length || (code = data[j]) < 0x20 || (code > 0x7f && code <= 0x9f)) {\n              osc.put(data, i, j);\n              i = j - 1;\n              break;\n            }\n          }\n          break;\n        case ParserAction.OSC_END:\n          osc.end(code !== 0x18 && code !== 0x1a);\n          if (code === 0x1b) transition |= ParserState.ESCAPE;\n          params.reset();\n          params.addParam(0); // ZDM\n          collect = 0;\n          this.precedingCodepoint = 0;\n          break;\n      }\n      currentState = transition & TableAccess.TRANSITION_STATE_MASK;\n    }\n\n    // save collected intermediates\n    this._collect = collect;\n\n    // save state\n    this.currentState = currentState;\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { TextRenderLayer } from '../browser/renderer/TextRenderLayer';\nimport { SelectionRenderLayer } from '../browser/renderer/SelectionRenderLayer';\nimport { CursorRenderLayer } from './CursorRenderLayer';\nimport { IRenderLayer, IRenderer, IRenderDimensions, CharacterJoinerHandler, ICharacterJoinerRegistry } from 'browser/renderer/Types';\nimport { ITerminal } from '../Types';\nimport { LinkRenderLayer } from '../browser/renderer/LinkRenderLayer';\nimport { CharacterJoinerRegistry } from 'browser/renderer/CharacterJoinerRegistry';\nimport { Disposable } from 'common/Lifecycle';\nimport { IColorSet } from 'browser/Types';\nimport { ICharSizeService } from 'browser/services/Services';\nimport { IBufferService, IOptionsService } from 'common/services/Services';\nimport { removeTerminalFromCache } from 'browser/renderer/atlas/CharAtlasCache';\n\nlet nextRendererId = 1;\n\nexport class Renderer extends Disposable implements IRenderer {\n  private _id = nextRendererId++;\n\n  private _renderLayers: IRenderLayer[];\n  private _devicePixelRatio: number;\n  private _characterJoinerRegistry: ICharacterJoinerRegistry;\n\n  public dimensions: IRenderDimensions;\n\n  constructor(\n    private _colors: IColorSet,\n    private readonly _terminal: ITerminal,\n    readonly bufferService: IBufferService,\n    private readonly _charSizeService: ICharSizeService,\n    readonly optionsService: IOptionsService\n  ) {\n    super();\n    const allowTransparency = this._terminal.options.allowTransparency;\n    this._characterJoinerRegistry = new CharacterJoinerRegistry(bufferService);\n\n    this._renderLayers = [\n      new TextRenderLayer(this._terminal.screenElement, 0, this._colors, this._characterJoinerRegistry, allowTransparency, this._id, bufferService, optionsService),\n      new SelectionRenderLayer(this._terminal.screenElement, 1, this._colors, this._id, bufferService, optionsService),\n      new LinkRenderLayer(this._terminal.screenElement, 2, this._colors, this._id, this._terminal.linkifier, bufferService, optionsService),\n      new CursorRenderLayer(this._terminal.screenElement, 3, this._colors, this._terminal, this._id, bufferService, optionsService)\n    ];\n    this.dimensions = {\n      scaledCharWidth: null,\n      scaledCharHeight: null,\n      scaledCellWidth: null,\n      scaledCellHeight: null,\n      scaledCharLeft: null,\n      scaledCharTop: null,\n      scaledCanvasWidth: null,\n      scaledCanvasHeight: null,\n      canvasWidth: null,\n      canvasHeight: null,\n      actualCellWidth: null,\n      actualCellHeight: null\n    };\n    this._devicePixelRatio = window.devicePixelRatio;\n    this._updateDimensions();\n    this.onOptionsChanged();\n  }\n\n  public dispose(): void {\n    super.dispose();\n    this._renderLayers.forEach(l => l.dispose());\n    removeTerminalFromCache(this._id);\n  }\n\n  public onDevicePixelRatioChange(): void {\n    // If the device pixel ratio changed, the char atlas needs to be regenerated\n    // and the terminal needs to refreshed\n    if (this._devicePixelRatio !== window.devicePixelRatio) {\n      this._devicePixelRatio = window.devicePixelRatio;\n      this.onResize(this._terminal.cols, this._terminal.rows);\n    }\n  }\n\n  public setColors(colors: IColorSet): void {\n    this._colors = colors;\n\n    // Clear layers and force a full render\n    this._renderLayers.forEach(l => {\n      l.setColors(this._colors);\n      l.reset();\n    });\n  }\n\n  public onResize(cols: number, rows: number): void {\n    // Update character and canvas dimensions\n    this._updateDimensions();\n\n    // Resize all render layers\n    this._renderLayers.forEach(l => l.resize(this.dimensions));\n\n    // Resize the screen\n    this._terminal.screenElement.style.width = `${this.dimensions.canvasWidth}px`;\n    this._terminal.screenElement.style.height = `${this.dimensions.canvasHeight}px`;\n  }\n\n  public onCharSizeChanged(): void {\n    this.onResize(this._terminal.cols, this._terminal.rows);\n  }\n\n  public onBlur(): void {\n    this._runOperation(l => l.onBlur());\n  }\n\n  public onFocus(): void {\n    this._runOperation(l => l.onFocus());\n  }\n\n  public onSelectionChanged(start: [number, number], end: [number, number], columnSelectMode: boolean = false): void {\n    this._runOperation(l => l.onSelectionChanged(start, end, columnSelectMode));\n  }\n\n  public onCursorMove(): void {\n    this._runOperation(l => l.onCursorMove());\n  }\n\n  public onOptionsChanged(): void {\n    this._runOperation(l => l.onOptionsChanged());\n  }\n\n  public clear(): void {\n    this._runOperation(l => l.reset());\n  }\n\n  private _runOperation(operation: (layer: IRenderLayer) => void): void {\n    this._renderLayers.forEach(l => operation(l));\n  }\n\n  /**\n   * Performs the refresh loop callback, calling refresh only if a refresh is\n   * necessary before queueing up the next one.\n   */\n  public renderRows(start: number, end: number): void {\n    this._renderLayers.forEach(l => l.onGridChanged(start, end));\n  }\n\n  /**\n   * Recalculates the character and canvas dimensions.\n   */\n  private _updateDimensions(): void {\n    if (!this._charSizeService.hasValidSize) {\n      return;\n    }\n\n    // Calculate the scaled character width. Width is floored as it must be\n    // drawn to an integer grid in order for the CharAtlas \"stamps\" to not be\n    // blurry. When text is drawn to the grid not using the CharAtlas, it is\n    // clipped to ensure there is no overlap with the next cell.\n    this.dimensions.scaledCharWidth = Math.floor(this._charSizeService.width * window.devicePixelRatio);\n\n    // Calculate the scaled character height. Height is ceiled in case\n    // devicePixelRatio is a floating point number in order to ensure there is\n    // enough space to draw the character to the cell.\n    this.dimensions.scaledCharHeight = Math.ceil(this._charSizeService.height * window.devicePixelRatio);\n\n    // Calculate the scaled cell height, if lineHeight is not 1 then the value\n    // will be floored because since lineHeight can never be lower then 1, there\n    // is a guarentee that the scaled line height will always be larger than\n    // scaled char height.\n    this.dimensions.scaledCellHeight = Math.floor(this.dimensions.scaledCharHeight * this._terminal.options.lineHeight);\n\n    // Calculate the y coordinate within a cell that text should draw from in\n    // order to draw in the center of a cell.\n    this.dimensions.scaledCharTop = this._terminal.options.lineHeight === 1 ? 0 : Math.round((this.dimensions.scaledCellHeight - this.dimensions.scaledCharHeight) / 2);\n\n    // Calculate the scaled cell width, taking the letterSpacing into account.\n    this.dimensions.scaledCellWidth = this.dimensions.scaledCharWidth + Math.round(this._terminal.options.letterSpacing);\n\n    // Calculate the x coordinate with a cell that text should draw from in\n    // order to draw in the center of a cell.\n    this.dimensions.scaledCharLeft = Math.floor(this._terminal.options.letterSpacing / 2);\n\n    // Recalculate the canvas dimensions; scaled* define the actual number of\n    // pixel in the canvas\n    this.dimensions.scaledCanvasHeight = this._terminal.rows * this.dimensions.scaledCellHeight;\n    this.dimensions.scaledCanvasWidth = this._terminal.cols * this.dimensions.scaledCellWidth;\n\n    // The the size of the canvas on the page. It's very important that this\n    // rounds to nearest integer and not ceils as browsers often set\n    // window.devicePixelRatio as something like 1.100000023841858, when it's\n    // actually 1.1. Ceiling causes blurriness as the backing canvas image is 1\n    // pixel too large for the canvas element size.\n    this.dimensions.canvasHeight = Math.round(this.dimensions.scaledCanvasHeight / window.devicePixelRatio);\n    this.dimensions.canvasWidth = Math.round(this.dimensions.scaledCanvasWidth / window.devicePixelRatio);\n\n    // Get the _actual_ dimensions of an individual cell. This needs to be\n    // derived from the canvasWidth/Height calculated above which takes into\n    // account window.devicePixelRatio. ICharSizeService.width/height by itself\n    // is insufficient when the page is not at 100% zoom level as it's measured\n    // in CSS pixels, but the actual char size on the canvas can differ.\n    this.dimensions.actualCellHeight = this.dimensions.canvasHeight / this._terminal.rows;\n    this.dimensions.actualCellWidth = this.dimensions.canvasWidth / this._terminal.cols;\n  }\n\n  public registerCharacterJoiner(handler: CharacterJoinerHandler): number {\n    return this._characterJoinerRegistry.registerCharacterJoiner(handler);\n  }\n\n  public deregisterCharacterJoiner(joinerId: number): boolean {\n    return this._characterJoinerRegistry.deregisterCharacterJoiner(joinerId);\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharacterJoinerRegistry, IRenderDimensions } from 'browser/renderer/Types';\nimport { CharData, ICellData } from 'common/Types';\nimport { GridCache } from 'browser/renderer/GridCache';\nimport { BaseRenderLayer } from 'browser/renderer/BaseRenderLayer';\nimport { AttributeData } from 'common/buffer/AttributeData';\nimport { NULL_CELL_CODE, Content } from 'common/buffer/Constants';\nimport { JoinedCellData } from 'browser/renderer/CharacterJoinerRegistry';\nimport { IColorSet } from 'browser/Types';\nimport { CellData } from 'common/buffer/CellData';\nimport { IOptionsService, IBufferService } from 'common/services/Services';\n\n/**\n * This CharData looks like a null character, which will forc a clear and render\n * when the character changes (a regular space ' ' character may not as it's\n * drawn state is a cleared cell).\n */\n// const OVERLAP_OWNED_CHAR_DATA: CharData = [null, '', 0, -1];\n\nexport class TextRenderLayer extends BaseRenderLayer {\n  private _state: GridCache<CharData>;\n  private _characterWidth: number = 0;\n  private _characterFont: string = '';\n  private _characterOverlapCache: { [key: string]: boolean } = {};\n  private _characterJoinerRegistry: ICharacterJoinerRegistry;\n  private _workCell = new CellData();\n\n  constructor(\n    container: HTMLElement,\n    zIndex: number,\n    colors: IColorSet,\n    characterJoinerRegistry: ICharacterJoinerRegistry,\n    alpha: boolean,\n    rendererId: number,\n    readonly bufferService: IBufferService,\n    readonly optionsService: IOptionsService\n  ) {\n    super(container, 'text', zIndex, alpha, colors, rendererId, bufferService, optionsService);\n    this._state = new GridCache<CharData>();\n    this._characterJoinerRegistry = characterJoinerRegistry;\n  }\n\n  public resize(dim: IRenderDimensions): void {\n    super.resize(dim);\n\n    // Clear the character width cache if the font or width has changed\n    const terminalFont = this._getFont(false, false);\n    if (this._characterWidth !== dim.scaledCharWidth || this._characterFont !== terminalFont) {\n      this._characterWidth = dim.scaledCharWidth;\n      this._characterFont = terminalFont;\n      this._characterOverlapCache = {};\n    }\n    // Resizing the canvas discards the contents of the canvas so clear state\n    this._state.clear();\n    this._state.resize(this._bufferService.cols, this._bufferService.rows);\n  }\n\n  public reset(): void {\n    this._state.clear();\n    this._clearAll();\n  }\n\n  private _forEachCell(\n    firstRow: number,\n    lastRow: number,\n    joinerRegistry: ICharacterJoinerRegistry | null,\n    callback: (\n      cell: ICellData,\n      x: number,\n      y: number\n    ) => void\n  ): void {\n    for (let y = firstRow; y <= lastRow; y++) {\n      const row = y + this._bufferService.buffer.ydisp;\n      const line = this._bufferService.buffer.lines.get(row);\n      const joinedRanges = joinerRegistry ? joinerRegistry.getJoinedCharacters(row) : [];\n      for (let x = 0; x < this._bufferService.cols; x++) {\n        line!.loadCell(x, this._workCell);\n        let cell = this._workCell;\n\n        // If true, indicates that the current character(s) to draw were joined.\n        let isJoined = false;\n        let lastCharX = x;\n\n        // The character to the left is a wide character, drawing is owned by\n        // the char at x-1\n        if (cell.getWidth() === 0) {\n          continue;\n        }\n\n        // Process any joined character ranges as needed. Because of how the\n        // ranges are produced, we know that they are valid for the characters\n        // and attributes of our input.\n        if (joinedRanges.length > 0 && x === joinedRanges[0][0]) {\n          isJoined = true;\n          const range = joinedRanges.shift()!;\n\n          // We already know the exact start and end column of the joined range,\n          // so we get the string and width representing it directly\n\n          cell = new JoinedCellData(\n            this._workCell,\n            line!.translateToString(true, range[0], range[1]),\n            range[1] - range[0]\n          );\n\n          // Skip over the cells occupied by this range in the loop\n          lastCharX = range[1] - 1;\n        }\n\n        // If the character is an overlapping char and the character to the\n        // right is a space, take ownership of the cell to the right. We skip\n        // this check for joined characters because their rendering likely won't\n        // yield the same result as rendering the last character individually.\n        if (!isJoined && this._isOverlapping(cell)) {\n          // If the character is overlapping, we want to force a re-render on every\n          // frame. This is specifically to work around the case where two\n          // overlaping chars `a` and `b` are adjacent, the cursor is moved to b and a\n          // space is added. Without this, the first half of `b` would never\n          // get removed, and `a` would not re-render because it thinks it's\n          // already in the correct state.\n          // this._state.cache[x][y] = OVERLAP_OWNED_CHAR_DATA;\n          if (lastCharX < line!.length - 1 && line!.getCodePoint(lastCharX + 1) === NULL_CELL_CODE) {\n            // patch width to 2\n            cell.content &= ~Content.WIDTH_MASK;\n            cell.content |= 2 << Content.WIDTH_SHIFT;\n            // this._clearChar(x + 1, y);\n            // The overlapping char's char data will force a clear and render when the\n            // overlapping char is no longer to the left of the character and also when\n            // the space changes to another character.\n            // this._state.cache[x + 1][y] = OVERLAP_OWNED_CHAR_DATA;\n          }\n        }\n\n        callback(\n          cell,\n          x,\n          y\n        );\n\n        x = lastCharX;\n      }\n    }\n  }\n\n  /**\n   * Draws the background for a specified range of columns. Tries to batch adjacent cells of the\n   * same color together to reduce draw calls.\n   */\n  private _drawBackground(firstRow: number, lastRow: number): void {\n    const ctx = this._ctx;\n    const cols = this._bufferService.cols;\n    let startX: number = 0;\n    let startY: number = 0;\n    let prevFillStyle: string | null = null;\n\n    ctx.save();\n\n    this._forEachCell(firstRow, lastRow, null, (cell, x, y) => {\n      // libvte and xterm both draw the background (but not foreground) of invisible characters,\n      // so we should too.\n      let nextFillStyle = null; // null represents default background color\n\n      if (cell.isInverse()) {\n        if (cell.isFgDefault()) {\n          nextFillStyle = this._colors.foreground.css;\n        } else if (cell.isFgRGB()) {\n          nextFillStyle = `rgb(${AttributeData.toColorRGB(cell.getFgColor()).join(',')})`;\n        } else {\n          nextFillStyle = this._colors.ansi[cell.getFgColor()].css;\n        }\n      } else if (cell.isBgRGB()) {\n        nextFillStyle = `rgb(${AttributeData.toColorRGB(cell.getBgColor()).join(',')})`;\n      } else if (cell.isBgPalette()) {\n        nextFillStyle = this._colors.ansi[cell.getBgColor()].css;\n      }\n\n      if (prevFillStyle === null) {\n        // This is either the first iteration, or the default background was set. Either way, we\n        // don't need to draw anything.\n        startX = x;\n        startY = y;\n      }\n\n      if (y !== startY) {\n        // our row changed, draw the previous row\n        ctx.fillStyle = prevFillStyle ? prevFillStyle : '';\n        this._fillCells(startX, startY, cols - startX, 1);\n        startX = x;\n        startY = y;\n      } else if (prevFillStyle !== nextFillStyle) {\n        // our color changed, draw the previous characters in this row\n        ctx.fillStyle = prevFillStyle ? prevFillStyle : '';\n        this._fillCells(startX, startY, x - startX, 1);\n        startX = x;\n        startY = y;\n      }\n\n      prevFillStyle = nextFillStyle;\n    });\n\n    // flush the last color we encountered\n    if (prevFillStyle !== null) {\n      ctx.fillStyle = prevFillStyle;\n      this._fillCells(startX, startY, cols - startX, 1);\n    }\n\n    ctx.restore();\n  }\n\n  private _drawForeground(firstRow: number, lastRow: number): void {\n    this._forEachCell(firstRow, lastRow, this._characterJoinerRegistry, (cell, x, y) => {\n      if (cell.isInvisible()) {\n        return;\n      }\n      this._drawChars(cell, x, y);\n      if (cell.isUnderline()) {\n        this._ctx.save();\n\n        if (cell.isInverse()) {\n          if (cell.isBgDefault()) {\n            this._ctx.fillStyle = this._colors.background.css;\n          } else if (cell.isBgRGB()) {\n            this._ctx.fillStyle = `rgb(${AttributeData.toColorRGB(cell.getBgColor()).join(',')})`;\n          } else {\n            this._ctx.fillStyle = this._colors.ansi[cell.getBgColor()].css;\n          }\n        } else {\n          if (cell.isFgDefault()) {\n            this._ctx.fillStyle = this._colors.foreground.css;\n          } else if (cell.isFgRGB()) {\n            this._ctx.fillStyle = `rgb(${AttributeData.toColorRGB(cell.getFgColor()).join(',')})`;\n          } else {\n            let fg = cell.getFgColor();\n            if (this._optionsService.options.drawBoldTextInBrightColors && cell.isBold() && fg < 8) {\n              fg += 8;\n            }\n            this._ctx.fillStyle = this._colors.ansi[fg].css;\n          }\n        }\n\n        this._fillBottomLineAtCells(x, y, cell.getWidth());\n        this._ctx.restore();\n      }\n    });\n  }\n\n  public onGridChanged(firstRow: number, lastRow: number): void {\n    // Resize has not been called yet\n    if (this._state.cache.length === 0) {\n      return;\n    }\n\n    if (this._charAtlas) {\n      this._charAtlas.beginFrame();\n    }\n\n    this._clearCells(0, firstRow, this._bufferService.cols, lastRow - firstRow + 1);\n    this._drawBackground(firstRow, lastRow);\n    this._drawForeground(firstRow, lastRow);\n  }\n\n  public onOptionsChanged(): void {\n    this._setTransparency(this._optionsService.options.allowTransparency);\n  }\n\n  /**\n   * Whether a character is overlapping to the next cell.\n   */\n  private _isOverlapping(cell: ICellData): boolean {\n    // Only single cell characters can be overlapping, rendering issues can\n    // occur without this check\n    if (cell.getWidth() !== 1) {\n      return false;\n    }\n\n    // We assume that any ascii character will not overlap\n    if (cell.getCode() < 256) {\n      return false;\n    }\n\n    const chars = cell.getChars();\n\n    // Deliver from cache if available\n    if (this._characterOverlapCache.hasOwnProperty(chars)) {\n      return this._characterOverlapCache[chars];\n    }\n\n    // Setup the font\n    this._ctx.save();\n    this._ctx.font = this._characterFont;\n\n    // Measure the width of the character, but Math.floor it\n    // because that is what the renderer does when it calculates\n    // the character dimensions we are comparing against\n    const overlaps = Math.floor(this._ctx.measureText(chars).width) > this._characterWidth;\n\n    // Restore the original context\n    this._ctx.restore();\n\n    // Cache and return\n    this._characterOverlapCache[chars] = overlaps;\n    return overlaps;\n  }\n\n  /**\n   * Clear the charcater at the cell specified.\n   * @param x The column of the char.\n   * @param y The row of the char.\n   */\n  // private _clearChar(x: number, y: number): void {\n  //   let colsToClear = 1;\n  //   // Clear the adjacent character if it was wide\n  //   const state = this._state.cache[x][y];\n  //   if (state && state[CHAR_DATA_WIDTH_INDEX] === 2) {\n  //     colsToClear = 2;\n  //   }\n  //   this.clearCells(x, y, colsToClear, 1);\n  // }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport class GridCache<T> {\n  public cache: (T | undefined)[][];\n\n  public constructor() {\n    this.cache = [];\n  }\n\n  public resize(width: number, height: number): void {\n    for (let x = 0; x < width; x++) {\n      if (this.cache.length <= x) {\n        this.cache.push([]);\n      }\n      for (let y = this.cache[x].length; y < height; y++) {\n        this.cache[x].push(undefined);\n      }\n      this.cache[x].length = height;\n    }\n    this.cache.length = width;\n  }\n\n  public clear(): void {\n    for (let x = 0; x < this.cache.length; x++) {\n      for (let y = 0; y < this.cache[x].length; y++) {\n        this.cache[x][y] = undefined;\n      }\n    }\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { DIM_OPACITY, INVERTED_DEFAULT_COLOR } from 'browser/renderer/atlas/Constants';\nimport { IGlyphIdentifier, ICharAtlasConfig } from 'browser/renderer/atlas/Types';\nimport { BaseCharAtlas } from 'browser/renderer/atlas/BaseCharAtlas';\nimport { DEFAULT_ANSI_COLORS } from 'browser/ColorManager';\nimport { LRUMap } from 'browser/renderer/atlas/LRUMap';\nimport { isFirefox, isSafari } from 'common/Platform';\nimport { IColor } from 'browser/Types';\nimport { throwIfFalsy } from 'browser/renderer/RendererUtils';\n\n// In practice we're probably never going to exhaust a texture this large. For debugging purposes,\n// however, it can be useful to set this to a really tiny value, to verify that LRU eviction works.\nconst TEXTURE_WIDTH = 1024;\nconst TEXTURE_HEIGHT = 1024;\n\nconst TRANSPARENT_COLOR = {\n  css: 'rgba(0, 0, 0, 0)',\n  rgba: 0\n};\n\n// Drawing to the cache is expensive: If we have to draw more than this number of glyphs to the\n// cache in a single frame, give up on trying to cache anything else, and try to finish the current\n// frame ASAP.\n//\n// This helps to limit the amount of damage a program can do when it would otherwise thrash the\n// cache.\nconst FRAME_CACHE_DRAW_LIMIT = 100;\n\n/**\n * The number of milliseconds to wait before generating the ImageBitmap, this is to debounce/batch\n * the operation as window.createImageBitmap is asynchronous.\n */\nconst GLYPH_BITMAP_COMMIT_DELAY = 100;\n\ninterface IGlyphCacheValue {\n  index: number;\n  isEmpty: boolean;\n  inBitmap: boolean;\n}\n\nexport function getGlyphCacheKey(glyph: IGlyphIdentifier): number {\n  // Note that this only returns a valid key when code < 256\n  // Layout:\n  // 0b00000000000000000000000000000001: italic (1)\n  // 0b00000000000000000000000000000010: dim (1)\n  // 0b00000000000000000000000000000100: bold (1)\n  // 0b00000000000000000000111111111000: fg (9)\n  // 0b00000000000111111111000000000000: bg (9)\n  // 0b00011111111000000000000000000000: code (8)\n  // 0b11100000000000000000000000000000: unused (3)\n  return glyph.code << 21 | glyph.bg << 12 | glyph.fg << 3 | (glyph.bold ? 0 : 4) + (glyph.dim ? 0 : 2) + (glyph.italic ? 0 : 1);\n}\n\nexport class DynamicCharAtlas extends BaseCharAtlas {\n  // An ordered map that we're using to keep track of where each glyph is in the atlas texture.\n  // It's ordered so that we can determine when to remove the old entries.\n  private _cacheMap: LRUMap<IGlyphCacheValue>;\n\n  // The texture that the atlas is drawn to\n  private _cacheCanvas: HTMLCanvasElement;\n  private _cacheCtx: CanvasRenderingContext2D;\n\n  // A temporary context that glyphs are drawn to before being transfered to the atlas.\n  private _tmpCtx: CanvasRenderingContext2D;\n\n  // The number of characters stored in the atlas by width/height\n  private _width: number;\n  private _height: number;\n\n  private _drawToCacheCount: number = 0;\n\n  // An array of glyph keys that are waiting on the bitmap to be generated.\n  private _glyphsWaitingOnBitmap: IGlyphCacheValue[] = [];\n\n  // The timeout that is used to batch bitmap generation so it's not requested for every new glyph.\n  private _bitmapCommitTimeout: number | null = null;\n\n  // The bitmap to draw from, this is much faster on other browsers than others.\n  private _bitmap: ImageBitmap | null = null;\n\n  constructor(document: Document, private _config: ICharAtlasConfig) {\n    super();\n    this._cacheCanvas = document.createElement('canvas');\n    this._cacheCanvas.width = TEXTURE_WIDTH;\n    this._cacheCanvas.height = TEXTURE_HEIGHT;\n    // The canvas needs alpha because we use clearColor to convert the background color to alpha.\n    // It might also contain some characters with transparent backgrounds if allowTransparency is\n    // set.\n    this._cacheCtx = throwIfFalsy(this._cacheCanvas.getContext('2d', {alpha: true}));\n\n    const tmpCanvas = document.createElement('canvas');\n    tmpCanvas.width = this._config.scaledCharWidth;\n    tmpCanvas.height = this._config.scaledCharHeight;\n    this._tmpCtx = throwIfFalsy(tmpCanvas.getContext('2d', {alpha: this._config.allowTransparency}));\n\n    this._width = Math.floor(TEXTURE_WIDTH / this._config.scaledCharWidth);\n    this._height = Math.floor(TEXTURE_HEIGHT / this._config.scaledCharHeight);\n    const capacity = this._width * this._height;\n    this._cacheMap = new LRUMap(capacity);\n    this._cacheMap.prealloc(capacity);\n\n    // This is useful for debugging\n    // document.body.appendChild(this._cacheCanvas);\n  }\n\n  public dispose(): void {\n    if (this._bitmapCommitTimeout !== null) {\n      window.clearTimeout(this._bitmapCommitTimeout);\n      this._bitmapCommitTimeout = null;\n    }\n  }\n\n  public beginFrame(): void {\n    this._drawToCacheCount = 0;\n  }\n\n  public draw(\n    ctx: CanvasRenderingContext2D,\n    glyph: IGlyphIdentifier,\n    x: number,\n    y: number\n  ): boolean {\n    // Space is always an empty cell, special case this as it's so common\n    if (glyph.code === 32) {\n      return true;\n    }\n\n    // Exit early for uncachable glyphs\n    if (!this._canCache(glyph)) {\n      return false;\n    }\n\n    const glyphKey = getGlyphCacheKey(glyph);\n    const cacheValue = this._cacheMap.get(glyphKey);\n    if (cacheValue !== null && cacheValue !== undefined) {\n      this._drawFromCache(ctx, cacheValue, x, y);\n      return true;\n    } else if (this._drawToCacheCount < FRAME_CACHE_DRAW_LIMIT) {\n      let index;\n      if (this._cacheMap.size < this._cacheMap.capacity) {\n        index = this._cacheMap.size;\n      } else {\n        // we're out of space, so our call to set will delete this item\n        index = this._cacheMap.peek()!.index;\n      }\n      const cacheValue = this._drawToCache(glyph, index);\n      this._cacheMap.set(glyphKey, cacheValue);\n      this._drawFromCache(ctx, cacheValue, x, y);\n      return true;\n    }\n    return false;\n  }\n\n  private _canCache(glyph: IGlyphIdentifier): boolean {\n    // Only cache ascii and extended characters for now, to be safe. In the future, we could do\n    // something more complicated to determine the expected width of a character.\n    //\n    // If we switch the renderer over to webgl at some point, we may be able to use blending modes\n    // to draw overlapping glyphs from the atlas:\n    // https://github.com/servo/webrender/issues/464#issuecomment-255632875\n    // https://webglfundamentals.org/webgl/lessons/webgl-text-texture.html\n    return glyph.code < 256;\n  }\n\n  private _toCoordinateX(index: number): number {\n    return (index % this._width) * this._config.scaledCharWidth;\n  }\n\n  private _toCoordinateY(index: number): number {\n    return Math.floor(index / this._width) * this._config.scaledCharHeight;\n  }\n\n  private _drawFromCache(\n    ctx: CanvasRenderingContext2D,\n    cacheValue: IGlyphCacheValue,\n    x: number,\n    y: number\n  ): void {\n    // We don't actually need to do anything if this is whitespace.\n    if (cacheValue.isEmpty) {\n      return;\n    }\n    const cacheX = this._toCoordinateX(cacheValue.index);\n    const cacheY = this._toCoordinateY(cacheValue.index);\n    ctx.drawImage(\n      cacheValue.inBitmap ? this._bitmap! : this._cacheCanvas,\n      cacheX,\n      cacheY,\n      this._config.scaledCharWidth,\n      this._config.scaledCharHeight,\n      x,\n      y,\n      this._config.scaledCharWidth,\n      this._config.scaledCharHeight\n    );\n  }\n\n  private _getColorFromAnsiIndex(idx: number): IColor {\n    if (idx < this._config.colors.ansi.length) {\n      return this._config.colors.ansi[idx];\n    }\n    return DEFAULT_ANSI_COLORS[idx];\n  }\n\n  private _getBackgroundColor(glyph: IGlyphIdentifier): IColor {\n    if (this._config.allowTransparency) {\n      // The background color might have some transparency, so we need to render it as fully\n      // transparent in the atlas. Otherwise we'd end up drawing the transparent background twice\n      // around the anti-aliased edges of the glyph, and it would look too dark.\n      return TRANSPARENT_COLOR;\n    } else if (glyph.bg === INVERTED_DEFAULT_COLOR) {\n      return this._config.colors.foreground;\n    } else if (glyph.bg < 256) {\n      return this._getColorFromAnsiIndex(glyph.bg);\n    }\n    return this._config.colors.background;\n  }\n\n  private _getForegroundColor(glyph: IGlyphIdentifier): IColor {\n    if (glyph.fg === INVERTED_DEFAULT_COLOR) {\n      return this._config.colors.background;\n    } else if (glyph.fg < 256) {\n      // 256 color support\n      return this._getColorFromAnsiIndex(glyph.fg);\n    }\n    return this._config.colors.foreground;\n  }\n\n  // TODO: We do this (or something similar) in multiple places. We should split this off\n  // into a shared function.\n  private _drawToCache(glyph: IGlyphIdentifier, index: number): IGlyphCacheValue {\n    this._drawToCacheCount++;\n\n    this._tmpCtx.save();\n\n    // draw the background\n    const backgroundColor = this._getBackgroundColor(glyph);\n    // Use a 'copy' composite operation to clear any existing glyph out of _tmpCtxWithAlpha, regardless of\n    // transparency in backgroundColor\n    this._tmpCtx.globalCompositeOperation = 'copy';\n    this._tmpCtx.fillStyle = backgroundColor.css;\n    this._tmpCtx.fillRect(0, 0, this._config.scaledCharWidth, this._config.scaledCharHeight);\n    this._tmpCtx.globalCompositeOperation = 'source-over';\n\n    // draw the foreground/glyph\n    const fontWeight = glyph.bold ? this._config.fontWeightBold : this._config.fontWeight;\n    const fontStyle = glyph.italic ? 'italic' : '';\n    this._tmpCtx.font =\n      `${fontStyle} ${fontWeight} ${this._config.fontSize * this._config.devicePixelRatio}px ${this._config.fontFamily}`;\n    this._tmpCtx.textBaseline = 'middle';\n\n    this._tmpCtx.fillStyle = this._getForegroundColor(glyph).css;\n\n    // Apply alpha to dim the character\n    if (glyph.dim) {\n      this._tmpCtx.globalAlpha = DIM_OPACITY;\n    }\n    // Draw the character\n    this._tmpCtx.fillText(glyph.chars, 0, this._config.scaledCharHeight / 2);\n    this._tmpCtx.restore();\n\n    // clear the background from the character to avoid issues with drawing over the previous\n    // character if it extends past it's bounds\n    const imageData = this._tmpCtx.getImageData(\n      0, 0, this._config.scaledCharWidth, this._config.scaledCharHeight\n    );\n    let isEmpty = false;\n    if (!this._config.allowTransparency) {\n      isEmpty = clearColor(imageData, backgroundColor);\n    }\n\n    // copy the data from imageData to _cacheCanvas\n    const x = this._toCoordinateX(index);\n    const y = this._toCoordinateY(index);\n    // putImageData doesn't do any blending, so it will overwrite any existing cache entry for us\n    this._cacheCtx.putImageData(imageData, x, y);\n\n    // Add the glyph and queue it to the bitmap (if the browser supports it)\n    const cacheValue = {\n      index,\n      isEmpty,\n      inBitmap: false\n    };\n    this._addGlyphToBitmap(cacheValue);\n\n    return cacheValue;\n  }\n\n  private _addGlyphToBitmap(cacheValue: IGlyphCacheValue): void {\n    // Support is patchy for createImageBitmap at the moment, pass a canvas back\n    // if support is lacking as drawImage works there too. Firefox is also\n    // included here as ImageBitmap appears both buggy and has horrible\n    // performance (tested on v55).\n    if (!('createImageBitmap' in window) || isFirefox || isSafari) {\n      return;\n    }\n\n    // Add the glyph to the queue\n    this._glyphsWaitingOnBitmap.push(cacheValue);\n\n    // Check if bitmap generation timeout already exists\n    if (this._bitmapCommitTimeout !== null) {\n      return;\n    }\n\n    this._bitmapCommitTimeout = window.setTimeout(() => this._generateBitmap(), GLYPH_BITMAP_COMMIT_DELAY);\n  }\n\n  private _generateBitmap(): void {\n    const glyphsMovingToBitmap = this._glyphsWaitingOnBitmap;\n    this._glyphsWaitingOnBitmap = [];\n    window.createImageBitmap(this._cacheCanvas).then(bitmap => {\n      // Set bitmap\n      this._bitmap = bitmap;\n\n      // Mark all new glyphs as in bitmap, excluding glyphs that came in after\n      // the bitmap was requested\n      for (let i = 0; i < glyphsMovingToBitmap.length; i++) {\n        const value = glyphsMovingToBitmap[i];\n        // It doesn't matter if the value was already evicted, it will be\n        // released from memory after this block if so.\n        value.inBitmap = true;\n      }\n    });\n    this._bitmapCommitTimeout = null;\n  }\n}\n\n// This is used for debugging the renderer, just swap out `new DynamicCharAtlas` with\n// `new NoneCharAtlas`.\nexport class NoneCharAtlas extends BaseCharAtlas {\n  constructor(document: Document, config: ICharAtlasConfig) {\n    super();\n  }\n\n  public draw(\n    ctx: CanvasRenderingContext2D,\n    glyph: IGlyphIdentifier,\n    x: number,\n    y: number\n  ): boolean {\n    return false;\n  }\n}\n\n/**\n * Makes a partiicular rgb color in an ImageData completely transparent.\n * @returns True if the result is \"empty\", meaning all pixels are fully transparent.\n */\nfunction clearColor(imageData: ImageData, color: IColor): boolean {\n  let isEmpty = true;\n  const r = color.rgba >>> 24;\n  const g = color.rgba >>> 16 & 0xFF;\n  const b = color.rgba >>> 8 & 0xFF;\n  for (let offset = 0; offset < imageData.data.length; offset += 4) {\n    if (imageData.data[offset] === r &&\n        imageData.data[offset + 1] === g &&\n        imageData.data[offset + 2] === b) {\n      imageData.data[offset + 3] = 0;\n    } else {\n      isEmpty = false;\n    }\n  }\n  return isEmpty;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IGlyphIdentifier } from 'browser/renderer/atlas/Types';\nimport { IDisposable } from 'common/Types';\n\nexport abstract class BaseCharAtlas implements IDisposable {\n  private _didWarmUp: boolean = false;\n\n  public dispose(): void { }\n\n  /**\n   * Perform any work needed to warm the cache before it can be used. May be called multiple times.\n   * Implement _doWarmUp instead if you only want to get called once.\n   */\n  public warmUp(): void {\n    if (!this._didWarmUp) {\n      this._doWarmUp();\n      this._didWarmUp = true;\n    }\n  }\n\n  /**\n   * Perform any work needed to warm the cache before it can be used. Used by the default\n   * implementation of warmUp(), and will only be called once.\n   */\n  protected _doWarmUp(): void { }\n\n  /**\n   * Called when we start drawing a new frame.\n   *\n   * TODO: We rely on this getting called by TextRenderLayer. This should really be called by\n   * Renderer instead, but we need to make Renderer the source-of-truth for the char atlas, instead\n   * of BaseRenderLayer.\n   */\n  public beginFrame(): void { }\n\n  /**\n   * May be called before warmUp finishes, however it is okay for the implementation to\n   * do nothing and return false in that case.\n   *\n   * @param ctx Where to draw the character onto.\n   * @param glyph Information about what to draw\n   * @param x The position on the context to start drawing at\n   * @param y The position on the context to start drawing at\n   * @returns The success state. True if we drew the character.\n   */\n  public abstract draw(\n    ctx: CanvasRenderingContext2D,\n    glyph: IGlyphIdentifier,\n    x: number,\n    y: number\n  ): boolean;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\ninterface ILinkedListNode<T> {\n  prev: ILinkedListNode<T> | null;\n  next: ILinkedListNode<T> | null;\n  key: number | null;\n  value: T | null;\n}\n\nexport class LRUMap<T> {\n  private _map: { [key: number]: ILinkedListNode<T> } = {};\n  private _head: ILinkedListNode<T> | null = null;\n  private _tail: ILinkedListNode<T> | null = null;\n  private _nodePool: ILinkedListNode<T>[] = [];\n  public size: number = 0;\n\n  constructor(public capacity: number) { }\n\n  private _unlinkNode(node: ILinkedListNode<T>): void {\n    const prev = node.prev;\n    const next = node.next;\n    if (node === this._head) {\n      this._head = next;\n    }\n    if (node === this._tail) {\n      this._tail = prev;\n    }\n    if (prev !== null) {\n      prev.next = next;\n    }\n    if (next !== null) {\n      next.prev = prev;\n    }\n  }\n\n  private _appendNode(node: ILinkedListNode<T>): void {\n    const tail = this._tail;\n    if (tail !== null) {\n      tail.next = node;\n    }\n    node.prev = tail;\n    node.next = null;\n    this._tail = node;\n    if (this._head === null) {\n      this._head = node;\n    }\n  }\n\n  /**\n   * Preallocate a bunch of linked-list nodes. Allocating these nodes ahead of time means that\n   * they're more likely to live next to each other in memory, which seems to improve performance.\n   *\n   * Each empty object only consumes about 60 bytes of memory, so this is pretty cheap, even for\n   * large maps.\n   */\n  public prealloc(count: number): void {\n    const nodePool = this._nodePool;\n    for (let i = 0; i < count; i++) {\n      nodePool.push({\n        prev: null,\n        next: null,\n        key: null,\n        value: null\n      });\n    }\n  }\n\n  public get(key: number): T | null {\n    // This is unsafe: We're assuming our keyspace doesn't overlap with Object.prototype. However,\n    // it's faster than calling hasOwnProperty, and in our case, it would never overlap.\n    const node = this._map[key];\n    if (node !== undefined) {\n      this._unlinkNode(node);\n      this._appendNode(node);\n      return node.value;\n    }\n    return null;\n  }\n\n  /**\n   * Gets a value from a key without marking it as the most recently used item.\n   */\n  public peekValue(key: number): T | null {\n    const node = this._map[key];\n    if (node !== undefined) {\n      return node.value;\n    }\n    return null;\n  }\n\n  public peek(): T | null {\n    const head = this._head;\n    return head === null ? null : head.value;\n  }\n\n  public set(key: number, value: T): void {\n    // This is unsafe: See note above.\n    let node = this._map[key];\n    if (node !== undefined) {\n      // already exists, we just need to mutate it and move it to the end of the list\n      node = this._map[key];\n      this._unlinkNode(node);\n      node.value = value;\n    } else if (this.size >= this.capacity) {\n      // we're out of space: recycle the head node, move it to the tail\n      node = this._head!;\n      this._unlinkNode(node);\n      delete this._map[node.key!];\n      node.key = key;\n      node.value = value;\n      this._map[key] = node;\n    } else {\n      // make a new element\n      const nodePool = this._nodePool;\n      if (nodePool.length > 0) {\n        // use a preallocated node if we can\n        node = nodePool.pop()!;\n        node.key = key;\n        node.value = value;\n      } else {\n        node = {\n          prev: null,\n          next: null,\n          key,\n          value\n        };\n      }\n      this._map[key] = node;\n      this.size++;\n    }\n    this._appendNode(node);\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderDimensions } from 'browser/renderer/Types';\nimport { BaseRenderLayer } from 'browser/renderer/BaseRenderLayer';\nimport { IColorSet } from 'browser/Types';\nimport { IBufferService, IOptionsService } from 'common/services/Services';\n\ninterface ISelectionState {\n  start?: [number, number];\n  end?: [number, number];\n  columnSelectMode?: boolean;\n  ydisp?: number;\n}\n\nexport class SelectionRenderLayer extends BaseRenderLayer {\n  private _state!: ISelectionState;\n\n  constructor(\n    container: HTMLElement,\n    zIndex: number,\n    colors: IColorSet,\n    rendererId: number,\n    readonly bufferService: IBufferService,\n    readonly optionsService: IOptionsService\n  ) {\n    super(container, 'selection', zIndex, true, colors, rendererId, bufferService, optionsService);\n    this._clearState();\n  }\n\n  private _clearState(): void {\n    this._state = {\n      start: undefined,\n      end: undefined,\n      columnSelectMode: undefined,\n      ydisp: undefined\n    };\n  }\n\n  public resize(dim: IRenderDimensions): void {\n    super.resize(dim);\n    // Resizing the canvas discards the contents of the canvas so clear state\n    this._clearState();\n  }\n\n  public reset(): void {\n    if (this._state.start && this._state.end) {\n      this._clearState();\n      this._clearAll();\n    }\n  }\n\n  public onSelectionChanged(start: [number, number], end: [number, number], columnSelectMode: boolean): void {\n    // Selection has not changed\n    if (!this._didStateChange(start, end, columnSelectMode, this._bufferService.buffer.ydisp)) {\n      return;\n    }\n\n    // Remove all selections\n    this._clearAll();\n\n    // Selection does not exist\n    if (!start || !end) {\n      this._clearState();\n      return;\n    }\n\n    // Translate from buffer position to viewport position\n    const viewportStartRow = start[1] - this._bufferService.buffer.ydisp;\n    const viewportEndRow = end[1] - this._bufferService.buffer.ydisp;\n    const viewportCappedStartRow = Math.max(viewportStartRow, 0);\n    const viewportCappedEndRow = Math.min(viewportEndRow, this._bufferService.rows - 1);\n\n    // No need to draw the selection\n    if (viewportCappedStartRow >= this._bufferService.rows || viewportCappedEndRow < 0) {\n      return;\n    }\n\n    this._ctx.fillStyle = this._colors.selection.css;\n\n    if (columnSelectMode) {\n      const startCol = start[0];\n      const width = end[0] - startCol;\n      const height = viewportCappedEndRow - viewportCappedStartRow + 1;\n      this._fillCells(startCol, viewportCappedStartRow, width, height);\n    } else {\n      // Draw first row\n      const startCol = viewportStartRow === viewportCappedStartRow ? start[0] : 0;\n      const startRowEndCol = viewportCappedStartRow === viewportCappedEndRow ? end[0] : this._bufferService.cols;\n      this._fillCells(startCol, viewportCappedStartRow, startRowEndCol - startCol, 1);\n\n      // Draw middle rows\n      const middleRowsCount = Math.max(viewportCappedEndRow - viewportCappedStartRow - 1, 0);\n      this._fillCells(0, viewportCappedStartRow + 1, this._bufferService.cols, middleRowsCount);\n\n      // Draw final row\n      if (viewportCappedStartRow !== viewportCappedEndRow) {\n        // Only draw viewportEndRow if it's not the same as viewportStartRow\n        const endCol = viewportEndRow === viewportCappedEndRow ? end[0] : this._bufferService.cols;\n        this._fillCells(0, viewportCappedEndRow, endCol, 1);\n      }\n    }\n\n    // Save state for next render\n    this._state.start = [start[0], start[1]];\n    this._state.end = [end[0], end[1]];\n    this._state.columnSelectMode = columnSelectMode;\n    this._state.ydisp = this._bufferService.buffer.ydisp;\n  }\n\n  private _didStateChange(start: [number, number], end: [number, number], columnSelectMode: boolean, ydisp: number): boolean {\n    return !this._areCoordinatesEqual(start, this._state.start) ||\n      !this._areCoordinatesEqual(end, this._state.end) ||\n      columnSelectMode !== this._state.columnSelectMode ||\n      ydisp !== this._state.ydisp;\n  }\n\n  private _areCoordinatesEqual(coord1: [number, number] | undefined, coord2: [number, number] | undefined): boolean {\n    if (!coord1 || !coord2) {\n      return false;\n    }\n\n    return coord1[0] === coord2[0] && coord1[1] === coord2[1];\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderDimensions } from 'browser/renderer/Types';\nimport { BaseRenderLayer } from '../browser/renderer/BaseRenderLayer';\nimport { ITerminal } from '../Types';\nimport { ICellData } from 'common/Types';\nimport { CellData } from 'common/buffer/CellData';\nimport { IColorSet } from 'browser/Types';\nimport { IBufferService, IOptionsService } from 'common/services/Services';\n\ninterface ICursorState {\n  x: number;\n  y: number;\n  isFocused: boolean;\n  style: string;\n  width: number;\n}\n\n/**\n * The time between cursor blinks.\n */\nconst BLINK_INTERVAL = 600;\n\nexport class CursorRenderLayer extends BaseRenderLayer {\n  private _state: ICursorState;\n  private _cursorRenderers: {[key: string]: (x: number, y: number, cell: ICellData) => void};\n  private _cursorBlinkStateManager: CursorBlinkStateManager;\n  private _cell: ICellData = new CellData();\n\n  constructor(\n    container: HTMLElement,\n    zIndex: number,\n    colors: IColorSet,\n    private _terminal: ITerminal,\n    rendererId: number,\n    readonly bufferService: IBufferService,\n    readonly optionsService: IOptionsService\n  ) {\n    super(container, 'cursor', zIndex, true, colors, rendererId, bufferService, optionsService);\n    this._state = {\n      x: null,\n      y: null,\n      isFocused: null,\n      style: null,\n      width: null\n    };\n    this._cursorRenderers = {\n      'bar': this._renderBarCursor.bind(this),\n      'block': this._renderBlockCursor.bind(this),\n      'underline': this._renderUnderlineCursor.bind(this)\n    };\n    // TODO: Consider initial options? Maybe onOptionsChanged should be called at the end of open?\n  }\n\n  public resize(dim: IRenderDimensions): void {\n    super.resize(dim);\n    // Resizing the canvas discards the contents of the canvas so clear state\n    this._state = {\n      x: null,\n      y: null,\n      isFocused: null,\n      style: null,\n      width: null\n    };\n  }\n\n  public reset(): void {\n    this._clearCursor();\n    if (this._cursorBlinkStateManager) {\n      this._cursorBlinkStateManager.dispose();\n      this._cursorBlinkStateManager = null;\n      this.onOptionsChanged();\n    }\n  }\n\n  public onBlur(): void {\n    if (this._cursorBlinkStateManager) {\n      this._cursorBlinkStateManager.pause();\n    }\n    this._terminal.refresh(this._bufferService.buffer.y, this._bufferService.buffer.y);\n  }\n\n  public onFocus(): void {\n    if (this._cursorBlinkStateManager) {\n      this._cursorBlinkStateManager.resume();\n    } else {\n      this._terminal.refresh(this._bufferService.buffer.y, this._bufferService.buffer.y);\n    }\n  }\n\n  public onOptionsChanged(): void {\n    if (this._optionsService.options.cursorBlink) {\n      if (!this._cursorBlinkStateManager) {\n        this._cursorBlinkStateManager = new CursorBlinkStateManager(this._terminal.isFocused, () => {\n          this._render(true);\n        });\n      }\n    } else {\n      if (this._cursorBlinkStateManager) {\n        this._cursorBlinkStateManager.dispose();\n        this._cursorBlinkStateManager = null;\n      }\n      // Request a refresh from the terminal as management of rendering is being\n      // moved back to the terminal\n      this._terminal.refresh(this._bufferService.buffer.y, this._bufferService.buffer.y);\n    }\n  }\n\n  public onCursorMove(): void {\n    if (this._cursorBlinkStateManager) {\n      this._cursorBlinkStateManager.restartBlinkAnimation();\n    }\n  }\n\n  public onGridChanged(startRow: number, endRow: number): void {\n    if (!this._cursorBlinkStateManager || this._cursorBlinkStateManager.isPaused) {\n      this._render(false);\n    } else {\n      this._cursorBlinkStateManager.restartBlinkAnimation();\n    }\n  }\n\n  private _render(triggeredByAnimationFrame: boolean): void {\n    // Don't draw the cursor if it's hidden\n    if (!this._terminal.cursorState || this._terminal.cursorHidden) {\n      this._clearCursor();\n      return;\n    }\n\n    const cursorY = this._bufferService.buffer.ybase + this._bufferService.buffer.y;\n    const viewportRelativeCursorY = cursorY - this._bufferService.buffer.ydisp;\n\n    // Don't draw the cursor if it's off-screen\n    if (viewportRelativeCursorY < 0 || viewportRelativeCursorY >= this._bufferService.rows) {\n      this._clearCursor();\n      return;\n    }\n\n    this._bufferService.buffer.lines.get(cursorY).loadCell(this._bufferService.buffer.x, this._cell);\n    if (this._cell.content === undefined) {\n      return;\n    }\n\n    if (!this._terminal.isFocused) {\n      this._clearCursor();\n      this._ctx.save();\n      this._ctx.fillStyle = this._colors.cursor.css;\n      this._renderBlurCursor(this._bufferService.buffer.x, viewportRelativeCursorY, this._cell);\n      this._ctx.restore();\n      this._state.x = this._bufferService.buffer.x;\n      this._state.y = viewportRelativeCursorY;\n      this._state.isFocused = false;\n      this._state.style = this._optionsService.options.cursorStyle;\n      this._state.width = this._cell.getWidth();\n      return;\n    }\n\n    // Don't draw the cursor if it's blinking\n    if (this._cursorBlinkStateManager && !this._cursorBlinkStateManager.isCursorVisible) {\n      this._clearCursor();\n      return;\n    }\n\n    if (this._state) {\n      // The cursor is already in the correct spot, don't redraw\n      if (this._state.x === this._bufferService.buffer.x &&\n          this._state.y === viewportRelativeCursorY &&\n          this._state.isFocused === this._terminal.isFocused &&\n          this._state.style === this._optionsService.options.cursorStyle &&\n          this._state.width === this._cell.getWidth()) {\n        return;\n      }\n      this._clearCursor();\n    }\n\n    this._ctx.save();\n    this._cursorRenderers[this._optionsService.options.cursorStyle || 'block'](this._bufferService.buffer.x, viewportRelativeCursorY, this._cell);\n    this._ctx.restore();\n\n    this._state.x = this._bufferService.buffer.x;\n    this._state.y = viewportRelativeCursorY;\n    this._state.isFocused = false;\n    this._state.style = this._optionsService.options.cursorStyle;\n    this._state.width = this._cell.getWidth();\n  }\n\n  private _clearCursor(): void {\n    if (this._state) {\n      this._clearCells(this._state.x, this._state.y, this._state.width, 1);\n      this._state = {\n        x: null,\n        y: null,\n        isFocused: null,\n        style: null,\n        width: null\n      };\n    }\n  }\n\n  private _renderBarCursor(x: number, y: number, cell: ICellData): void {\n    this._ctx.save();\n    this._ctx.fillStyle = this._colors.cursor.css;\n    this._fillLeftLineAtCell(x, y);\n    this._ctx.restore();\n  }\n\n  private _renderBlockCursor(x: number, y: number, cell: ICellData): void {\n    this._ctx.save();\n    this._ctx.fillStyle = this._colors.cursor.css;\n    this._fillCells(x, y, cell.getWidth(), 1);\n    this._ctx.fillStyle = this._colors.cursorAccent.css;\n    this._fillCharTrueColor(cell, x, y);\n    this._ctx.restore();\n  }\n\n  private _renderUnderlineCursor(x: number, y: number, cell: ICellData): void {\n    this._ctx.save();\n    this._ctx.fillStyle = this._colors.cursor.css;\n    this._fillBottomLineAtCells(x, y);\n    this._ctx.restore();\n  }\n\n  private _renderBlurCursor(x: number, y: number, cell: ICellData): void {\n    this._ctx.save();\n    this._ctx.strokeStyle = this._colors.cursor.css;\n    this._strokeRectAtCell(x, y, cell.getWidth(), 1);\n    this._ctx.restore();\n  }\n}\n\nclass CursorBlinkStateManager {\n  public isCursorVisible: boolean;\n\n  private _animationFrame: number;\n  private _blinkStartTimeout: number;\n  private _blinkInterval: number;\n\n  /**\n   * The time at which the animation frame was restarted, this is used on the\n   * next render to restart the timers so they don't need to restart the timers\n   * multiple times over a short period.\n   */\n  private _animationTimeRestarted: number;\n\n  constructor(\n    isFocused: boolean,\n    private _renderCallback: () => void\n  ) {\n    this.isCursorVisible = true;\n    if (isFocused) {\n      this._restartInterval();\n    }\n  }\n\n  public get isPaused(): boolean { return !(this._blinkStartTimeout || this._blinkInterval); }\n\n  public dispose(): void {\n    if (this._blinkInterval) {\n      window.clearInterval(this._blinkInterval);\n      this._blinkInterval = null;\n    }\n    if (this._blinkStartTimeout) {\n      window.clearTimeout(this._blinkStartTimeout);\n      this._blinkStartTimeout = null;\n    }\n    if (this._animationFrame) {\n      window.cancelAnimationFrame(this._animationFrame);\n      this._animationFrame = null;\n    }\n  }\n\n  public restartBlinkAnimation(): void {\n    if (this.isPaused) {\n      return;\n    }\n    // Save a timestamp so that the restart can be done on the next interval\n    this._animationTimeRestarted = Date.now();\n    // Force a cursor render to ensure it's visible and in the correct position\n    this.isCursorVisible = true;\n    if (!this._animationFrame) {\n      this._animationFrame = window.requestAnimationFrame(() => {\n        this._renderCallback();\n        this._animationFrame = null;\n      });\n    }\n  }\n\n  private _restartInterval(timeToStart: number = BLINK_INTERVAL): void {\n    // Clear any existing interval\n    if (this._blinkInterval) {\n      window.clearInterval(this._blinkInterval);\n    }\n\n    // Setup the initial timeout which will hide the cursor, this is done before\n    // the regular interval is setup in order to support restarting the blink\n    // animation in a lightweight way (without thrashing clearInterval and\n    // setInterval).\n    this._blinkStartTimeout = <number><any>setTimeout(() => {\n      // Check if another animation restart was requested while this was being\n      // started\n      if (this._animationTimeRestarted) {\n        const time = BLINK_INTERVAL - (Date.now() - this._animationTimeRestarted);\n        this._animationTimeRestarted = null;\n        if (time > 0) {\n          this._restartInterval(time);\n          return;\n        }\n      }\n\n      // Hide the cursor\n      this.isCursorVisible = false;\n      this._animationFrame = window.requestAnimationFrame(() => {\n        this._renderCallback();\n        this._animationFrame = null;\n      });\n\n      // Setup the blink interval\n      this._blinkInterval = <number><any>setInterval(() => {\n        // Adjust the animation time if it was restarted\n        if (this._animationTimeRestarted) {\n          // calc time diff\n          // Make restart interval do a setTimeout initially?\n          const time = BLINK_INTERVAL - (Date.now() - this._animationTimeRestarted);\n          this._animationTimeRestarted = null;\n          this._restartInterval(time);\n          return;\n        }\n\n        // Invert visibility and render\n        this.isCursorVisible = !this.isCursorVisible;\n        this._animationFrame = window.requestAnimationFrame(() => {\n          this._renderCallback();\n          this._animationFrame = null;\n        });\n      }, BLINK_INTERVAL);\n    }, timeToStart);\n  }\n\n  public pause(): void {\n    this.isCursorVisible = true;\n    if (this._blinkInterval) {\n      window.clearInterval(this._blinkInterval);\n      this._blinkInterval = null;\n    }\n    if (this._blinkStartTimeout) {\n      window.clearTimeout(this._blinkStartTimeout);\n      this._blinkStartTimeout = null;\n    }\n    if (this._animationFrame) {\n      window.cancelAnimationFrame(this._animationFrame);\n      this._animationFrame = null;\n    }\n  }\n\n  public resume(): void {\n    this._animationTimeRestarted = null;\n    this._restartInterval();\n    this.restartBlinkAnimation();\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderDimensions } from 'browser/renderer/Types';\nimport { BaseRenderLayer } from './BaseRenderLayer';\nimport { INVERTED_DEFAULT_COLOR } from 'browser/renderer/atlas/Constants';\nimport { is256Color } from 'browser/renderer/atlas/CharAtlasUtils';\nimport { IColorSet, ILinkifierEvent, ILinkifier } from 'browser/Types';\nimport { IBufferService, IOptionsService } from 'common/services/Services';\n\nexport class LinkRenderLayer extends BaseRenderLayer {\n  private _state: ILinkifierEvent | undefined;\n\n  constructor(\n    container: HTMLElement,\n    zIndex: number,\n    colors: IColorSet,\n    rendererId: number,\n    linkifier: ILinkifier,\n    readonly bufferService: IBufferService,\n    readonly optionsService: IOptionsService\n  ) {\n    super(container, 'link', zIndex, true, colors, rendererId, bufferService, optionsService);\n    linkifier.onLinkHover(e => this._onLinkHover(e));\n    linkifier.onLinkLeave(e => this._onLinkLeave(e));\n  }\n\n  public resize(dim: IRenderDimensions): void {\n    super.resize(dim);\n    // Resizing the canvas discards the contents of the canvas so clear state\n    this._state = undefined;\n  }\n\n  public reset(): void {\n    this._clearCurrentLink();\n  }\n\n  private _clearCurrentLink(): void {\n    if (this._state) {\n      this._clearCells(this._state.x1, this._state.y1, this._state.cols - this._state.x1, 1);\n      const middleRowCount = this._state.y2 - this._state.y1 - 1;\n      if (middleRowCount > 0) {\n        this._clearCells(0, this._state.y1 + 1, this._state.cols, middleRowCount);\n      }\n      this._clearCells(0, this._state.y2, this._state.x2, 1);\n      this._state = undefined;\n    }\n  }\n\n  private _onLinkHover(e: ILinkifierEvent): void {\n    if (e.fg === INVERTED_DEFAULT_COLOR) {\n      this._ctx.fillStyle = this._colors.background.css;\n    } else if (e.fg && is256Color(e.fg)) {\n      // 256 color support\n      this._ctx.fillStyle = this._colors.ansi[e.fg].css;\n    } else {\n      this._ctx.fillStyle = this._colors.foreground.css;\n    }\n\n    if (e.y1 === e.y2) {\n      // Single line link\n      this._fillBottomLineAtCells(e.x1, e.y1, e.x2 - e.x1);\n    } else {\n      // Multi-line link\n      this._fillBottomLineAtCells(e.x1, e.y1, e.cols - e.x1);\n      for (let y = e.y1 + 1; y < e.y2; y++) {\n        this._fillBottomLineAtCells(0, y, e.cols);\n      }\n      this._fillBottomLineAtCells(0, e.y2, e.x2);\n    }\n    this._state = e;\n  }\n\n  private _onLinkLeave(e: ILinkifierEvent): void {\n    this._clearCurrentLink();\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ILinkifierEvent, ILinkMatcher, LinkMatcherHandler, ILinkMatcherOptions, ILinkifier, IMouseZoneManager, IMouseZone, IRegisteredLinkMatcher } from 'browser/Types';\nimport { IBufferStringIteratorResult } from 'common/buffer/Types';\nimport { getStringCellWidth } from 'common/CharWidth';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { ILogService, IBufferService } from 'common/services/Services';\n\n/**\n * Limit of the unwrapping line expansion (overscan) at the top and bottom\n * of the actual viewport in ASCII characters.\n * A limit of 2000 should match most sane urls.\n */\nconst OVERSCAN_CHAR_LIMIT = 2000;\n\n/**\n * The Linkifier applies links to rows shortly after they have been refreshed.\n */\nexport class Linkifier implements ILinkifier {\n  /**\n   * The time to wait after a row is changed before it is linkified. This prevents\n   * the costly operation of searching every row multiple times, potentially a\n   * huge amount of times.\n   */\n  protected static _timeBeforeLatency = 200;\n\n  protected _linkMatchers: IRegisteredLinkMatcher[] = [];\n\n  private _mouseZoneManager: IMouseZoneManager | undefined;\n  private _element: HTMLElement | undefined;\n\n  private _rowsTimeoutId: number | undefined;\n  private _nextLinkMatcherId = 0;\n  private _rowsToLinkify: { start: number | undefined, end: number | undefined };\n\n  private _onLinkHover = new EventEmitter<ILinkifierEvent>();\n  public get onLinkHover(): IEvent<ILinkifierEvent> { return this._onLinkHover.event; }\n  private _onLinkLeave = new EventEmitter<ILinkifierEvent>();\n  public get onLinkLeave(): IEvent<ILinkifierEvent> { return this._onLinkLeave.event; }\n  private _onLinkTooltip = new EventEmitter<ILinkifierEvent>();\n  public get onLinkTooltip(): IEvent<ILinkifierEvent> { return this._onLinkTooltip.event; }\n\n  constructor(\n    protected readonly _bufferService: IBufferService,\n    private readonly _logService: ILogService\n  ) {\n    this._rowsToLinkify = {\n      start: undefined,\n      end: undefined\n    };\n  }\n\n  /**\n   * Attaches the linkifier to the DOM, enabling linkification.\n   * @param mouseZoneManager The mouse zone manager to register link zones with.\n   */\n  public attachToDom(element: HTMLElement, mouseZoneManager: IMouseZoneManager): void {\n    this._element = element;\n    this._mouseZoneManager = mouseZoneManager;\n  }\n\n  /**\n   * Queue linkification on a set of rows.\n   * @param start The row to linkify from (inclusive).\n   * @param end The row to linkify to (inclusive).\n   */\n  public linkifyRows(start: number, end: number): void {\n    // Don't attempt linkify if not yet attached to DOM\n    if (!this._mouseZoneManager) {\n      return;\n    }\n\n    // Increase range to linkify\n    if (this._rowsToLinkify.start === undefined || this._rowsToLinkify.end === undefined) {\n      this._rowsToLinkify.start = start;\n      this._rowsToLinkify.end = end;\n    } else {\n      this._rowsToLinkify.start = Math.min(this._rowsToLinkify.start, start);\n      this._rowsToLinkify.end = Math.max(this._rowsToLinkify.end, end);\n    }\n\n    // Clear out any existing links on this row range\n    this._mouseZoneManager.clearAll(start, end);\n\n    // Restart timer\n    if (this._rowsTimeoutId) {\n      clearTimeout(this._rowsTimeoutId);\n    }\n    this._rowsTimeoutId = <number><any>setTimeout(() => this._linkifyRows(), Linkifier._timeBeforeLatency);\n  }\n\n  /**\n   * Linkifies the rows requested.\n   */\n  private _linkifyRows(): void {\n    this._rowsTimeoutId = undefined;\n    const buffer = this._bufferService.buffer;\n\n    if (this._rowsToLinkify.start === undefined || this._rowsToLinkify.end === undefined) {\n      this._logService.debug('_rowToLinkify was unset before _linkifyRows was called');\n      return;\n    }\n\n    // Ensure the start row exists\n    const absoluteRowIndexStart = buffer.ydisp + this._rowsToLinkify.start;\n    if (absoluteRowIndexStart >= buffer.lines.length) {\n      return;\n    }\n\n    // Invalidate bad end row values (if a resize happened)\n    const absoluteRowIndexEnd = buffer.ydisp + Math.min(this._rowsToLinkify.end, this._bufferService.rows) + 1;\n\n    // Iterate over the range of unwrapped content strings within start..end\n    // (excluding).\n    // _doLinkifyRow gets full unwrapped lines with the start row as buffer offset\n    // for every matcher.\n    // The unwrapping is needed to also match content that got wrapped across\n    // several buffer lines. To avoid a worst case scenario where the whole buffer\n    // contains just a single unwrapped string we limit this line expansion beyond\n    // the viewport to +OVERSCAN_CHAR_LIMIT chars (overscan) at top and bottom.\n    // This comes with the tradeoff that matches longer than OVERSCAN_CHAR_LIMIT\n    // chars will not match anymore at the viewport borders.\n    const overscanLineLimit = Math.ceil(OVERSCAN_CHAR_LIMIT / this._bufferService.cols);\n    const iterator = this._bufferService.buffer.iterator(\n      false, absoluteRowIndexStart, absoluteRowIndexEnd, overscanLineLimit, overscanLineLimit);\n    while (iterator.hasNext()) {\n      const lineData: IBufferStringIteratorResult = iterator.next();\n      for (let i = 0; i < this._linkMatchers.length; i++) {\n        this._doLinkifyRow(lineData.range.first, lineData.content, this._linkMatchers[i]);\n      }\n    }\n\n    this._rowsToLinkify.start = undefined;\n    this._rowsToLinkify.end = undefined;\n  }\n\n  /**\n   * Registers a link matcher, allowing custom link patterns to be matched and\n   * handled.\n   * @param regex The regular expression to search for. Specifically, this\n   * searches the textContent of the rows. You will want to use \\s to match a\n   * space ' ' character for example.\n   * @param handler The callback when the link is called.\n   * @param options Options for the link matcher.\n   * @return The ID of the new matcher, this can be used to deregister.\n   */\n  public registerLinkMatcher(regex: RegExp, handler: LinkMatcherHandler, options: ILinkMatcherOptions = {}): number {\n    if (!handler) {\n      throw new Error('handler must be defined');\n    }\n    const matcher: IRegisteredLinkMatcher = {\n      id: this._nextLinkMatcherId++,\n      regex,\n      handler,\n      matchIndex: options.matchIndex,\n      validationCallback: options.validationCallback,\n      hoverTooltipCallback: options.tooltipCallback,\n      hoverLeaveCallback: options.leaveCallback,\n      willLinkActivate: options.willLinkActivate,\n      priority: options.priority || 0\n    };\n    this._addLinkMatcherToList(matcher);\n    return matcher.id;\n  }\n\n  /**\n   * Inserts a link matcher to the list in the correct position based on the\n   * priority of each link matcher. New link matchers of equal priority are\n   * considered after older link matchers.\n   * @param matcher The link matcher to be added.\n   */\n  private _addLinkMatcherToList(matcher: IRegisteredLinkMatcher): void {\n    if (this._linkMatchers.length === 0) {\n      this._linkMatchers.push(matcher);\n      return;\n    }\n\n    for (let i = this._linkMatchers.length - 1; i >= 0; i--) {\n      if (matcher.priority <= this._linkMatchers[i].priority) {\n        this._linkMatchers.splice(i + 1, 0, matcher);\n        return;\n      }\n    }\n\n    this._linkMatchers.splice(0, 0, matcher);\n  }\n\n  /**\n   * Deregisters a link matcher if it has been registered.\n   * @param matcherId The link matcher's ID (returned after register)\n   * @return Whether a link matcher was found and deregistered.\n   */\n  public deregisterLinkMatcher(matcherId: number): boolean {\n    for (let i = 0; i < this._linkMatchers.length; i++) {\n      if (this._linkMatchers[i].id === matcherId) {\n        this._linkMatchers.splice(i, 1);\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Linkifies a row given a specific handler.\n   * @param rowIndex The row index to linkify (absolute index).\n   * @param text string content of the unwrapped row.\n   * @param matcher The link matcher for this line.\n   */\n  private _doLinkifyRow(rowIndex: number, text: string, matcher: ILinkMatcher): void {\n    // clone regex to do a global search on text\n    const rex = new RegExp(matcher.regex.source, matcher.regex.flags + 'g');\n    let match;\n    let stringIndex = -1;\n    while ((match = rex.exec(text)) !== null) {\n      const uri = match[typeof matcher.matchIndex !== 'number' ? 0 : matcher.matchIndex];\n      if (!uri) {\n        // something matched but does not comply with the given matchIndex\n        // since this is most likely a bug the regex itself we simply do nothing here\n        this._logService.debug('match found without corresponding matchIndex', match, matcher);\n        break;\n      }\n\n      // Get index, match.index is for the outer match which includes negated chars\n      // therefore we cannot use match.index directly, instead we search the position\n      // of the match group in text again\n      // also correct regex and string search offsets for the next loop run\n      stringIndex = text.indexOf(uri, stringIndex + 1);\n      rex.lastIndex = stringIndex + uri.length;\n      if (stringIndex < 0) {\n        // invalid stringIndex (should not have happened)\n        break;\n      }\n\n      // get the buffer index as [absolute row, col] for the match\n      const bufferIndex = this._bufferService.buffer.stringIndexToBufferIndex(rowIndex, stringIndex);\n      if (bufferIndex[0] < 0) {\n        // invalid bufferIndex (should not have happened)\n        break;\n      }\n\n      const line = this._bufferService.buffer.lines.get(bufferIndex[0]);\n      if (!line) {\n        break;\n      }\n\n      const attr = line.getFg(bufferIndex[1]);\n      const fg = attr ? (attr >> 9) & 0x1ff : undefined;\n\n      if (matcher.validationCallback) {\n        matcher.validationCallback(uri, isValid => {\n          // Discard link if the line has already changed\n          if (this._rowsTimeoutId) {\n            return;\n          }\n          if (isValid) {\n            this._addLink(bufferIndex[1], bufferIndex[0] - this._bufferService.buffer.ydisp, uri, matcher, fg);\n          }\n        });\n      } else {\n        this._addLink(bufferIndex[1], bufferIndex[0] - this._bufferService.buffer.ydisp, uri, matcher, fg);\n      }\n    }\n  }\n\n  /**\n   * Registers a link to the mouse zone manager.\n   * @param x The column the link starts.\n   * @param y The row the link is on.\n   * @param uri The URI of the link.\n   * @param matcher The link matcher for the link.\n   * @param fg The link color for hover event.\n   */\n  private _addLink(x: number, y: number, uri: string, matcher: ILinkMatcher, fg: number | undefined): void {\n    if (!this._mouseZoneManager || !this._element) {\n      return;\n    }\n\n    const width = getStringCellWidth(uri);\n    const x1 = x % this._bufferService.cols;\n    const y1 = y + Math.floor(x / this._bufferService.cols);\n    let x2 = (x1 + width) % this._bufferService.cols;\n    let y2 = y1 + Math.floor((x1 + width) / this._bufferService.cols);\n    if (x2 === 0) {\n      x2 = this._bufferService.cols;\n      y2--;\n    }\n\n    this._mouseZoneManager.add(new MouseZone(\n      x1 + 1,\n      y1 + 1,\n      x2 + 1,\n      y2 + 1,\n      e => {\n        if (matcher.handler) {\n          return matcher.handler(e, uri);\n        }\n        window.open(uri, '_blank');\n      },\n      () => {\n        this._onLinkHover.fire(this._createLinkHoverEvent(x1, y1, x2, y2, fg));\n        this._element!.classList.add('xterm-cursor-pointer');\n      },\n      e => {\n        this._onLinkTooltip.fire(this._createLinkHoverEvent(x1, y1, x2, y2, fg));\n        if (matcher.hoverTooltipCallback) {\n          matcher.hoverTooltipCallback(e, uri);\n        }\n      },\n      () => {\n        this._onLinkLeave.fire(this._createLinkHoverEvent(x1, y1, x2, y2, fg));\n        this._element!.classList.remove('xterm-cursor-pointer');\n        if (matcher.hoverLeaveCallback) {\n          matcher.hoverLeaveCallback();\n        }\n      },\n      e => {\n        if (matcher.willLinkActivate) {\n          return matcher.willLinkActivate(e, uri);\n        }\n        return true;\n      }\n    ));\n  }\n\n  private _createLinkHoverEvent(x1: number, y1: number, x2: number, y2: number, fg: number | undefined): ILinkifierEvent {\n    return { x1, y1, x2, y2, cols: this._bufferService.cols, fg };\n  }\n}\n\nexport class MouseZone implements IMouseZone {\n  constructor(\n    public x1: number,\n    public y1: number,\n    public x2: number,\n    public y2: number,\n    public clickCallback: (e: MouseEvent) => any,\n    public hoverCallback: (e: MouseEvent) => any,\n    public tooltipCallback: (e: MouseEvent) => any,\n    public leaveCallback: () => void,\n    public willLinkActivate: (e: MouseEvent) => boolean\n  ) {\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ISelectionRedrawRequestEvent } from 'browser/selection/Types';\nimport { IBuffer } from 'common/buffer/Types';\nimport { IBufferLine, IDisposable } from 'common/Types';\nimport * as Browser from 'common/Platform';\nimport { SelectionModel } from 'browser/selection/SelectionModel';\nimport { CellData } from 'common/buffer/CellData';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { ICharSizeService, IMouseService, ISelectionService } from 'browser/services/Services';\nimport { IBufferService, IOptionsService, ICoreService } from 'common/services/Services';\nimport { getCoordsRelativeToElement } from 'browser/input/Mouse';\nimport { moveToCellSequence } from 'browser/input/MoveToCell';\n\n/**\n * The number of pixels the mouse needs to be above or below the viewport in\n * order to scroll at the maximum speed.\n */\nconst DRAG_SCROLL_MAX_THRESHOLD = 50;\n\n/**\n * The maximum scrolling speed\n */\nconst DRAG_SCROLL_MAX_SPEED = 15;\n\n/**\n * The number of milliseconds between drag scroll updates.\n */\nconst DRAG_SCROLL_INTERVAL = 50;\n\n/**\n * The maximum amount of time that can have elapsed for an alt click to move the\n * cursor.\n */\nconst ALT_CLICK_MOVE_CURSOR_TIME = 500;\n\nconst NON_BREAKING_SPACE_CHAR = String.fromCharCode(160);\nconst ALL_NON_BREAKING_SPACE_REGEX = new RegExp(NON_BREAKING_SPACE_CHAR, 'g');\n\n/**\n * Represents a position of a word on a line.\n */\ninterface IWordPosition {\n  start: number;\n  length: number;\n}\n\n/**\n * A selection mode, this drives how the selection behaves on mouse move.\n */\nexport const enum SelectionMode {\n  NORMAL,\n  WORD,\n  LINE,\n  COLUMN\n}\n\n/**\n * A class that manages the selection of the terminal. With help from\n * SelectionModel, SelectionService handles with all logic associated with\n * dealing with the selection, including handling mouse interaction, wide\n * characters and fetching the actual text within the selection. Rendering is\n * not handled by the SelectionService but the onRedrawRequest event is fired\n * when the selection is ready to be redrawn (on an animation frame).\n */\nexport class SelectionService implements ISelectionService {\n  serviceBrand: any;\n\n  protected _model: SelectionModel;\n\n  /**\n   * The amount to scroll every drag scroll update (depends on how far the mouse\n   * drag is above or below the terminal).\n   */\n  private _dragScrollAmount: number = 0;\n\n  /**\n   * The current selection mode.\n   */\n  protected _activeSelectionMode: SelectionMode;\n\n  /**\n   * A setInterval timer that is active while the mouse is down whose callback\n   * scrolls the viewport when necessary.\n   */\n  private _dragScrollIntervalTimer: number | undefined;\n\n  /**\n   * The animation frame ID used for refreshing the selection.\n   */\n  private _refreshAnimationFrame: number | undefined;\n\n  /**\n   * Whether selection is enabled.\n   */\n  private _enabled = true;\n\n  private _mouseMoveListener: EventListener;\n  private _mouseUpListener: EventListener;\n  private _trimListener: IDisposable;\n  private _workCell: CellData = new CellData();\n\n  private _mouseDownTimeStamp: number = 0;\n\n  private _onLinuxMouseSelection = new EventEmitter<string>();\n  public get onLinuxMouseSelection(): IEvent<string> { return this._onLinuxMouseSelection.event; }\n  private _onRedrawRequest = new EventEmitter<ISelectionRedrawRequestEvent>();\n  public get onRedrawRequest(): IEvent<ISelectionRedrawRequestEvent> { return this._onRedrawRequest.event; }\n  private _onSelectionChange = new EventEmitter<void>();\n  public get onSelectionChange(): IEvent<void> { return this._onSelectionChange.event; }\n\n  constructor(\n    private readonly _scrollLines: (amount: number, suppressEvent: boolean) => void,\n    private readonly _element: HTMLElement,\n    private readonly _screenElement: HTMLElement,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ICoreService private readonly _coreService: ICoreService,\n    @IMouseService private readonly _mouseService: IMouseService,\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    // Init listeners\n    this._mouseMoveListener = event => this._onMouseMove(<MouseEvent>event);\n    this._mouseUpListener = event => this._onMouseUp(<MouseEvent>event);\n    this._coreService.onUserInput(() => {\n      if (this.hasSelection) {\n        this.clearSelection();\n      }\n    });\n    this._trimListener = this._bufferService.buffer.lines.onTrim(amount => this._onTrim(amount));\n    this._bufferService.buffers.onBufferActivate(e => this._onBufferActivate(e));\n\n    this.enable();\n\n    this._model = new SelectionModel(this._bufferService);\n    this._activeSelectionMode = SelectionMode.NORMAL;\n  }\n\n  public dispose(): void {\n    this._removeMouseDownListeners();\n  }\n\n  public reset(): void {\n    this.clearSelection();\n  }\n\n  /**\n   * Disables the selection manager. This is useful for when terminal mouse\n   * are enabled.\n   */\n  public disable(): void {\n    this.clearSelection();\n    this._enabled = false;\n  }\n\n  /**\n   * Enable the selection manager.\n   */\n  public enable(): void {\n    this._enabled = true;\n  }\n\n  public get selectionStart(): [number, number] | undefined { return this._model.finalSelectionStart; }\n  public get selectionEnd(): [number, number] | undefined { return this._model.finalSelectionEnd; }\n\n  /**\n   * Gets whether there is an active text selection.\n   */\n  public get hasSelection(): boolean {\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n    if (!start || !end) {\n      return false;\n    }\n    return start[0] !== end[0] || start[1] !== end[1];\n  }\n\n  /**\n   * Gets the text currently selected.\n   */\n  public get selectionText(): string {\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n    if (!start || !end) {\n      return '';\n    }\n\n    const buffer = this._bufferService.buffer;\n    const result: string[] = [];\n\n    if (this._activeSelectionMode === SelectionMode.COLUMN) {\n      // Ignore zero width selections\n      if (start[0] === end[0]) {\n        return '';\n      }\n\n      for (let i = start[1]; i <= end[1]; i++) {\n        const lineText = buffer.translateBufferLineToString(i, true, start[0], end[0]);\n        result.push(lineText);\n      }\n    } else {\n      // Get first row\n      const startRowEndCol = start[1] === end[1] ? end[0] : undefined;\n      result.push(buffer.translateBufferLineToString(start[1], true, start[0], startRowEndCol));\n\n      // Get middle rows\n      for (let i = start[1] + 1; i <= end[1] - 1; i++) {\n        const bufferLine = buffer.lines.get(i);\n        const lineText = buffer.translateBufferLineToString(i, true);\n        if (bufferLine!.isWrapped) {\n          result[result.length - 1] += lineText;\n        } else {\n          result.push(lineText);\n        }\n      }\n\n      // Get final row\n      if (start[1] !== end[1]) {\n        const bufferLine = buffer.lines.get(end[1]);\n        const lineText = buffer.translateBufferLineToString(end[1], true, 0, end[0]);\n        if (bufferLine!.isWrapped) {\n          result[result.length - 1] += lineText;\n        } else {\n          result.push(lineText);\n        }\n      }\n    }\n\n    // Format string by replacing non-breaking space chars with regular spaces\n    // and joining the array into a multi-line string.\n    const formattedResult = result.map(line => {\n      return line.replace(ALL_NON_BREAKING_SPACE_REGEX, ' ');\n    }).join(Browser.isWindows ? '\\r\\n' : '\\n');\n\n    return formattedResult;\n  }\n\n  /**\n   * Clears the current terminal selection.\n   */\n  public clearSelection(): void {\n    this._model.clearSelection();\n    this._removeMouseDownListeners();\n    this.refresh();\n    this._onSelectionChange.fire();\n  }\n\n  /**\n   * Queues a refresh, redrawing the selection on the next opportunity.\n   * @param isLinuxMouseSelection Whether the selection should be registered as a new\n   * selection on Linux.\n   */\n  public refresh(isLinuxMouseSelection?: boolean): void {\n    // Queue the refresh for the renderer\n    if (!this._refreshAnimationFrame) {\n      this._refreshAnimationFrame = window.requestAnimationFrame(() => this._refresh());\n    }\n\n    // If the platform is Linux and the refresh call comes from a mouse event,\n    // we need to update the selection for middle click to paste selection.\n    if (Browser.isLinux && isLinuxMouseSelection) {\n      const selectionText = this.selectionText;\n      if (selectionText.length) {\n        this._onLinuxMouseSelection.fire(this.selectionText);\n      }\n    }\n  }\n\n  /**\n   * Fires the refresh event, causing consumers to pick it up and redraw the\n   * selection state.\n   */\n  private _refresh(): void {\n    this._refreshAnimationFrame = undefined;\n    this._onRedrawRequest.fire({\n      start: this._model.finalSelectionStart,\n      end: this._model.finalSelectionEnd,\n      columnSelectMode: this._activeSelectionMode === SelectionMode.COLUMN\n    });\n  }\n\n  /**\n   * Checks if the current click was inside the current selection\n   * @param event The mouse event\n   */\n  public isClickInSelection(event: MouseEvent): boolean {\n    const coords = this._getMouseBufferCoords(event);\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n\n    if (!start || !end || !coords) {\n      return false;\n    }\n\n    return this._areCoordsInSelection(coords, start, end);\n  }\n\n  protected _areCoordsInSelection(coords: [number, number], start: [number, number], end: [number, number]): boolean {\n    return (coords[1] > start[1] && coords[1] < end[1]) ||\n        (start[1] === end[1] && coords[1] === start[1] && coords[0] >= start[0] && coords[0] < end[0]) ||\n        (start[1] < end[1] && coords[1] === end[1] && coords[0] < end[0]) ||\n        (start[1] < end[1] && coords[1] === start[1] && coords[0] >= start[0]);\n  }\n\n  /**\n   * Selects word at the current mouse event coordinates.\n   * @param event The mouse event.\n   */\n  public selectWordAtCursor(event: MouseEvent): void {\n    const coords = this._getMouseBufferCoords(event);\n    if (coords) {\n      this._selectWordAt(coords, false);\n      this._model.selectionEnd = undefined;\n      this.refresh(true);\n    }\n  }\n\n  /**\n   * Selects all text within the terminal.\n   */\n  public selectAll(): void {\n    this._model.isSelectAllActive = true;\n    this.refresh();\n    this._onSelectionChange.fire();\n  }\n\n  public selectLines(start: number, end: number): void {\n    this._model.clearSelection();\n    start = Math.max(start, 0);\n    end = Math.min(end, this._bufferService.buffer.lines.length - 1);\n    this._model.selectionStart = [0, start];\n    this._model.selectionEnd = [this._bufferService.cols, end];\n    this.refresh();\n    this._onSelectionChange.fire();\n  }\n\n  /**\n   * Handle the buffer being trimmed, adjust the selection position.\n   * @param amount The amount the buffer is being trimmed.\n   */\n  private _onTrim(amount: number): void {\n    const needsRefresh = this._model.onTrim(amount);\n    if (needsRefresh) {\n      this.refresh();\n    }\n  }\n\n  /**\n   * Gets the 0-based [x, y] buffer coordinates of the current mouse event.\n   * @param event The mouse event.\n   */\n  private _getMouseBufferCoords(event: MouseEvent): [number, number] | undefined {\n    const coords = this._mouseService.getCoords(event, this._screenElement, this._bufferService.cols, this._bufferService.rows, true);\n    if (!coords) {\n      return undefined;\n    }\n\n    // Convert to 0-based\n    coords[0]--;\n    coords[1]--;\n\n    // Convert viewport coords to buffer coords\n    coords[1] += this._bufferService.buffer.ydisp;\n    return coords;\n  }\n\n  /**\n   * Gets the amount the viewport should be scrolled based on how far out of the\n   * terminal the mouse is.\n   * @param event The mouse event.\n   */\n  private _getMouseEventScrollAmount(event: MouseEvent): number {\n    let offset = getCoordsRelativeToElement(event, this._screenElement)[1];\n    const terminalHeight = this._bufferService.rows * Math.ceil(this._charSizeService.height * this._optionsService.options.lineHeight);\n    if (offset >= 0 && offset <= terminalHeight) {\n      return 0;\n    }\n    if (offset > terminalHeight) {\n      offset -= terminalHeight;\n    }\n\n    offset = Math.min(Math.max(offset, -DRAG_SCROLL_MAX_THRESHOLD), DRAG_SCROLL_MAX_THRESHOLD);\n    offset /= DRAG_SCROLL_MAX_THRESHOLD;\n    return (offset / Math.abs(offset)) + Math.round(offset * (DRAG_SCROLL_MAX_SPEED - 1));\n  }\n\n  /**\n   * Returns whether the selection manager should force selection, regardless of\n   * whether the terminal is in mouse events mode.\n   * @param event The mouse event.\n   */\n  public shouldForceSelection(event: MouseEvent): boolean {\n    if (Browser.isMac) {\n      return event.altKey && this._optionsService.options.macOptionClickForcesSelection;\n    }\n\n    return event.shiftKey;\n  }\n\n  /**\n   * Handles te mousedown event, setting up for a new selection.\n   * @param event The mousedown event.\n   */\n  public onMouseDown(event: MouseEvent): void {\n    this._mouseDownTimeStamp = event.timeStamp;\n    // If we have selection, we want the context menu on right click even if the\n    // terminal is in mouse mode.\n    if (event.button === 2 && this.hasSelection) {\n      return;\n    }\n\n    // Only action the primary button\n    if (event.button !== 0) {\n      return;\n    }\n\n    // Allow selection when using a specific modifier key, even when disabled\n    if (!this._enabled) {\n      if (!this.shouldForceSelection(event)) {\n        return;\n      }\n\n      // Don't send the mouse down event to the current process, we want to select\n      event.stopPropagation();\n    }\n\n    // Tell the browser not to start a regular selection\n    event.preventDefault();\n\n    // Reset drag scroll state\n    this._dragScrollAmount = 0;\n\n    if (this._enabled && event.shiftKey) {\n      this._onIncrementalClick(event);\n    } else {\n      if (event.detail === 1) {\n        this._onSingleClick(event);\n      } else if (event.detail === 2) {\n        this._onDoubleClick(event);\n      } else if (event.detail === 3) {\n        this._onTripleClick(event);\n      }\n    }\n\n    this._addMouseDownListeners();\n    this.refresh(true);\n  }\n\n  /**\n   * Adds listeners when mousedown is triggered.\n   */\n  private _addMouseDownListeners(): void {\n    // Listen on the document so that dragging outside of viewport works\n    if (this._screenElement.ownerDocument) {\n      this._screenElement.ownerDocument.addEventListener('mousemove', this._mouseMoveListener);\n      this._screenElement.ownerDocument.addEventListener('mouseup', this._mouseUpListener);\n    }\n    this._dragScrollIntervalTimer = window.setInterval(() => this._dragScroll(), DRAG_SCROLL_INTERVAL);\n  }\n\n  /**\n   * Removes the listeners that are registered when mousedown is triggered.\n   */\n  private _removeMouseDownListeners(): void {\n    if (this._screenElement.ownerDocument) {\n      this._screenElement.ownerDocument.removeEventListener('mousemove', this._mouseMoveListener);\n      this._screenElement.ownerDocument.removeEventListener('mouseup', this._mouseUpListener);\n    }\n    clearInterval(this._dragScrollIntervalTimer);\n    this._dragScrollIntervalTimer = undefined;\n  }\n\n  /**\n   * Performs an incremental click, setting the selection end position to the mouse\n   * position.\n   * @param event The mouse event.\n   */\n  private _onIncrementalClick(event: MouseEvent): void {\n    if (this._model.selectionStart) {\n      this._model.selectionEnd = this._getMouseBufferCoords(event);\n    }\n  }\n\n  /**\n   * Performs a single click, resetting relevant state and setting the selection\n   * start position.\n   * @param event The mouse event.\n   */\n  private _onSingleClick(event: MouseEvent): void {\n    this._model.selectionStartLength = 0;\n    this._model.isSelectAllActive = false;\n    this._activeSelectionMode = this.shouldColumnSelect(event) ? SelectionMode.COLUMN : SelectionMode.NORMAL;\n\n    // Initialize the new selection\n    this._model.selectionStart = this._getMouseBufferCoords(event);\n    if (!this._model.selectionStart) {\n      return;\n    }\n    this._model.selectionEnd = undefined;\n\n    // Ensure the line exists\n    const line = this._bufferService.buffer.lines.get(this._model.selectionStart[1]);\n    if (!line) {\n      return;\n    }\n\n    // Return early if the click event is not in the buffer (eg. in scroll bar)\n    if (line.length === this._model.selectionStart[0]) {\n      return;\n    }\n\n    // If the mouse is over the second half of a wide character, adjust the\n    // selection to cover the whole character\n    if (line.hasWidth(this._model.selectionStart[0]) === 0) {\n      this._model.selectionStart[0]++;\n    }\n  }\n\n  /**\n   * Performs a double click, selecting the current work.\n   * @param event The mouse event.\n   */\n  private _onDoubleClick(event: MouseEvent): void {\n    const coords = this._getMouseBufferCoords(event);\n    if (coords) {\n      this._activeSelectionMode = SelectionMode.WORD;\n      this._selectWordAt(coords, true);\n    }\n  }\n\n  /**\n   * Performs a triple click, selecting the current line and activating line\n   * select mode.\n   * @param event The mouse event.\n   */\n  private _onTripleClick(event: MouseEvent): void {\n    const coords = this._getMouseBufferCoords(event);\n    if (coords) {\n      this._activeSelectionMode = SelectionMode.LINE;\n      this._selectLineAt(coords[1]);\n    }\n  }\n\n  /**\n   * Returns whether the selection manager should operate in column select mode\n   * @param event the mouse or keyboard event\n   */\n  public shouldColumnSelect(event: KeyboardEvent | MouseEvent): boolean {\n    return event.altKey && !(Browser.isMac && this._optionsService.options.macOptionClickForcesSelection);\n  }\n\n  /**\n   * Handles the mousemove event when the mouse button is down, recording the\n   * end of the selection and refreshing the selection.\n   * @param event The mousemove event.\n   */\n  private _onMouseMove(event: MouseEvent): void {\n    // If the mousemove listener is active it means that a selection is\n    // currently being made, we should stop propagation to prevent mouse events\n    // to be sent to the pty.\n    event.stopImmediatePropagation();\n\n    // Do nothing if there is no selection start, this can happen if the first\n    // click in the terminal is an incremental click\n    if (!this._model.selectionStart) {\n      return;\n    }\n\n    // Record the previous position so we know whether to redraw the selection\n    // at the end.\n    const previousSelectionEnd = this._model.selectionEnd ? [this._model.selectionEnd[0], this._model.selectionEnd[1]] : null;\n\n    // Set the initial selection end based on the mouse coordinates\n    this._model.selectionEnd = this._getMouseBufferCoords(event);\n    if (!this._model.selectionEnd) {\n      this.refresh(true);\n      return;\n    }\n\n    // Select the entire line if line select mode is active.\n    if (this._activeSelectionMode === SelectionMode.LINE) {\n      if (this._model.selectionEnd[1] < this._model.selectionStart[1]) {\n        this._model.selectionEnd[0] = 0;\n      } else {\n        this._model.selectionEnd[0] = this._bufferService.cols;\n      }\n    } else if (this._activeSelectionMode === SelectionMode.WORD) {\n      this._selectToWordAt(this._model.selectionEnd);\n    }\n\n    // Determine the amount of scrolling that will happen.\n    this._dragScrollAmount = this._getMouseEventScrollAmount(event);\n\n    // If the cursor was above or below the viewport, make sure it's at the\n    // start or end of the viewport respectively. This should only happen when\n    // NOT in column select mode.\n    if (this._activeSelectionMode !== SelectionMode.COLUMN) {\n      if (this._dragScrollAmount > 0) {\n        this._model.selectionEnd[0] = this._bufferService.cols;\n      } else if (this._dragScrollAmount < 0) {\n        this._model.selectionEnd[0] = 0;\n      }\n    }\n\n    // If the character is a wide character include the cell to the right in the\n    // selection. Note that selections at the very end of the line will never\n    // have a character.\n    const buffer = this._bufferService.buffer;\n    if (this._model.selectionEnd[1] < buffer.lines.length) {\n      const line = buffer.lines.get(this._model.selectionEnd[1]);\n      if (line && line.hasWidth(this._model.selectionEnd[0]) === 0) {\n        this._model.selectionEnd[0]++;\n      }\n    }\n\n    // Only draw here if the selection changes.\n    if (!previousSelectionEnd ||\n      previousSelectionEnd[0] !== this._model.selectionEnd[0] ||\n      previousSelectionEnd[1] !== this._model.selectionEnd[1]) {\n      this.refresh(true);\n    }\n  }\n\n  /**\n   * The callback that occurs every DRAG_SCROLL_INTERVAL ms that does the\n   * scrolling of the viewport.\n   */\n  private _dragScroll(): void {\n    if (!this._model.selectionEnd || !this._model.selectionStart) {\n      return;\n    }\n    if (this._dragScrollAmount) {\n      this._scrollLines(this._dragScrollAmount, false);\n      // Re-evaluate selection\n      // If the cursor was above or below the viewport, make sure it's at the\n      // start or end of the viewport respectively. This should only happen when\n      // NOT in column select mode.\n      const buffer = this._bufferService.buffer;\n      if (this._dragScrollAmount > 0) {\n        if (this._activeSelectionMode !== SelectionMode.COLUMN) {\n          this._model.selectionEnd[0] = this._bufferService.cols;\n        }\n        this._model.selectionEnd[1] = Math.min(buffer.ydisp + this._bufferService.rows, buffer.lines.length - 1);\n      } else {\n        if (this._activeSelectionMode !== SelectionMode.COLUMN) {\n          this._model.selectionEnd[0] = 0;\n        }\n        this._model.selectionEnd[1] = buffer.ydisp;\n      }\n      this.refresh();\n    }\n  }\n\n  /**\n   * Handles the mouseup event, removing the mousedown listeners.\n   * @param event The mouseup event.\n   */\n  private _onMouseUp(event: MouseEvent): void {\n    const timeElapsed = event.timeStamp - this._mouseDownTimeStamp;\n\n    this._removeMouseDownListeners();\n\n    if (this.selectionText.length <= 1 && timeElapsed < ALT_CLICK_MOVE_CURSOR_TIME) {\n      if (event.altKey) {\n        const coordinates = this._mouseService.getCoords(\n          event,\n          this._element,\n          this._bufferService.cols,\n          this._bufferService.rows,\n          false\n        );\n        if (coordinates && coordinates[0] !== undefined && coordinates[1] !== undefined) {\n          const sequence = moveToCellSequence(coordinates[0] - 1, coordinates[1] - 1, this._bufferService, this._coreService.decPrivateModes.applicationCursorKeys);\n          this._coreService.triggerDataEvent(sequence, true);\n        }\n      }\n    } else if (this.hasSelection) {\n      this._onSelectionChange.fire();\n    }\n  }\n\n  private _onBufferActivate(e: {activeBuffer: IBuffer, inactiveBuffer: IBuffer}): void {\n    this.clearSelection();\n    // Only adjust the selection on trim, shiftElements is rarely used (only in\n    // reverseIndex) and delete in a splice is only ever used when the same\n    // number of elements was just added. Given this is could actually be\n    // beneficial to leave the selection as is for these cases.\n    if (this._trimListener) {\n      this._trimListener.dispose();\n    }\n    this._trimListener = e.activeBuffer.lines.onTrim(amount => this._onTrim(amount));\n  }\n\n  /**\n   * Converts a viewport column to the character index on the buffer line, the\n   * latter takes into account wide characters.\n   * @param coords The coordinates to find the 2 index for.\n   */\n  private _convertViewportColToCharacterIndex(bufferLine: IBufferLine, coords: [number, number]): number {\n    let charIndex = coords[0];\n    for (let i = 0; coords[0] >= i; i++) {\n      const length = bufferLine.loadCell(i, this._workCell).getChars().length;\n      if (this._workCell.getWidth() === 0) {\n        // Wide characters aren't included in the line string so decrement the\n        // index so the index is back on the wide character.\n        charIndex--;\n      } else if (length > 1 && coords[0] !== i) {\n        // Emojis take up multiple characters, so adjust accordingly. For these\n        // we don't want ot include the character at the column as we're\n        // returning the start index in the string, not the end index.\n        charIndex += length - 1;\n      }\n    }\n    return charIndex;\n  }\n\n  public setSelection(col: number, row: number, length: number): void {\n    this._model.clearSelection();\n    this._removeMouseDownListeners();\n    this._model.selectionStart = [col, row];\n    this._model.selectionStartLength = length;\n    this.refresh();\n  }\n\n  /**\n   * Gets positional information for the word at the coordinated specified.\n   * @param coords The coordinates to get the word at.\n   */\n  private _getWordAt(coords: [number, number], allowWhitespaceOnlySelection: boolean, followWrappedLinesAbove: boolean = true, followWrappedLinesBelow: boolean = true): IWordPosition | undefined {\n    // Ensure coords are within viewport (eg. not within scroll bar)\n    if (coords[0] >= this._bufferService.cols) {\n      return undefined;\n    }\n\n    const buffer = this._bufferService.buffer;\n    const bufferLine = buffer.lines.get(coords[1]);\n    if (!bufferLine) {\n      return undefined;\n    }\n\n    const line = buffer.translateBufferLineToString(coords[1], false);\n\n    // Get actual index, taking into consideration wide characters\n    let startIndex = this._convertViewportColToCharacterIndex(bufferLine, coords);\n    let endIndex = startIndex;\n\n    // Record offset to be used later\n    const charOffset = coords[0] - startIndex;\n    let leftWideCharCount = 0;\n    let rightWideCharCount = 0;\n    let leftLongCharOffset = 0;\n    let rightLongCharOffset = 0;\n\n    if (line.charAt(startIndex) === ' ') {\n      // Expand until non-whitespace is hit\n      while (startIndex > 0 && line.charAt(startIndex - 1) === ' ') {\n        startIndex--;\n      }\n      while (endIndex < line.length && line.charAt(endIndex + 1) === ' ') {\n        endIndex++;\n      }\n    } else {\n      // Expand until whitespace is hit. This algorithm works by scanning left\n      // and right from the starting position, keeping both the index format\n      // (line) and the column format (bufferLine) in sync. When a wide\n      // character is hit, it is recorded and the column index is adjusted.\n      let startCol = coords[0];\n      let endCol = coords[0];\n\n      // Consider the initial position, skip it and increment the wide char\n      // variable\n      if (bufferLine.getWidth(startCol) === 0) {\n        leftWideCharCount++;\n        startCol--;\n      }\n      if (bufferLine.getWidth(endCol) === 2) {\n        rightWideCharCount++;\n        endCol++;\n      }\n\n      // Adjust the end index for characters whose length are > 1 (emojis)\n      const length = bufferLine.getString(endCol).length;\n      if (length > 1) {\n        rightLongCharOffset += length - 1;\n        endIndex += length - 1;\n      }\n\n      // Expand the string in both directions until a space is hit\n      while (startCol > 0 && startIndex > 0 && !this._isCharWordSeparator(bufferLine.loadCell(startCol - 1, this._workCell))) {\n        bufferLine.loadCell(startCol - 1, this._workCell);\n        const length = this._workCell.getChars().length;\n        if (this._workCell.getWidth() === 0) {\n          // If the next character is a wide char, record it and skip the column\n          leftWideCharCount++;\n          startCol--;\n        } else if (length > 1) {\n          // If the next character's string is longer than 1 char (eg. emoji),\n          // adjust the index\n          leftLongCharOffset += length - 1;\n          startIndex -= length - 1;\n        }\n        startIndex--;\n        startCol--;\n      }\n      while (endCol < bufferLine.length && endIndex + 1 < line.length && !this._isCharWordSeparator(bufferLine.loadCell(endCol + 1, this._workCell))) {\n        bufferLine.loadCell(endCol + 1, this._workCell);\n        const length = this._workCell.getChars().length;\n        if (this._workCell.getWidth() === 2) {\n          // If the next character is a wide char, record it and skip the column\n          rightWideCharCount++;\n          endCol++;\n        } else if (length > 1) {\n          // If the next character's string is longer than 1 char (eg. emoji),\n          // adjust the index\n          rightLongCharOffset += length - 1;\n          endIndex += length - 1;\n        }\n        endIndex++;\n        endCol++;\n      }\n    }\n\n    // Incremenet the end index so it is at the start of the next character\n    endIndex++;\n\n    // Calculate the start _column_, converting the the string indexes back to\n    // column coordinates.\n    let start =\n        startIndex // The index of the selection's start char in the line string\n        + charOffset // The difference between the initial char's column and index\n        - leftWideCharCount // The number of wide chars left of the initial char\n        + leftLongCharOffset; // The number of additional chars left of the initial char added by columns with strings longer than 1 (emojis)\n\n    // Calculate the length in _columns_, converting the the string indexes back\n    // to column coordinates.\n    let length = Math.min(this._bufferService.cols, // Disallow lengths larger than the terminal cols\n        endIndex // The index of the selection's end char in the line string\n        - startIndex // The index of the selection's start char in the line string\n        + leftWideCharCount // The number of wide chars left of the initial char\n        + rightWideCharCount // The number of wide chars right of the initial char (inclusive)\n        - leftLongCharOffset // The number of additional chars left of the initial char added by columns with strings longer than 1 (emojis)\n        - rightLongCharOffset); // The number of additional chars right of the initial char (inclusive) added by columns with strings longer than 1 (emojis)\n\n    if (!allowWhitespaceOnlySelection && line.slice(startIndex, endIndex).trim() === '') {\n      return undefined;\n    }\n\n    // Recurse upwards if the line is wrapped and the word wraps to the above line\n    if (followWrappedLinesAbove) {\n      if (start === 0 && bufferLine.getCodePoint(0) !== 32 /*' '*/) {\n        const previousBufferLine = buffer.lines.get(coords[1] - 1);\n        if (previousBufferLine && bufferLine.isWrapped && previousBufferLine.getCodePoint(this._bufferService.cols - 1) !== 32 /*' '*/) {\n          const previousLineWordPosition = this._getWordAt([this._bufferService.cols - 1, coords[1] - 1], false, true, false);\n          if (previousLineWordPosition) {\n            const offset = this._bufferService.cols - previousLineWordPosition.start;\n            start -= offset;\n            length += offset;\n          }\n        }\n      }\n    }\n\n    // Recurse downwards if the line is wrapped and the word wraps to the next line\n    if (followWrappedLinesBelow) {\n      if (start + length === this._bufferService.cols && bufferLine.getCodePoint(this._bufferService.cols - 1) !== 32 /*' '*/) {\n        const nextBufferLine = buffer.lines.get(coords[1] + 1);\n        if (nextBufferLine && nextBufferLine.isWrapped && nextBufferLine.getCodePoint(0) !== 32 /*' '*/) {\n          const nextLineWordPosition = this._getWordAt([0, coords[1] + 1], false, false, true);\n          if (nextLineWordPosition) {\n            length += nextLineWordPosition.length;\n          }\n        }\n      }\n    }\n\n    return { start, length };\n  }\n\n  /**\n   * Selects the word at the coordinates specified.\n   * @param coords The coordinates to get the word at.\n   * @param allowWhitespaceOnlySelection If whitespace should be selected\n   */\n  protected _selectWordAt(coords: [number, number], allowWhitespaceOnlySelection: boolean): void {\n    const wordPosition = this._getWordAt(coords, allowWhitespaceOnlySelection);\n    if (wordPosition) {\n      // Adjust negative start value\n      while (wordPosition.start < 0) {\n        wordPosition.start += this._bufferService.cols;\n        coords[1]--;\n      }\n      this._model.selectionStart = [wordPosition.start, coords[1]];\n      this._model.selectionStartLength = wordPosition.length;\n    }\n  }\n\n  /**\n   * Sets the selection end to the word at the coordinated specified.\n   * @param coords The coordinates to get the word at.\n   */\n  private _selectToWordAt(coords: [number, number]): void {\n    const wordPosition = this._getWordAt(coords, true);\n    if (wordPosition) {\n      let endRow = coords[1];\n\n      // Adjust negative start value\n      while (wordPosition.start < 0) {\n        wordPosition.start += this._bufferService.cols;\n        endRow--;\n      }\n\n      // Adjust wrapped length value, this only needs to happen when values are reversed as in that\n      // case we're interested in the start of the word, not the end\n      if (!this._model.areSelectionValuesReversed()) {\n        while (wordPosition.start + wordPosition.length > this._bufferService.cols) {\n          wordPosition.length -= this._bufferService.cols;\n          endRow++;\n        }\n      }\n\n      this._model.selectionEnd = [this._model.areSelectionValuesReversed() ? wordPosition.start : wordPosition.start + wordPosition.length, endRow];\n    }\n  }\n\n  /**\n   * Gets whether the character is considered a word separator by the select\n   * word logic.\n   * @param char The character to check.\n   */\n  private _isCharWordSeparator(cell: CellData): boolean {\n    // Zero width characters are never separators as they are always to the\n    // right of wide characters\n    if (cell.getWidth() === 0) {\n      return false;\n    }\n    return this._optionsService.options.wordSeparator.indexOf(cell.getChars()) >= 0;\n  }\n\n  /**\n   * Selects the line specified.\n   * @param line The line index.\n   */\n  protected _selectLineAt(line: number): void {\n    const wrappedRange = this._bufferService.buffer.getWrappedRangeForLine(line);\n    this._model.selectionStart = [0, wrappedRange.first];\n    this._model.selectionEnd = [this._bufferService.cols, wrappedRange.last];\n    this._model.selectionStartLength = 0;\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferService } from 'common/services/Services';\n\n/**\n * Represents a selection within the buffer. This model only cares about column\n * and row coordinates, not wide characters.\n */\nexport class SelectionModel {\n  /**\n   * Whether select all is currently active.\n   */\n  public isSelectAllActive: boolean = false;\n\n  /**\n   * The minimal length of the selection from the start position. When double\n   * clicking on a word, the word will be selected which makes the selection\n   * start at the start of the word and makes this variable the length.\n   */\n  public selectionStartLength: number = 0;\n\n  /**\n   * The [x, y] position the selection starts at.\n   */\n  public selectionStart: [number, number] | undefined;\n\n  /**\n   * The [x, y] position the selection ends at.\n   */\n  public selectionEnd: [number, number] | undefined;\n\n  constructor(\n    private _bufferService: IBufferService\n  ) {\n  }\n\n  /**\n   * Clears the current selection.\n   */\n  public clearSelection(): void {\n    this.selectionStart = undefined;\n    this.selectionEnd = undefined;\n    this.isSelectAllActive = false;\n    this.selectionStartLength = 0;\n  }\n\n  /**\n   * The final selection start, taking into consideration select all.\n   */\n  public get finalSelectionStart(): [number, number] | undefined {\n    if (this.isSelectAllActive) {\n      return [0, 0];\n    }\n\n    if (!this.selectionEnd || !this.selectionStart) {\n      return this.selectionStart;\n    }\n\n    return this.areSelectionValuesReversed() ? this.selectionEnd : this.selectionStart;\n  }\n\n  /**\n   * The final selection end, taking into consideration select all, double click\n   * word selection and triple click line selection.\n   */\n  public get finalSelectionEnd(): [number, number] | undefined {\n    if (this.isSelectAllActive) {\n      return [this._bufferService.cols, this._bufferService.buffer.ybase + this._bufferService.rows - 1];\n    }\n\n    if (!this.selectionStart) {\n      return undefined;\n    }\n\n    // Use the selection start + length if the end doesn't exist or they're reversed\n    if (!this.selectionEnd || this.areSelectionValuesReversed()) {\n      const startPlusLength = this.selectionStart[0] + this.selectionStartLength;\n      if (startPlusLength > this._bufferService.cols) {\n        return [startPlusLength % this._bufferService.cols, this.selectionStart[1] + Math.floor(startPlusLength / this._bufferService.cols)];\n      }\n      return [startPlusLength, this.selectionStart[1]];\n    }\n\n    // Ensure the the word/line is selected after a double/triple click\n    if (this.selectionStartLength) {\n      // Select the larger of the two when start and end are on the same line\n      if (this.selectionEnd[1] === this.selectionStart[1]) {\n        return [Math.max(this.selectionStart[0] + this.selectionStartLength, this.selectionEnd[0]), this.selectionEnd[1]];\n      }\n    }\n    return this.selectionEnd;\n  }\n\n  /**\n   * Returns whether the selection start and end are reversed.\n   */\n  public areSelectionValuesReversed(): boolean {\n    const start = this.selectionStart;\n    const end = this.selectionEnd;\n    if (!start || !end) {\n      return false;\n    }\n    return start[1] > end[1] || (start[1] === end[1] && start[0] > end[0]);\n  }\n\n  /**\n   * Handle the buffer being trimmed, adjust the selection position.\n   * @param amount The amount the buffer is being trimmed.\n   * @return Whether a refresh is necessary.\n   */\n  public onTrim(amount: number): boolean {\n    // Adjust the selection position based on the trimmed amount.\n    if (this.selectionStart) {\n      this.selectionStart[1] -= amount;\n    }\n    if (this.selectionEnd) {\n      this.selectionEnd[1] -= amount;\n    }\n\n    // The selection has moved off the buffer, clear it.\n    if (this.selectionEnd && this.selectionEnd[1] < 0) {\n      this.clearSelection();\n      return true;\n    }\n\n    // If the selection start is trimmed, ensure the start column is 0.\n    if (this.selectionStart && this.selectionStart[1] < 0) {\n      this.selectionStart[1] = 0;\n    }\n    return false;\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { C0 } from 'common/data/EscapeSequences';\nimport { IBufferService } from 'common/services/Services';\n\nconst enum Direction {\n  UP = 'A',\n  DOWN = 'B',\n  RIGHT = 'C',\n  LEFT = 'D'\n}\n\n/**\n * Concatenates all the arrow sequences together.\n * Resets the starting row to an unwrapped row, moves to the requested row,\n * then moves to requested col.\n */\nexport function moveToCellSequence(targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  const startX = bufferService.buffer.x;\n  const startY = bufferService.buffer.y;\n\n  // The alt buffer should try to navigate between rows\n  if (!bufferService.buffer.hasScrollback) {\n    return resetStartingRow(startX, startY, targetX, targetY, bufferService, applicationCursor) +\n      moveToRequestedRow(startY, targetY, bufferService, applicationCursor) +\n      moveToRequestedCol(startX, startY, targetX, targetY, bufferService, applicationCursor);\n  }\n\n  // Only move horizontally for the normal buffer\n  return moveHorizontallyOnly(startX, startY, targetX, targetY, bufferService, applicationCursor);\n}\n\n/**\n * If the initial position of the cursor is on a row that is wrapped, move the\n * cursor up to the first row that is not wrapped to have accurate vertical\n * positioning.\n */\nfunction resetStartingRow(startX: number, startY: number, targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  if (moveToRequestedRow(startY, targetY, bufferService, applicationCursor).length === 0) {\n    return '';\n  }\n  return repeat(bufferLine(\n    startX, startY, startX,\n    startY - wrappedRowsForRow(bufferService, startY), false, bufferService\n  ).length, sequence(Direction.LEFT, applicationCursor));\n}\n\n/**\n * Using the reset starting and ending row, move to the requested row,\n * ignoring wrapped rows\n */\nfunction moveToRequestedRow(startY: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  const startRow = startY - wrappedRowsForRow(bufferService, startY);\n  const endRow = targetY - wrappedRowsForRow(bufferService, targetY);\n\n  const rowsToMove = Math.abs(startRow - endRow) - wrappedRowsCount(startY, targetY, bufferService);\n\n  return repeat(rowsToMove, sequence(verticalDirection(startY, targetY), applicationCursor));\n}\n\n/**\n * Move to the requested col on the ending row\n */\nfunction moveToRequestedCol(startX: number, startY: number, targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  let startRow;\n  if (moveToRequestedRow(startY, targetY, bufferService, applicationCursor).length > 0) {\n    startRow = targetY - wrappedRowsForRow(bufferService, targetY);\n  } else {\n    startRow = startY;\n  }\n\n  const endRow = targetY;\n  const direction = horizontalDirection(startX, startY, targetX, targetY, bufferService, applicationCursor);\n\n  return repeat(bufferLine(\n    startX, startRow, targetX, endRow,\n    direction === Direction.RIGHT, bufferService\n  ).length, sequence(direction, applicationCursor));\n}\n\nfunction moveHorizontallyOnly(startX: number, startY: number, targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  const direction = horizontalDirection(startX, startY, targetX, targetY, bufferService, applicationCursor);\n  return repeat(Math.abs(startX - targetX), sequence(direction, applicationCursor));\n}\n\n/**\n * Utility functions\n */\n\n/**\n * Calculates the number of wrapped rows between the unwrapped starting and\n * ending rows. These rows need to ignored since the cursor skips over them.\n */\nfunction wrappedRowsCount(startY: number, targetY: number, bufferService: IBufferService): number {\n  let wrappedRows = 0;\n  const startRow = startY - wrappedRowsForRow(bufferService, startY);\n  const endRow = targetY - wrappedRowsForRow(bufferService, targetY);\n\n  for (let i = 0; i < Math.abs(startRow - endRow); i++) {\n    const direction = verticalDirection(startY, targetY) === Direction.UP ? -1 : 1;\n    const line = bufferService.buffer.lines.get(startRow + (direction * i));\n    if (line && line.isWrapped) {\n      wrappedRows++;\n    }\n  }\n\n  return wrappedRows;\n}\n\n/**\n * Calculates the number of wrapped rows that make up a given row.\n * @param currentRow The row to determine how many wrapped rows make it up\n */\nfunction wrappedRowsForRow(bufferService: IBufferService, currentRow: number): number {\n  let rowCount = 0;\n  let line = bufferService.buffer.lines.get(currentRow);\n  let lineWraps = line && line.isWrapped;\n\n  while (lineWraps && currentRow >= 0 && currentRow < bufferService.rows) {\n    rowCount++;\n    line = bufferService.buffer.lines.get(--currentRow);\n    lineWraps = line && line.isWrapped;\n  }\n\n  return rowCount;\n}\n\n/**\n * Direction determiners\n */\n\n/**\n * Determines if the right or left arrow is needed\n */\nfunction horizontalDirection(startX: number, startY: number, targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): Direction {\n  let startRow;\n  if (moveToRequestedRow(targetX, targetY, bufferService, applicationCursor).length > 0) {\n    startRow = targetY - wrappedRowsForRow(bufferService, targetY);\n  } else {\n    startRow = startY;\n  }\n\n  if ((startX < targetX &&\n    startRow <= targetY) || // down/right or same y/right\n    (startX >= targetX &&\n    startRow < targetY)) {  // down/left or same y/left\n    return Direction.RIGHT;\n  }\n  return Direction.LEFT;\n}\n\n/**\n * Determines if the up or down arrow is needed\n */\nfunction verticalDirection(startY: number, targetY: number): Direction {\n  return startY > targetY ? Direction.UP : Direction.DOWN;\n}\n\n/**\n * Constructs the string of chars in the buffer from a starting row and col\n * to an ending row and col\n * @param startCol The starting column position\n * @param startRow The starting row position\n * @param endCol The ending column position\n * @param endRow The ending row position\n * @param forward Direction to move\n */\nfunction bufferLine(\n  startCol: number,\n  startRow: number,\n  endCol: number,\n  endRow: number,\n  forward: boolean,\n  bufferService: IBufferService\n): string {\n  let currentCol = startCol;\n  let currentRow = startRow;\n  let bufferStr = '';\n\n  while (currentCol !== endCol || currentRow !== endRow) {\n    currentCol += forward ? 1 : -1;\n\n    if (forward && currentCol > bufferService.cols - 1) {\n      bufferStr += bufferService.buffer.translateBufferLineToString(\n        currentRow, false, startCol, currentCol\n      );\n      currentCol = 0;\n      startCol = 0;\n      currentRow++;\n    } else if (!forward && currentCol < 0) {\n      bufferStr += bufferService.buffer.translateBufferLineToString(\n        currentRow, false, 0, startCol + 1\n      );\n      currentCol = bufferService.cols - 1;\n      startCol = currentCol;\n      currentRow--;\n    }\n  }\n\n  return bufferStr + bufferService.buffer.translateBufferLineToString(\n    currentRow, false, startCol, currentCol\n  );\n}\n\n/**\n * Constructs the escape sequence for clicking an arrow\n * @param direction The direction to move\n */\nfunction sequence(direction: Direction, applicationCursor: boolean): string {\n  const mod =  applicationCursor ? 'O' : '[';\n  return C0.ESC + mod + direction;\n}\n\n/**\n * Returns a string repeated a given number of times\n * Polyfill from https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/repeat\n * @param count The number of times to repeat the string\n * @param string The string that is to be repeated\n */\nfunction repeat(count: number, str: string): string {\n  count = Math.floor(count);\n  let rpt = '';\n  for (let i = 0; i < count; i++) {\n    rpt += str;\n  }\n  return rpt;\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IOptionsService } from 'common/services/Services';\nimport { ISoundService } from 'browser/services/Services';\n\nexport class SoundService implements ISoundService {\n  serviceBrand: any;\n\n  private static _audioContext: AudioContext;\n\n  static get audioContext(): AudioContext | null {\n    if (!SoundService._audioContext) {\n      const audioContextCtor: typeof AudioContext = (<any>window).AudioContext || (<any>window).webkitAudioContext;\n      if (!audioContextCtor) {\n        console.warn('Web Audio API is not supported by this browser. Consider upgrading to the latest version');\n        return null;\n      }\n      SoundService._audioContext = new audioContextCtor();\n    }\n    return SoundService._audioContext;\n  }\n\n  constructor(\n    @IOptionsService private _optionsService: IOptionsService\n  ) {\n  }\n\n  public playBellSound(): void {\n    const ctx = SoundService.audioContext;\n    if (!ctx) {\n      return;\n    }\n    const bellAudioSource = ctx.createBufferSource();\n    ctx.decodeAudioData(this._base64ToArrayBuffer(this._removeMimeType(this._optionsService.options.bellSound)), (buffer) => {\n      bellAudioSource.buffer = buffer;\n      bellAudioSource.connect(ctx.destination);\n      bellAudioSource.start(0);\n    });\n  }\n\n  private _base64ToArrayBuffer(base64: string): ArrayBuffer {\n    const binaryString = window.atob(base64);\n    const len = binaryString.length;\n    const bytes = new Uint8Array(len);\n\n    for (let i = 0; i < len; i++) {\n      bytes[i] = binaryString.charCodeAt(i);\n    }\n\n    return bytes.buffer;\n  }\n\n  private _removeMimeType(dataURI: string): string {\n    // Split the input to get the mime-type and the data itself\n    const splitUri = dataURI.split(',');\n\n    // Return only the data\n    return splitUri[1];\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Disposable } from 'common/Lifecycle';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { IMouseService, ISelectionService } from 'browser/services/Services';\nimport { IMouseZoneManager, IMouseZone } from 'browser/Types';\nimport { IBufferService } from 'common/services/Services';\n\nconst HOVER_DURATION = 500;\n\n/**\n * The MouseZoneManager allows components to register zones within the terminal\n * that trigger hover and click callbacks.\n *\n * This class was intentionally made not so robust initially as the only case it\n * needed to support was single-line links which never overlap. Improvements can\n * be made in the future.\n */\nexport class MouseZoneManager extends Disposable implements IMouseZoneManager {\n  private _zones: IMouseZone[] = [];\n\n  private _areZonesActive: boolean = false;\n  private _mouseMoveListener: (e: MouseEvent) => any;\n  private _mouseLeaveListener: (e: MouseEvent) => any;\n  private _clickListener: (e: MouseEvent) => any;\n\n  private _tooltipTimeout: number | undefined;\n  private _currentZone: IMouseZone | undefined;\n  private _lastHoverCoords: [number | undefined, number | undefined] = [undefined, undefined];\n  private _initialSelectionLength: number = 0;\n\n  constructor(\n    private readonly _element: HTMLElement,\n    private readonly _screenElement: HTMLElement,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IMouseService private readonly _mouseService: IMouseService,\n    @ISelectionService private readonly _selectionService: ISelectionService\n  ) {\n    super();\n\n    this.register(addDisposableDomListener(this._element, 'mousedown', e => this._onMouseDown(e)));\n\n    // These events are expensive, only listen to it when mouse zones are active\n    this._mouseMoveListener = e => this._onMouseMove(e);\n    this._mouseLeaveListener = e => this._onMouseLeave(e);\n    this._clickListener = e => this._onClick(e);\n  }\n\n  public dispose(): void {\n    super.dispose();\n    this._deactivate();\n  }\n\n  public add(zone: IMouseZone): void {\n    this._zones.push(zone);\n    if (this._zones.length === 1) {\n      this._activate();\n    }\n  }\n\n  public clearAll(start?: number, end?: number): void {\n    // Exit if there's nothing to clear\n    if (this._zones.length === 0) {\n      return;\n    }\n\n    // Clear all if start/end weren't set\n    if (!start || !end) {\n      start = 0;\n      end = this._bufferService.rows - 1;\n    }\n\n    // Iterate through zones and clear them out if they're within the range\n    for (let i = 0; i < this._zones.length; i++) {\n      const zone = this._zones[i];\n      if ((zone.y1 > start && zone.y1 <= end + 1) ||\n          (zone.y2 > start && zone.y2 <= end + 1) ||\n          (zone.y1 < start && zone.y2 > end + 1)) {\n        if (this._currentZone && this._currentZone === zone) {\n          this._currentZone.leaveCallback();\n          this._currentZone = undefined;\n        }\n        this._zones.splice(i--, 1);\n      }\n    }\n\n    // Deactivate the mouse zone manager if all the zones have been removed\n    if (this._zones.length === 0) {\n      this._deactivate();\n    }\n  }\n\n  private _activate(): void {\n    if (!this._areZonesActive) {\n      this._areZonesActive = true;\n      this._element.addEventListener('mousemove', this._mouseMoveListener);\n      this._element.addEventListener('mouseleave', this._mouseLeaveListener);\n      this._element.addEventListener('click', this._clickListener);\n    }\n  }\n\n  private _deactivate(): void {\n    if (this._areZonesActive) {\n      this._areZonesActive = false;\n      this._element.removeEventListener('mousemove', this._mouseMoveListener);\n      this._element.removeEventListener('mouseleave', this._mouseLeaveListener);\n      this._element.removeEventListener('click', this._clickListener);\n    }\n  }\n\n  private _onMouseMove(e: MouseEvent): void {\n    // TODO: Ideally this would only clear the hover state when the mouse moves\n    // outside of the mouse zone\n    if (this._lastHoverCoords[0] !== e.pageX || this._lastHoverCoords[1] !== e.pageY) {\n      this._onHover(e);\n      // Record the current coordinates\n      this._lastHoverCoords = [e.pageX, e.pageY];\n    }\n  }\n\n  private _onHover(e: MouseEvent): void {\n    const zone = this._findZoneEventAt(e);\n\n    // Do nothing if the zone is the same\n    if (zone === this._currentZone) {\n      return;\n    }\n\n    // Fire the hover end callback and cancel any existing timer if a new zone\n    // is being hovered\n    if (this._currentZone) {\n      this._currentZone.leaveCallback();\n      this._currentZone = undefined;\n      if (this._tooltipTimeout) {\n        clearTimeout(this._tooltipTimeout);\n      }\n    }\n\n    // Exit if there is not zone\n    if (!zone) {\n      return;\n    }\n    this._currentZone = zone;\n\n    // Trigger the hover callback\n    if (zone.hoverCallback) {\n      zone.hoverCallback(e);\n    }\n\n    // Restart the tooltip timeout\n    this._tooltipTimeout = <number><any>setTimeout(() => this._onTooltip(e), HOVER_DURATION);\n  }\n\n  private _onTooltip(e: MouseEvent): void {\n    this._tooltipTimeout = undefined;\n    const zone = this._findZoneEventAt(e);\n    if (zone && zone.tooltipCallback) {\n      zone.tooltipCallback(e);\n    }\n  }\n\n  private _onMouseDown(e: MouseEvent): void {\n    // Store current terminal selection length, to check if we're performing\n    // a selection operation\n    this._initialSelectionLength = this._getSelectionLength();\n\n    // Ignore the event if there are no zones active\n    if (!this._areZonesActive) {\n      return;\n    }\n\n    // Find the active zone, prevent event propagation if found to prevent other\n    // components from handling the mouse event.\n    const zone = this._findZoneEventAt(e);\n    if (zone) {\n      if (zone.willLinkActivate(e)) {\n        e.preventDefault();\n        e.stopImmediatePropagation();\n      }\n    }\n  }\n\n  private _onMouseLeave(e: MouseEvent): void {\n    // Fire the hover end callback and cancel any existing timer if the mouse\n    // leaves the terminal element\n    if (this._currentZone) {\n      this._currentZone.leaveCallback();\n      this._currentZone = undefined;\n      if (this._tooltipTimeout) {\n        clearTimeout(this._tooltipTimeout);\n      }\n    }\n  }\n\n  private _onClick(e: MouseEvent): void {\n    // Find the active zone and click it if found and no selection was\n    // being performed\n    const zone = this._findZoneEventAt(e);\n    const currentSelectionLength = this._getSelectionLength();\n\n    if (zone && currentSelectionLength === this._initialSelectionLength) {\n      zone.clickCallback(e);\n      e.preventDefault();\n      e.stopImmediatePropagation();\n    }\n  }\n\n  private _getSelectionLength(): number {\n    const selectionText = this._selectionService.selectionText;\n    return selectionText ? selectionText.length : 0;\n  }\n\n  private _findZoneEventAt(e: MouseEvent): IMouseZone | undefined {\n    const coords = this._mouseService.getCoords(e, this._screenElement, this._bufferService.cols, this._bufferService.rows);\n    if (!coords) {\n      return undefined;\n    }\n    const x = coords[0];\n    const y = coords[1];\n    for (let i = 0; i < this._zones.length; i++) {\n      const zone = this._zones[i];\n      if (zone.y1 === zone.y2) {\n        // Single line link\n        if (y === zone.y1 && x >= zone.x1 && x < zone.x2) {\n          return zone;\n        }\n      } else {\n        // Multi-line link\n        if ((y === zone.y1 && x >= zone.x1) ||\n            (y === zone.y2 && x < zone.x2) ||\n            (y > zone.y1 && y < zone.y2)) {\n          return zone;\n        }\n      }\n    }\n    return undefined;\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport * as Strings from './browser/LocalizableStrings';\nimport { ITerminal } from './Types';\nimport { IBuffer } from 'common/buffer/Types';\nimport { isMac } from 'common/Platform';\nimport { RenderDebouncer } from 'browser/RenderDebouncer';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { Disposable } from 'common/Lifecycle';\nimport { ScreenDprMonitor } from 'browser/ScreenDprMonitor';\nimport { IRenderService } from 'browser/services/Services';\n\nconst MAX_ROWS_TO_READ = 20;\n\nconst enum BoundaryPosition {\n  TOP,\n  BOTTOM\n}\n\nexport class AccessibilityManager extends Disposable {\n  private _accessibilityTreeRoot: HTMLElement;\n  private _rowContainer: HTMLElement;\n  private _rowElements: HTMLElement[];\n  private _liveRegion: HTMLElement;\n  private _liveRegionLineCount: number = 0;\n\n  private _renderRowsDebouncer: RenderDebouncer;\n  private _screenDprMonitor: ScreenDprMonitor;\n\n  private _topBoundaryFocusListener: (e: FocusEvent) => void;\n  private _bottomBoundaryFocusListener: (e: FocusEvent) => void;\n\n  /**\n   * This queue has a character pushed to it for keys that are pressed, if the\n   * next character added to the terminal is equal to the key char then it is\n   * not announced (added to live region) because it has already been announced\n   * by the textarea event (which cannot be canceled). There are some race\n   * condition cases if there is typing while data is streaming, but this covers\n   * the main case of typing into the prompt and inputting the answer to a\n   * question (Y/N, etc.).\n   */\n  private _charsToConsume: string[] = [];\n\n  private _charsToAnnounce: string = '';\n\n  constructor(\n    private readonly _terminal: ITerminal,\n    private readonly _renderService: IRenderService\n  ) {\n    super();\n    this._accessibilityTreeRoot = document.createElement('div');\n    this._accessibilityTreeRoot.classList.add('xterm-accessibility');\n\n    this._rowContainer = document.createElement('div');\n    this._rowContainer.classList.add('xterm-accessibility-tree');\n    this._rowElements = [];\n    for (let i = 0; i < this._terminal.rows; i++) {\n      this._rowElements[i] = this._createAccessibilityTreeNode();\n      this._rowContainer.appendChild(this._rowElements[i]);\n    }\n\n    this._topBoundaryFocusListener = e => this._onBoundaryFocus(e, BoundaryPosition.TOP);\n    this._bottomBoundaryFocusListener = e => this._onBoundaryFocus(e, BoundaryPosition.BOTTOM);\n    this._rowElements[0].addEventListener('focus', this._topBoundaryFocusListener);\n    this._rowElements[this._rowElements.length - 1].addEventListener('focus', this._bottomBoundaryFocusListener);\n\n    this._refreshRowsDimensions();\n    this._accessibilityTreeRoot.appendChild(this._rowContainer);\n\n    this._renderRowsDebouncer = new RenderDebouncer(this._renderRows.bind(this));\n    this._refreshRows();\n\n    this._liveRegion = document.createElement('div');\n    this._liveRegion.classList.add('live-region');\n    this._liveRegion.setAttribute('aria-live', 'assertive');\n    this._accessibilityTreeRoot.appendChild(this._liveRegion);\n\n    this._terminal.element.insertAdjacentElement('afterbegin', this._accessibilityTreeRoot);\n\n    this.register(this._renderRowsDebouncer);\n    this.register(this._terminal.onResize(e => this._onResize(e.rows)));\n    this.register(this._terminal.onRender(e => this._refreshRows(e.start, e.end)));\n    this.register(this._terminal.onScroll(() => this._refreshRows()));\n    // Line feed is an issue as the prompt won't be read out after a command is run\n    this.register(this._terminal.onA11yChar(char => this._onChar(char)));\n    this.register(this._terminal.onLineFeed(() => this._onChar('\\n')));\n    this.register(this._terminal.onA11yTab(spaceCount => this._onTab(spaceCount)));\n    this.register(this._terminal.onKey(e => this._onKey(e.key)));\n    this.register(this._terminal.onBlur(() => this._clearLiveRegion()));\n    this.register(this._renderService.onDimensionsChange(() => this._refreshRowsDimensions()));\n\n    this._screenDprMonitor = new ScreenDprMonitor();\n    this.register(this._screenDprMonitor);\n    this._screenDprMonitor.setListener(() => this._refreshRowsDimensions());\n    // This shouldn't be needed on modern browsers but is present in case the\n    // media query that drives the ScreenDprMonitor isn't supported\n    this.register(addDisposableDomListener(window, 'resize', () => this._refreshRowsDimensions()));\n  }\n\n  public dispose(): void {\n    super.dispose();\n    this._terminal.element.removeChild(this._accessibilityTreeRoot);\n    this._rowElements.length = 0;\n  }\n\n  private _onBoundaryFocus(e: FocusEvent, position: BoundaryPosition): void {\n    const boundaryElement = <HTMLElement>e.target;\n    const beforeBoundaryElement = this._rowElements[position === BoundaryPosition.TOP ? 1 : this._rowElements.length - 2];\n\n    // Don't scroll if the buffer top has reached the end in that direction\n    const posInSet = boundaryElement.getAttribute('aria-posinset');\n    const lastRowPos = position === BoundaryPosition.TOP ? '1' : `${this._terminal.buffer.lines.length}`;\n    if (posInSet === lastRowPos) {\n      return;\n    }\n\n    // Don't scroll when the last focused item was not the second row (focus is going the other\n    // direction)\n    if (e.relatedTarget !== beforeBoundaryElement) {\n      return;\n    }\n\n    // Remove old boundary element from array\n    let topBoundaryElement: HTMLElement;\n    let bottomBoundaryElement: HTMLElement;\n    if (position === BoundaryPosition.TOP) {\n      topBoundaryElement = boundaryElement;\n      bottomBoundaryElement = this._rowElements.pop()!;\n      this._rowContainer.removeChild(bottomBoundaryElement);\n    } else {\n      topBoundaryElement = this._rowElements.shift()!;\n      bottomBoundaryElement = boundaryElement;\n      this._rowContainer.removeChild(topBoundaryElement);\n    }\n\n    // Remove listeners from old boundary elements\n    topBoundaryElement.removeEventListener('focus', this._topBoundaryFocusListener);\n    bottomBoundaryElement.removeEventListener('focus', this._bottomBoundaryFocusListener);\n\n    // Add new element to array/DOM\n    if (position === BoundaryPosition.TOP) {\n      const newElement = this._createAccessibilityTreeNode();\n      this._rowElements.unshift(newElement);\n      this._rowContainer.insertAdjacentElement('afterbegin', newElement);\n    } else {\n      const newElement = this._createAccessibilityTreeNode();\n      this._rowElements.push(newElement);\n      this._rowContainer.appendChild(newElement);\n    }\n\n    // Add listeners to new boundary elements\n    this._rowElements[0].addEventListener('focus', this._topBoundaryFocusListener);\n    this._rowElements[this._rowElements.length - 1].addEventListener('focus', this._bottomBoundaryFocusListener);\n\n    // Scroll up\n    this._terminal.scrollLines(position === BoundaryPosition.TOP ? -1 : 1);\n\n    // Focus new boundary before element\n    this._rowElements[position === BoundaryPosition.TOP ? 1 : this._rowElements.length - 2].focus();\n\n    // Prevent the standard behavior\n    e.preventDefault();\n    e.stopImmediatePropagation();\n  }\n\n  private _onResize(rows: number): void {\n    // Remove bottom boundary listener\n    this._rowElements[this._rowElements.length - 1].removeEventListener('focus', this._bottomBoundaryFocusListener);\n\n    // Grow rows as required\n    for (let i = this._rowContainer.children.length; i < this._terminal.rows; i++) {\n      this._rowElements[i] = this._createAccessibilityTreeNode();\n      this._rowContainer.appendChild(this._rowElements[i]);\n    }\n    // Shrink rows as required\n    while (this._rowElements.length > rows) {\n      this._rowContainer.removeChild(this._rowElements.pop()!);\n    }\n\n    // Add bottom boundary listener\n    this._rowElements[this._rowElements.length - 1].addEventListener('focus', this._bottomBoundaryFocusListener);\n\n    this._refreshRowsDimensions();\n  }\n\n  private _createAccessibilityTreeNode(): HTMLElement {\n    const element = document.createElement('div');\n    element.setAttribute('role', 'listitem');\n    element.tabIndex = -1;\n    this._refreshRowDimensions(element);\n    return element;\n  }\n\n  private _onTab(spaceCount: number): void {\n    for (let i = 0; i < spaceCount; i++) {\n      this._onChar(' ');\n    }\n  }\n\n  private _onChar(char: string): void {\n    if (this._liveRegionLineCount < MAX_ROWS_TO_READ + 1) {\n      if (this._charsToConsume.length > 0) {\n        // Have the screen reader ignore the char if it was just input\n        const shiftedChar = this._charsToConsume.shift();\n        if (shiftedChar !== char) {\n          this._charsToAnnounce += char;\n        }\n      } else {\n        this._charsToAnnounce += char;\n      }\n\n      if (char === '\\n') {\n        this._liveRegionLineCount++;\n        if (this._liveRegionLineCount === MAX_ROWS_TO_READ + 1) {\n          this._liveRegion.textContent += Strings.tooMuchOutput;\n        }\n      }\n\n      // Only detach/attach on mac as otherwise messages can go unaccounced\n      if (isMac) {\n        if (this._liveRegion.textContent && this._liveRegion.textContent.length > 0 && !this._liveRegion.parentNode) {\n          setTimeout(() => {\n            this._accessibilityTreeRoot.appendChild(this._liveRegion);\n          }, 0);\n        }\n      }\n    }\n  }\n\n  private _clearLiveRegion(): void {\n    this._liveRegion.textContent = '';\n    this._liveRegionLineCount = 0;\n\n    // Only detach/attach on mac as otherwise messages can go unaccounced\n    if (isMac) {\n      if (this._liveRegion.parentNode) {\n        this._accessibilityTreeRoot.removeChild(this._liveRegion);\n      }\n    }\n  }\n\n  private _onKey(keyChar: string): void {\n    this._clearLiveRegion();\n    this._charsToConsume.push(keyChar);\n  }\n\n  private _refreshRows(start?: number, end?: number): void {\n    this._renderRowsDebouncer.refresh(start, end, this._terminal.rows);\n  }\n\n  private _renderRows(start: number, end: number): void {\n    const buffer: IBuffer = this._terminal.buffer;\n    const setSize = buffer.lines.length.toString();\n    for (let i = start; i <= end; i++) {\n      const lineData = buffer.translateBufferLineToString(buffer.ydisp + i, true);\n      const posInSet = (buffer.ydisp + i + 1).toString();\n      const element = this._rowElements[i];\n      if (element) {\n        if (lineData.length === 0) {\n          element.innerHTML = '&nbsp;';\n        } else {\n          element.textContent = lineData;\n        }\n        element.setAttribute('aria-posinset', posInSet);\n        element.setAttribute('aria-setsize', setSize);\n      }\n    }\n    this._announceCharacters();\n  }\n\n  private _refreshRowsDimensions(): void {\n    if (!this._renderService.dimensions.actualCellHeight) {\n      return;\n    }\n    if (this._rowElements.length !== this._terminal.rows) {\n      this._onResize(this._terminal.rows);\n    }\n    for (let i = 0; i < this._terminal.rows; i++) {\n      this._refreshRowDimensions(this._rowElements[i]);\n    }\n  }\n\n  private _refreshRowDimensions(element: HTMLElement): void {\n    element.style.height = `${this._renderService.dimensions.actualCellHeight}px`;\n  }\n\n  private _announceCharacters(): void {\n    if (this._charsToAnnounce.length === 0) {\n      return;\n    }\n    this._liveRegion.textContent += this._charsToAnnounce;\n    this._charsToAnnounce = '';\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderer, IRenderDimensions, CharacterJoinerHandler } from 'browser/renderer/Types';\nimport { ITerminal } from '../../Types';\nimport { BOLD_CLASS, ITALIC_CLASS, CURSOR_CLASS, CURSOR_STYLE_BLOCK_CLASS, CURSOR_BLINK_CLASS, CURSOR_STYLE_BAR_CLASS, CURSOR_STYLE_UNDERLINE_CLASS, DomRendererRowFactory } from 'browser/renderer/dom/DomRendererRowFactory';\nimport { INVERTED_DEFAULT_COLOR } from 'browser/renderer/atlas/Constants';\nimport { Disposable } from 'common/Lifecycle';\nimport { IColorSet, ILinkifierEvent } from 'browser/Types';\nimport { ICharSizeService } from 'browser/services/Services';\nimport { IOptionsService } from 'common/services/Services';\n\nconst TERMINAL_CLASS_PREFIX = 'xterm-dom-renderer-owner-';\nconst ROW_CONTAINER_CLASS = 'xterm-rows';\nconst FG_CLASS_PREFIX = 'xterm-fg-';\nconst BG_CLASS_PREFIX = 'xterm-bg-';\nconst FOCUS_CLASS = 'xterm-focus';\nconst SELECTION_CLASS = 'xterm-selection';\n\nlet nextTerminalId = 1;\n\n/**\n * A fallback renderer for when canvas is slow. This is not meant to be\n * particularly fast or feature complete, more just stable and usable for when\n * canvas is not an option.\n */\nexport class DomRenderer extends Disposable implements IRenderer {\n  private _rowFactory: DomRendererRowFactory;\n  private _terminalClass: number = nextTerminalId++;\n\n  private _themeStyleElement: HTMLStyleElement;\n  private _dimensionsStyleElement: HTMLStyleElement;\n  private _rowContainer: HTMLElement;\n  private _rowElements: HTMLElement[] = [];\n  private _selectionContainer: HTMLElement;\n\n  public dimensions: IRenderDimensions;\n\n  constructor(\n    private _terminal: ITerminal,\n    private _colors: IColorSet,\n    private _charSizeService: ICharSizeService,\n    private _optionsService: IOptionsService\n  ) {\n    super();\n\n    this._rowContainer = document.createElement('div');\n    this._rowContainer.classList.add(ROW_CONTAINER_CLASS);\n    this._rowContainer.style.lineHeight = 'normal';\n    this._rowContainer.setAttribute('aria-hidden', 'true');\n    this._refreshRowElements(this._terminal.cols, this._terminal.rows);\n    this._selectionContainer = document.createElement('div');\n    this._selectionContainer.classList.add(SELECTION_CLASS);\n    this._selectionContainer.setAttribute('aria-hidden', 'true');\n\n    this.dimensions = {\n      scaledCharWidth: null,\n      scaledCharHeight: null,\n      scaledCellWidth: null,\n      scaledCellHeight: null,\n      scaledCharLeft: null,\n      scaledCharTop: null,\n      scaledCanvasWidth: null,\n      scaledCanvasHeight: null,\n      canvasWidth: null,\n      canvasHeight: null,\n      actualCellWidth: null,\n      actualCellHeight: null\n    };\n    this._updateDimensions();\n    this._injectCss();\n\n    this._rowFactory = new DomRendererRowFactory(document, this._optionsService);\n\n    this._terminal.element.classList.add(TERMINAL_CLASS_PREFIX + this._terminalClass);\n    this._terminal.screenElement.appendChild(this._rowContainer);\n    this._terminal.screenElement.appendChild(this._selectionContainer);\n\n    this._terminal.linkifier.onLinkHover(e => this._onLinkHover(e));\n    this._terminal.linkifier.onLinkLeave(e => this._onLinkLeave(e));\n  }\n\n  public dispose(): void {\n    this._terminal.element.classList.remove(TERMINAL_CLASS_PREFIX + this._terminalClass);\n    this._terminal.screenElement.removeChild(this._rowContainer);\n    this._terminal.screenElement.removeChild(this._selectionContainer);\n    this._terminal.screenElement.removeChild(this._themeStyleElement);\n    this._terminal.screenElement.removeChild(this._dimensionsStyleElement);\n    super.dispose();\n  }\n\n  private _updateDimensions(): void {\n    this.dimensions.scaledCharWidth = this._charSizeService.width * window.devicePixelRatio;\n    this.dimensions.scaledCharHeight = Math.ceil(this._charSizeService.height * window.devicePixelRatio);\n    this.dimensions.scaledCellWidth = this.dimensions.scaledCharWidth + Math.round(this._terminal.options.letterSpacing);\n    this.dimensions.scaledCellHeight = Math.floor(this.dimensions.scaledCharHeight * this._terminal.options.lineHeight);\n    this.dimensions.scaledCharLeft = 0;\n    this.dimensions.scaledCharTop = 0;\n    this.dimensions.scaledCanvasWidth = this.dimensions.scaledCellWidth * this._terminal.cols;\n    this.dimensions.scaledCanvasHeight = this.dimensions.scaledCellHeight * this._terminal.rows;\n    this.dimensions.canvasWidth = Math.round(this.dimensions.scaledCanvasWidth / window.devicePixelRatio);\n    this.dimensions.canvasHeight = Math.round(this.dimensions.scaledCanvasHeight / window.devicePixelRatio);\n    this.dimensions.actualCellWidth = this.dimensions.canvasWidth / this._terminal.cols;\n    this.dimensions.actualCellHeight = this.dimensions.canvasHeight / this._terminal.rows;\n\n    this._rowElements.forEach(element => {\n      element.style.width = `${this.dimensions.canvasWidth}px`;\n      element.style.height = `${this.dimensions.actualCellHeight}px`;\n      element.style.lineHeight = `${this.dimensions.actualCellHeight}px`;\n      // Make sure rows don't overflow onto following row\n      element.style.overflow = 'hidden';\n    });\n\n    if (!this._dimensionsStyleElement) {\n      this._dimensionsStyleElement = document.createElement('style');\n      this._terminal.screenElement.appendChild(this._dimensionsStyleElement);\n    }\n\n    const styles =\n        `${this._terminalSelector} .${ROW_CONTAINER_CLASS} span {` +\n        ` display: inline-block;` +\n        ` height: 100%;` +\n        ` vertical-align: top;` +\n        ` width: ${this.dimensions.actualCellWidth}px` +\n        `}`;\n\n    this._dimensionsStyleElement.innerHTML = styles;\n\n    this._selectionContainer.style.height = (<any>this._terminal)._viewportElement.style.height;\n    this._terminal.screenElement.style.width = `${this.dimensions.canvasWidth}px`;\n    this._terminal.screenElement.style.height = `${this.dimensions.canvasHeight}px`;\n  }\n\n  public setColors(colors: IColorSet): void {\n    this._colors = colors;\n    this._injectCss();\n  }\n\n  private _injectCss(): void {\n    if (!this._themeStyleElement) {\n      this._themeStyleElement = document.createElement('style');\n      this._terminal.screenElement.appendChild(this._themeStyleElement);\n    }\n\n    // Base CSS\n    let styles =\n        `${this._terminalSelector} .${ROW_CONTAINER_CLASS} {` +\n        ` color: ${this._colors.foreground.css};` +\n        ` background-color: ${this._colors.background.css};` +\n        ` font-family: ${this._terminal.options.fontFamily};` +\n        ` font-size: ${this._terminal.options.fontSize}px;` +\n        `}`;\n    // Text styles\n    styles +=\n        `${this._terminalSelector} span:not(.${BOLD_CLASS}) {` +\n        ` font-weight: ${this._terminal.options.fontWeight};` +\n        `}` +\n        `${this._terminalSelector} span.${BOLD_CLASS} {` +\n        ` font-weight: ${this._terminal.options.fontWeightBold};` +\n        `}` +\n        `${this._terminalSelector} span.${ITALIC_CLASS} {` +\n        ` font-style: italic;` +\n        `}`;\n    // Blink animation\n    styles +=\n        `@keyframes blink_box_shadow {` +\n        ` 50% {` +\n        `  box-shadow: none;` +\n        ` }` +\n        `}`;\n    styles +=\n        `@keyframes blink_block {` +\n        ` 0% {` +\n        `  background-color: ${this._colors.cursor.css};` +\n        `  color: ${this._colors.cursorAccent.css};` +\n        ` }` +\n        ` 50% {` +\n        `  background-color: ${this._colors.cursorAccent.css};` +\n        `  color: ${this._colors.cursor.css};` +\n        ` }` +\n        `}`;\n    // Cursor\n    styles +=\n        `${this._terminalSelector} .${ROW_CONTAINER_CLASS}:not(.${FOCUS_CLASS}) .${CURSOR_CLASS} {` +\n        ` outline: 1px solid ${this._colors.cursor.css};` +\n        ` outline-offset: -1px;` +\n        `}` +\n        `${this._terminalSelector} .${ROW_CONTAINER_CLASS}.${FOCUS_CLASS} .${CURSOR_CLASS}.${CURSOR_BLINK_CLASS}:not(.${CURSOR_STYLE_BLOCK_CLASS}) {` +\n        ` animation: blink_box_shadow 1s step-end infinite;` +\n        `}` +\n        `${this._terminalSelector} .${ROW_CONTAINER_CLASS}.${FOCUS_CLASS} .${CURSOR_CLASS}.${CURSOR_BLINK_CLASS}.${CURSOR_STYLE_BLOCK_CLASS} {` +\n        ` animation: blink_block 1s step-end infinite;` +\n        `}` +\n        `${this._terminalSelector} .${ROW_CONTAINER_CLASS}.${FOCUS_CLASS} .${CURSOR_CLASS}.${CURSOR_STYLE_BLOCK_CLASS} {` +\n        ` background-color: ${this._colors.cursor.css};` +\n        ` color: ${this._colors.cursorAccent.css};` +\n        `}` +\n        `${this._terminalSelector} .${ROW_CONTAINER_CLASS}.${FOCUS_CLASS} .${CURSOR_CLASS}.${CURSOR_STYLE_BAR_CLASS} {` +\n        ` box-shadow: 1px 0 0 ${this._colors.cursor.css} inset;` +\n        `}` +\n        `${this._terminalSelector} .${ROW_CONTAINER_CLASS}.${FOCUS_CLASS} .${CURSOR_CLASS}.${CURSOR_STYLE_UNDERLINE_CLASS} {` +\n        ` box-shadow: 0 -1px 0 ${this._colors.cursor.css} inset;` +\n        `}`;\n    // Selection\n    styles +=\n        `${this._terminalSelector} .${SELECTION_CLASS} {` +\n        ` position: absolute;` +\n        ` top: 0;` +\n        ` left: 0;` +\n        ` z-index: 1;` +\n        ` pointer-events: none;` +\n        `}` +\n        `${this._terminalSelector} .${SELECTION_CLASS} div {` +\n        ` position: absolute;` +\n        ` background-color: ${this._colors.selection.css};` +\n        `}`;\n    // Colors\n    this._colors.ansi.forEach((c, i) => {\n      styles +=\n          `${this._terminalSelector} .${FG_CLASS_PREFIX}${i} { color: ${c.css}; }` +\n          `${this._terminalSelector} .${BG_CLASS_PREFIX}${i} { background-color: ${c.css}; }`;\n    });\n    styles +=\n        `${this._terminalSelector} .${FG_CLASS_PREFIX}${INVERTED_DEFAULT_COLOR} { color: ${this._colors.background.css}; }` +\n        `${this._terminalSelector} .${BG_CLASS_PREFIX}${INVERTED_DEFAULT_COLOR} { background-color: ${this._colors.foreground.css}; }`;\n\n    this._themeStyleElement.innerHTML = styles;\n  }\n\n  public onDevicePixelRatioChange(): void {\n    this._updateDimensions();\n  }\n\n  private _refreshRowElements(cols: number, rows: number): void {\n    // Add missing elements\n    for (let i = this._rowElements.length; i <= rows; i++) {\n      const row = document.createElement('div');\n      this._rowContainer.appendChild(row);\n      this._rowElements.push(row);\n    }\n    // Remove excess elements\n    while (this._rowElements.length > rows) {\n      this._rowContainer.removeChild(this._rowElements.pop());\n    }\n  }\n\n  public onResize(cols: number, rows: number): void {\n    this._refreshRowElements(cols, rows);\n    this._updateDimensions();\n  }\n\n  public onCharSizeChanged(): void {\n    this._updateDimensions();\n  }\n\n  public onBlur(): void {\n    this._rowContainer.classList.remove(FOCUS_CLASS);\n  }\n\n  public onFocus(): void {\n    this._rowContainer.classList.add(FOCUS_CLASS);\n  }\n\n  public onSelectionChanged(start: [number, number], end: [number, number], columnSelectMode: boolean): void {\n    // Remove all selections\n    while (this._selectionContainer.children.length) {\n      this._selectionContainer.removeChild(this._selectionContainer.children[0]);\n    }\n\n    // Selection does not exist\n    if (!start || !end) {\n      return;\n    }\n\n    // Translate from buffer position to viewport position\n    const viewportStartRow = start[1] - this._terminal.buffer.ydisp;\n    const viewportEndRow = end[1] - this._terminal.buffer.ydisp;\n    const viewportCappedStartRow = Math.max(viewportStartRow, 0);\n    const viewportCappedEndRow = Math.min(viewportEndRow, this._terminal.rows - 1);\n\n    // No need to draw the selection\n    if (viewportCappedStartRow >= this._terminal.rows || viewportCappedEndRow < 0) {\n      return;\n    }\n\n    // Create the selections\n    const documentFragment = document.createDocumentFragment();\n\n    if (columnSelectMode) {\n      documentFragment.appendChild(\n        this._createSelectionElement(viewportCappedStartRow, start[0], end[0], viewportCappedEndRow - viewportCappedStartRow + 1)\n      );\n    } else {\n      // Draw first row\n      const startCol = viewportStartRow === viewportCappedStartRow ? start[0] : 0;\n      const endCol = viewportCappedStartRow === viewportCappedEndRow ? end[0] : this._terminal.cols;\n      documentFragment.appendChild(this._createSelectionElement(viewportCappedStartRow, startCol, endCol));\n      // Draw middle rows\n      const middleRowsCount = viewportCappedEndRow - viewportCappedStartRow - 1;\n      documentFragment.appendChild(this._createSelectionElement(viewportCappedStartRow + 1, 0, this._terminal.cols, middleRowsCount));\n      // Draw final row\n      if (viewportCappedStartRow !== viewportCappedEndRow) {\n        // Only draw viewportEndRow if it's not the same as viewporttartRow\n        const endCol = viewportEndRow === viewportCappedEndRow ? end[0] : this._terminal.cols;\n        documentFragment.appendChild(this._createSelectionElement(viewportCappedEndRow, 0, endCol));\n      }\n    }\n    this._selectionContainer.appendChild(documentFragment);\n  }\n\n  /**\n   * Creates a selection element at the specified position.\n   * @param row The row of the selection.\n   * @param colStart The start column.\n   * @param colEnd The end columns.\n   */\n  private _createSelectionElement(row: number, colStart: number, colEnd: number, rowCount: number = 1): HTMLElement {\n    const element = document.createElement('div');\n    element.style.height = `${rowCount * this.dimensions.actualCellHeight}px`;\n    element.style.top = `${row * this.dimensions.actualCellHeight}px`;\n    element.style.left = `${colStart * this.dimensions.actualCellWidth}px`;\n    element.style.width = `${this.dimensions.actualCellWidth * (colEnd - colStart)}px`;\n    return element;\n  }\n\n  public onCursorMove(): void {\n    // No-op, the cursor is drawn when rows are drawn\n  }\n\n  public onOptionsChanged(): void {\n    // Force a refresh\n    this._updateDimensions();\n    this._injectCss();\n    this._terminal.refresh(0, this._terminal.rows - 1);\n  }\n\n  public clear(): void {\n    this._rowElements.forEach(e => e.innerHTML = '');\n  }\n\n  public renderRows(start: number, end: number): void {\n    const terminal = this._terminal;\n\n    const cursorAbsoluteY = terminal.buffer.ybase + terminal.buffer.y;\n    const cursorX = this._terminal.buffer.x;\n    const cursorBlink = this._terminal.options.cursorBlink;\n\n    for (let y = start; y <= end; y++) {\n      const rowElement = this._rowElements[y];\n      rowElement.innerHTML = '';\n\n      const row = y + terminal.buffer.ydisp;\n      const lineData = terminal.buffer.lines.get(row);\n      const cursorStyle = terminal.options.cursorStyle;\n      rowElement.appendChild(this._rowFactory.createRow(lineData, row === cursorAbsoluteY, cursorStyle, cursorX, cursorBlink, this.dimensions.actualCellWidth, terminal.cols));\n    }\n  }\n\n  private get _terminalSelector(): string {\n    return `.${TERMINAL_CLASS_PREFIX}${this._terminalClass}`;\n  }\n\n  public registerCharacterJoiner(handler: CharacterJoinerHandler): number { return -1; }\n  public deregisterCharacterJoiner(joinerId: number): boolean { return false; }\n\n  private _onLinkHover(e: ILinkifierEvent): void {\n    this._setCellUnderline(e.x1, e.x2, e.y1, e.y2, e.cols, true);\n  }\n\n  private _onLinkLeave(e: ILinkifierEvent): void {\n    this._setCellUnderline(e.x1, e.x2, e.y1, e.y2, e.cols, false);\n  }\n\n  private _setCellUnderline(x: number, x2: number, y: number, y2: number, cols: number, enabled: boolean): void {\n    while (x !== x2 || y !== y2) {\n      const row = this._rowElements[y];\n      if (!row) {\n        return;\n      }\n      const span = <HTMLElement>row.children[x];\n      if (span) {\n        span.style.textDecoration = enabled ? 'underline' : 'none';\n      }\n      if (++x >= cols) {\n        x = 0;\n        y++;\n      }\n    }\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferLine } from 'common/Types';\nimport { INVERTED_DEFAULT_COLOR } from 'browser/renderer/atlas/Constants';\nimport { AttributeData } from 'common/buffer/AttributeData';\nimport { NULL_CELL_CODE, WHITESPACE_CELL_CHAR } from 'common/buffer/Constants';\nimport { CellData } from 'common/buffer/CellData';\nimport { ITerminalOptions, IOptionsService } from 'common/services/Services';\n\nexport const BOLD_CLASS = 'xterm-bold';\nexport const DIM_CLASS = 'xterm-dim';\nexport const ITALIC_CLASS = 'xterm-italic';\nexport const UNDERLINE_CLASS = 'xterm-underline';\nexport const CURSOR_CLASS = 'xterm-cursor';\nexport const CURSOR_BLINK_CLASS = 'xterm-cursor-blink';\nexport const CURSOR_STYLE_BLOCK_CLASS = 'xterm-cursor-block';\nexport const CURSOR_STYLE_BAR_CLASS = 'xterm-cursor-bar';\nexport const CURSOR_STYLE_UNDERLINE_CLASS = 'xterm-cursor-underline';\n\nexport class DomRendererRowFactory {\n  private _workCell: CellData = new CellData();\n\n  constructor(\n    private _document: Document,\n    private _optionsService: IOptionsService\n  ) {\n  }\n\n  public createRow(lineData: IBufferLine, isCursorRow: boolean, cursorStyle: string | undefined, cursorX: number, cursorBlink: boolean, cellWidth: number, cols: number): DocumentFragment {\n    const fragment = this._document.createDocumentFragment();\n\n    // Find the line length first, this prevents the need to output a bunch of\n    // empty cells at the end. This cannot easily be integrated into the main\n    // loop below because of the colCount feature (which can be removed after we\n    // properly support reflow and disallow data to go beyond the right-side of\n    // the viewport).\n    let lineLength = 0;\n    for (let x = Math.min(lineData.length, cols) - 1; x >= 0; x--) {\n      if (lineData.loadCell(x, this._workCell).getCode() !== NULL_CELL_CODE || (isCursorRow && x === cursorX)) {\n        lineLength = x + 1;\n        break;\n      }\n    }\n\n    for (let x = 0; x < lineLength; x++) {\n      lineData.loadCell(x, this._workCell);\n      const width = this._workCell.getWidth();\n\n      // The character to the left is a wide character, drawing is owned by the char at x-1\n      if (width === 0) {\n        continue;\n      }\n\n      const charElement = this._document.createElement('span');\n      if (width > 1) {\n        charElement.style.width = `${cellWidth * width}px`;\n      }\n\n      if (isCursorRow && x === cursorX) {\n        charElement.classList.add(CURSOR_CLASS);\n\n        if (cursorBlink) {\n          charElement.classList.add(CURSOR_BLINK_CLASS);\n        }\n\n        switch (cursorStyle) {\n          case 'bar':\n            charElement.classList.add(CURSOR_STYLE_BAR_CLASS);\n            break;\n          case 'underline':\n            charElement.classList.add(CURSOR_STYLE_UNDERLINE_CLASS);\n            break;\n          default:\n            charElement.classList.add(CURSOR_STYLE_BLOCK_CLASS);\n            break;\n        }\n      }\n\n      if (this._workCell.isBold()) {\n        charElement.classList.add(BOLD_CLASS);\n      }\n\n      if (this._workCell.isItalic()) {\n        charElement.classList.add(ITALIC_CLASS);\n      }\n\n      if (this._workCell.isDim()) {\n        charElement.classList.add(DIM_CLASS);\n      }\n\n      if (this._workCell.isUnderline()) {\n        charElement.classList.add(UNDERLINE_CLASS);\n      }\n\n      charElement.textContent = this._workCell.getChars() || WHITESPACE_CELL_CHAR;\n\n      const swapColor = this._workCell.isInverse();\n\n      // fg\n      if (this._workCell.isFgRGB()) {\n        let style = charElement.getAttribute('style') || '';\n        style += `${swapColor ? 'background-' : ''}color:rgb(${(AttributeData.toColorRGB(this._workCell.getFgColor())).join(',')});`;\n        charElement.setAttribute('style', style);\n      } else if (this._workCell.isFgPalette()) {\n        let fg = this._workCell.getFgColor();\n        if (this._workCell.isBold() && fg < 8 && !swapColor && this._optionsService.options.drawBoldTextInBrightColors) {\n          fg += 8;\n        }\n        charElement.classList.add(`xterm-${swapColor ? 'b' : 'f'}g-${fg}`);\n      } else if (swapColor) {\n        charElement.classList.add(`xterm-bg-${INVERTED_DEFAULT_COLOR}`);\n      }\n\n      // bg\n      if (this._workCell.isBgRGB()) {\n        let style = charElement.getAttribute('style') || '';\n        style += `${swapColor ? '' : 'background-'}color:rgb(${(AttributeData.toColorRGB(this._workCell.getBgColor())).join(',')});`;\n        charElement.setAttribute('style', style);\n      } else if (this._workCell.isBgPalette()) {\n        charElement.classList.add(`xterm-${swapColor ? 'f' : 'b'}g-${this._workCell.getBgColor()}`);\n      } else if (swapColor) {\n        charElement.classList.add(`xterm-fg-${INVERTED_DEFAULT_COLOR}`);\n      }\n\n      fragment.appendChild(charElement);\n    }\n    return fragment;\n  }\n}\n","/**\n * Copyright (c) 2014 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n */\n\nimport { IKeyboardEvent, IKeyboardResult, KeyboardResultType } from 'common/Types';\nimport { C0 } from 'common/data/EscapeSequences';\n\n// reg + shift key mappings for digits and special chars\nconst KEYCODE_KEY_MAPPINGS: { [key: number]: [string, string]} = {\n  // digits 0-9\n  48: ['0', ')'],\n  49: ['1', '!'],\n  50: ['2', '@'],\n  51: ['3', '#'],\n  52: ['4', '$'],\n  53: ['5', '%'],\n  54: ['6', '^'],\n  55: ['7', '&'],\n  56: ['8', '*'],\n  57: ['9', '('],\n\n  // special chars\n  186: [';', ':'],\n  187: ['=', '+'],\n  188: [',', '<'],\n  189: ['-', '_'],\n  190: ['.', '>'],\n  191: ['/', '?'],\n  192: ['`', '~'],\n  219: ['[', '{'],\n  220: ['\\\\', '|'],\n  221: [']', '}'],\n  222: ['\\'', '\"']\n};\n\nexport function evaluateKeyboardEvent(\n  ev: IKeyboardEvent,\n  applicationCursorMode: boolean,\n  isMac: boolean,\n  macOptionIsMeta: boolean\n): IKeyboardResult {\n  const result: IKeyboardResult = {\n    type: KeyboardResultType.SEND_KEY,\n    // Whether to cancel event propagation (NOTE: this may not be needed since the event is\n    // canceled at the end of keyDown\n    cancel: false,\n    // The new key even to emit\n    key: undefined\n  };\n  const modifiers = (ev.shiftKey ? 1 : 0) | (ev.altKey ? 2 : 0) | (ev.ctrlKey ? 4 : 0) | (ev.metaKey ? 8 : 0);\n  switch (ev.keyCode) {\n    case 0:\n      if (ev.key === 'UIKeyInputUpArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OA';\n        } else {\n          result.key = C0.ESC + '[A';\n        }\n      }\n      else if (ev.key === 'UIKeyInputLeftArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OD';\n        } else {\n          result.key = C0.ESC + '[D';\n        }\n      }\n      else if (ev.key === 'UIKeyInputRightArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OC';\n        } else {\n          result.key = C0.ESC + '[C';\n        }\n      }\n      else if (ev.key === 'UIKeyInputDownArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OB';\n        } else {\n          result.key = C0.ESC + '[B';\n        }\n      }\n      break;\n    case 8:\n      // backspace\n      if (ev.shiftKey) {\n        result.key = C0.BS; // ^H\n        break;\n      } else if (ev.altKey) {\n        result.key = C0.ESC + C0.DEL; // \\e ^?\n        break;\n      }\n      result.key = C0.DEL; // ^?\n      break;\n    case 9:\n      // tab\n      if (ev.shiftKey) {\n        result.key = C0.ESC + '[Z';\n        break;\n      }\n      result.key = C0.HT;\n      result.cancel = true;\n      break;\n    case 13:\n      // return/enter\n      result.key = C0.CR;\n      result.cancel = true;\n      break;\n    case 27:\n      // escape\n      result.key = C0.ESC;\n      result.cancel = true;\n      break;\n    case 37:\n      // left-arrow\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'D';\n        // HACK: Make Alt + left-arrow behave like Ctrl + left-arrow: move one word backwards\n        // http://unix.stackexchange.com/a/108106\n        // macOS uses different escape sequences than linux\n        if (result.key === C0.ESC + '[1;3D') {\n          result.key = isMac ? C0.ESC + 'b' : C0.ESC + '[1;5D';\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OD';\n      } else {\n        result.key = C0.ESC + '[D';\n      }\n      break;\n    case 39:\n      // right-arrow\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'C';\n        // HACK: Make Alt + right-arrow behave like Ctrl + right-arrow: move one word forward\n        // http://unix.stackexchange.com/a/108106\n        // macOS uses different escape sequences than linux\n        if (result.key === C0.ESC + '[1;3C') {\n          result.key = isMac ? C0.ESC + 'f' : C0.ESC + '[1;5C';\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OC';\n      } else {\n        result.key = C0.ESC + '[C';\n      }\n      break;\n    case 38:\n      // up-arrow\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'A';\n        // HACK: Make Alt + up-arrow behave like Ctrl + up-arrow\n        // http://unix.stackexchange.com/a/108106\n        if (result.key === C0.ESC + '[1;3A') {\n          result.key = C0.ESC + '[1;5A';\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OA';\n      } else {\n        result.key = C0.ESC + '[A';\n      }\n      break;\n    case 40:\n      // down-arrow\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'B';\n        // HACK: Make Alt + down-arrow behave like Ctrl + down-arrow\n        // http://unix.stackexchange.com/a/108106\n        if (result.key === C0.ESC + '[1;3B') {\n          result.key = C0.ESC + '[1;5B';\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OB';\n      } else {\n        result.key = C0.ESC + '[B';\n      }\n      break;\n    case 45:\n      // insert\n      if (!ev.shiftKey && !ev.ctrlKey) {\n        // <Ctrl> or <Shift> + <Insert> are used to\n        // copy-paste on some systems.\n        result.key = C0.ESC + '[2~';\n      }\n      break;\n    case 46:\n      // delete\n      if (modifiers) {\n        result.key = C0.ESC + '[3;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[3~';\n      }\n      break;\n    case 36:\n      // home\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'H';\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OH';\n      } else {\n        result.key = C0.ESC + '[H';\n      }\n      break;\n    case 35:\n      // end\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'F';\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OF';\n      } else {\n        result.key = C0.ESC + '[F';\n      }\n      break;\n    case 33:\n      // page up\n      if (ev.shiftKey) {\n        result.type = KeyboardResultType.PAGE_UP;\n      } else {\n        result.key = C0.ESC + '[5~';\n      }\n      break;\n    case 34:\n      // page down\n      if (ev.shiftKey) {\n        result.type = KeyboardResultType.PAGE_DOWN;\n      } else {\n        result.key = C0.ESC + '[6~';\n      }\n      break;\n    case 112:\n      // F1-F12\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'P';\n      } else {\n        result.key = C0.ESC + 'OP';\n      }\n      break;\n    case 113:\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'Q';\n      } else {\n        result.key = C0.ESC + 'OQ';\n      }\n      break;\n    case 114:\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'R';\n      } else {\n        result.key = C0.ESC + 'OR';\n      }\n      break;\n    case 115:\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'S';\n      } else {\n        result.key = C0.ESC + 'OS';\n      }\n      break;\n    case 116:\n      if (modifiers) {\n        result.key = C0.ESC + '[15;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[15~';\n      }\n      break;\n    case 117:\n      if (modifiers) {\n        result.key = C0.ESC + '[17;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[17~';\n      }\n      break;\n    case 118:\n      if (modifiers) {\n        result.key = C0.ESC + '[18;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[18~';\n      }\n      break;\n    case 119:\n      if (modifiers) {\n        result.key = C0.ESC + '[19;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[19~';\n      }\n      break;\n    case 120:\n      if (modifiers) {\n        result.key = C0.ESC + '[20;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[20~';\n      }\n      break;\n    case 121:\n      if (modifiers) {\n        result.key = C0.ESC + '[21;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[21~';\n      }\n      break;\n    case 122:\n      if (modifiers) {\n        result.key = C0.ESC + '[23;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[23~';\n      }\n      break;\n    case 123:\n      if (modifiers) {\n        result.key = C0.ESC + '[24;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[24~';\n      }\n      break;\n    default:\n      // a-z and space\n      if (ev.ctrlKey && !ev.shiftKey && !ev.altKey && !ev.metaKey) {\n        if (ev.keyCode >= 65 && ev.keyCode <= 90) {\n          result.key = String.fromCharCode(ev.keyCode - 64);\n        } else if (ev.keyCode === 32) {\n          // NUL\n          result.key = String.fromCharCode(0);\n        } else if (ev.keyCode >= 51 && ev.keyCode <= 55) {\n          // escape, file sep, group sep, record sep, unit sep\n          result.key = String.fromCharCode(ev.keyCode - 51 + 27);\n        } else if (ev.keyCode === 56) {\n          // delete\n          result.key = String.fromCharCode(127);\n        } else if (ev.keyCode === 219) {\n          // ^[ - Control Sequence Introducer (CSI)\n          result.key = String.fromCharCode(27);\n        } else if (ev.keyCode === 220) {\n          // ^\\ - String Terminator (ST)\n          result.key = String.fromCharCode(28);\n        } else if (ev.keyCode === 221) {\n          // ^] - Operating System Command (OSC)\n          result.key = String.fromCharCode(29);\n        }\n      } else if ((!isMac || macOptionIsMeta) && ev.altKey && !ev.metaKey) {\n        // On macOS this is a third level shift when !macOptionIsMeta. Use <Esc> instead.\n        const keyMapping = KEYCODE_KEY_MAPPINGS[ev.keyCode];\n        const key = keyMapping && keyMapping[!ev.shiftKey ? 0 : 1];\n        if (key) {\n          result.key = C0.ESC + key;\n        } else if (ev.keyCode >= 65 && ev.keyCode <= 90) {\n          const keyCode = ev.ctrlKey ? ev.keyCode - 64 : ev.keyCode + 32;\n          result.key = C0.ESC + String.fromCharCode(keyCode);\n        }\n      } else if (isMac && !ev.altKey && !ev.ctrlKey && ev.metaKey) {\n        if (ev.keyCode === 65) { // cmd + a\n          result.type = KeyboardResultType.SELECT_ALL;\n        }\n      } else if (ev.key && !ev.ctrlKey && !ev.altKey && !ev.metaKey && ev.keyCode >= 48 && ev.key.length === 1) {\n        // Include only keys that that result in a _single_ character; don't include num lock, volume up, etc.\n        result.key = ev.key;\n      } else if (ev.key && ev.ctrlKey) {\n        if (ev.key === '_') { // ^_\n          result.key = C0.US;\n        }\n      }\n      break;\n  }\n\n  return result;\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'xterm';\nimport { ITerminal } from './Types';\nimport { CHAR_DATA_CODE_INDEX, NULL_CELL_CODE, WHITESPACE_CELL_CODE } from 'common/buffer/Constants';\n\nexport function applyWindowsMode(terminal: ITerminal): IDisposable {\n  // Winpty does not support wraparound mode which means that lines will never\n  // be marked as wrapped. This causes issues for things like copying a line\n  // retaining the wrapped new line characters or if consumers are listening\n  // in on the data stream.\n  //\n  // The workaround for this is to listen to every incoming line feed and mark\n  // the line as wrapped if the last character in the previous line is not a\n  // space. This is certainly not without its problems, but generally on\n  // Windows when text reaches the end of the terminal it's likely going to be\n  // wrapped.\n  return terminal.onLineFeed(() => {\n    const line = terminal.buffer.lines.get(terminal.buffer.ybase + terminal.buffer.y - 1);\n    const lastChar = line.get(terminal.cols - 1);\n\n    const nextLine = terminal.buffer.lines.get(terminal.buffer.ybase + terminal.buffer.y);\n    nextLine.isWrapped = (lastChar[CHAR_DATA_CODE_INDEX] !== NULL_CELL_CODE && lastChar[CHAR_DATA_CODE_INDEX] !== WHITESPACE_CELL_CODE);\n  });\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderer, IRenderDimensions, CharacterJoinerHandler } from 'browser/renderer/Types';\nimport { RenderDebouncer } from 'browser/RenderDebouncer';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { ScreenDprMonitor } from 'browser/ScreenDprMonitor';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { IColorSet } from 'browser/Types';\nimport { IOptionsService } from 'common/services/Services';\nimport { ICharSizeService, IRenderService } from 'browser/services/Services';\n\nexport class RenderService extends Disposable implements IRenderService {\n  serviceBrand: any;\n\n  private _renderDebouncer: RenderDebouncer;\n  private _screenDprMonitor: ScreenDprMonitor;\n\n  private _isPaused: boolean = false;\n  private _needsFullRefresh: boolean = false;\n  private _canvasWidth: number = 0;\n  private _canvasHeight: number = 0;\n\n  private _onDimensionsChange = new EventEmitter<IRenderDimensions>();\n  public get onDimensionsChange(): IEvent<IRenderDimensions> { return this._onDimensionsChange.event; }\n  private _onRender = new EventEmitter<{ start: number, end: number }>();\n  public get onRender(): IEvent<{ start: number, end: number }> { return this._onRender.event; }\n  private _onRefreshRequest = new EventEmitter<{ start: number, end: number }>();\n  public get onRefreshRequest(): IEvent<{ start: number, end: number }> { return this._onRefreshRequest.event; }\n\n  public get dimensions(): IRenderDimensions { return this._renderer.dimensions; }\n\n  constructor(\n    private _renderer: IRenderer,\n    private _rowCount: number,\n    readonly screenElement: HTMLElement,\n    @IOptionsService readonly optionsService: IOptionsService,\n    @ICharSizeService readonly charSizeService: ICharSizeService\n  ) {\n    super();\n    this._renderDebouncer = new RenderDebouncer((start, end) => this._renderRows(start, end));\n    this.register(this._renderDebouncer);\n\n    this._screenDprMonitor = new ScreenDprMonitor();\n    this._screenDprMonitor.setListener(() => this.onDevicePixelRatioChange());\n    this.register(this._screenDprMonitor);\n\n    this.register(optionsService.onOptionChange(() => this._renderer.onOptionsChanged()));\n    this.register(charSizeService.onCharSizeChange(() => this.onCharSizeChanged()));\n\n    // dprchange should handle this case, we need this as well for browsers that don't support the\n    // matchMedia query.\n    this.register(addDisposableDomListener(window, 'resize', () => this.onDevicePixelRatioChange()));\n\n    // Detect whether IntersectionObserver is detected and enable renderer pause\n    // and resume based on terminal visibility if so\n    if ('IntersectionObserver' in window) {\n      const observer = new IntersectionObserver(e => this._onIntersectionChange(e[e.length - 1]), { threshold: 0 });\n      observer.observe(screenElement);\n      this.register({ dispose: () => observer.disconnect() });\n    }\n  }\n\n  private _onIntersectionChange(entry: IntersectionObserverEntry): void {\n    this._isPaused = entry.intersectionRatio === 0;\n    if (!this._isPaused && this._needsFullRefresh) {\n      this.refreshRows(0, this._rowCount - 1);\n      this._needsFullRefresh = false;\n    }\n  }\n\n  public refreshRows(start: number, end: number): void {\n    if (this._isPaused) {\n      this._needsFullRefresh = true;\n      return;\n    }\n    this._renderDebouncer.refresh(start, end, this._rowCount);\n  }\n\n  private _renderRows(start: number, end: number): void {\n    this._renderer.renderRows(start, end);\n    this._onRender.fire({ start, end });\n  }\n\n  public resize(cols: number, rows: number): void {\n    this._rowCount = rows;\n    this._fireOnCanvasResize();\n  }\n\n  public changeOptions(): void {\n    this._renderer.onOptionsChanged();\n    this._fireOnCanvasResize();\n  }\n\n  private _fireOnCanvasResize(): void {\n    // Don't fire the event if the dimensions haven't changed\n    if (this._renderer.dimensions.canvasWidth === this._canvasWidth && this._renderer.dimensions.canvasHeight === this._canvasHeight) {\n      return;\n    }\n    this._onDimensionsChange.fire(this._renderer.dimensions);\n  }\n\n  public dispose(): void {\n    this._renderer.dispose();\n  }\n\n  public setRenderer(renderer: IRenderer): void {\n    // TODO: RenderService should be the only one to dispose the renderer\n    this._renderer.dispose();\n    this._renderer = renderer;\n    this.refreshRows(0, this._rowCount - 1);\n  }\n\n  private _fullRefresh(): void {\n    if (this._isPaused) {\n      this._needsFullRefresh = true;\n    } else {\n      this.refreshRows(0, this._rowCount - 1);\n    }\n  }\n\n  public setColors(colors: IColorSet): void {\n    this._renderer.setColors(colors);\n    this._fullRefresh();\n  }\n\n  public onDevicePixelRatioChange(): void {\n    this._renderer.onDevicePixelRatioChange();\n    this.refreshRows(0, this._rowCount - 1);\n  }\n\n  public onResize(cols: number, rows: number): void {\n    this._renderer.onResize(cols, rows);\n    this._fullRefresh();\n  }\n\n  // TODO: Is this useful when we have onResize?\n  public onCharSizeChanged(): void {\n    this._renderer.onCharSizeChanged();\n  }\n\n  public onBlur(): void {\n    this._renderer.onBlur();\n  }\n\n  public onFocus(): void {\n    this._renderer.onFocus();\n  }\n\n  public onSelectionChanged(start: [number, number], end: [number, number], columnSelectMode: boolean): void {\n    this._renderer.onSelectionChanged(start, end, columnSelectMode);\n  }\n\n  public onCursorMove(): void {\n    this._renderer.onCursorMove();\n  }\n\n  public clear(): void {\n    this._renderer.clear();\n  }\n\n  public registerCharacterJoiner(handler: CharacterJoinerHandler): number {\n    return this._renderer.registerCharacterJoiner(handler);\n  }\n\n  public deregisterCharacterJoiner(joinerId: number): boolean {\n    return this._renderer.deregisterCharacterJoiner(joinerId);\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IOptionsService, ITerminalOptions, IPartialTerminalOptions } from 'common/services/Services';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { isMac } from 'common/Platform';\nimport { clone } from 'common/Clone';\n\n// Source: https://freesound.org/people/altemark/sounds/45759/\n// This sound is released under the Creative Commons Attribution 3.0 Unported\n// (CC BY 3.0) license. It was created by 'altemark'. No modifications have been\n// made, apart from the conversion to base64.\nexport const DEFAULT_BELL_SOUND = 'data:audio/wav;base64,UklGRigBAABXQVZFZm10IBAAAAABAAEARKwAAIhYAQACABAAZGF0YQQBAADpAFgCwAMlBZoG/wdmCcoKRAypDQ8PbRDBEQQTOxRtFYcWlBePGIUZXhoiG88bcBz7HHIdzh0WHlMeZx51HmkeUx4WHs8dah0AHXwc3hs9G4saxRnyGBIYGBcQFv8U4RPAEoYRQBACD70NWwwHC6gJOwjWBloF7gOBAhABkf8b/qv8R/ve+Xf4Ife79W/0JfPZ8Z/wde9N7ijtE+wU6xvqM+lb6H7nw+YX5mrlxuQz5Mzje+Ma49fioeKD4nXiYeJy4pHitOL04j/jn+MN5IPkFOWs5U3mDefM55/ogOl36m7rdOyE7abuyu8D8Unyj/Pg9D/2qfcb+Yn6/vuK/Qj/lAAlAg==';\n\n// TODO: Freeze?\nexport const DEFAULT_OPTIONS: ITerminalOptions = Object.freeze({\n  cols: 80,\n  rows: 24,\n  cursorBlink: false,\n  cursorStyle: 'block',\n  bellSound:  DEFAULT_BELL_SOUND,\n  bellStyle: 'none',\n  drawBoldTextInBrightColors: true,\n  fontFamily: 'courier-new, courier, monospace',\n  fontSize: 15,\n  fontWeight: 'normal',\n  fontWeightBold: 'bold',\n  lineHeight: 1.0,\n  letterSpacing: 0,\n  logLevel: 'info',\n  scrollback: 1000,\n  screenReaderMode: false,\n  macOptionIsMeta: false,\n  macOptionClickForcesSelection: false,\n  disableStdin: false,\n  allowTransparency: false,\n  tabStopWidth: 8,\n  theme: {},\n  rightClickSelectsWord: isMac,\n  rendererType: 'canvas',\n  windowsMode: false,\n\n  convertEol: false,\n  termName: 'xterm',\n  screenKeys: false,\n  cancelEvents: false,\n  useFlowControl: false,\n  wordSeparator: ' ()[]{}\\'\"'\n});\n\n/**\n * The set of options that only have an effect when set in the Terminal constructor.\n */\nconst CONSTRUCTOR_ONLY_OPTIONS = ['cols', 'rows'];\n\nexport class OptionsService implements IOptionsService {\n  serviceBrand: any;\n\n  public options: ITerminalOptions;\n\n  private _onOptionChange = new EventEmitter<string>();\n  public get onOptionChange(): IEvent<string> { return this._onOptionChange.event; }\n\n  constructor(options: IPartialTerminalOptions) {\n    this.options = clone(DEFAULT_OPTIONS);\n    Object.keys(options).forEach(k => {\n      if (k in this.options) {\n        const newValue = options[k as keyof IPartialTerminalOptions] as any;\n        this.options[k] = newValue;\n      }\n    });\n  }\n\n  public setOption(key: string, value: any): void {\n    if (!(key in DEFAULT_OPTIONS)) {\n      throw new Error('No option with key \"' + key + '\"');\n    }\n    if (CONSTRUCTOR_ONLY_OPTIONS.indexOf(key) !== -1) {\n      throw new Error(`Option \"${key}\" can only be set in the constructor`);\n    }\n    if (this.options[key] === value) {\n      return;\n    }\n\n    value = this._sanitizeAndValidateOption(key, value);\n\n    // Don't fire an option change event if they didn't change\n    if (this.options[key] === value) {\n      return;\n    }\n\n    this.options[key] = value;\n    this._onOptionChange.fire(key);\n  }\n\n  private _sanitizeAndValidateOption(key: string, value: any): any {\n    switch (key) {\n      case 'bellStyle':\n      case 'cursorStyle':\n      case 'fontWeight':\n      case 'fontWeightBold':\n      case 'rendererType':\n      case 'wordSeparator':\n        if (!value) {\n          value = DEFAULT_OPTIONS[key];\n        }\n        break;\n      case 'lineHeight':\n      case 'tabStopWidth':\n        if (value < 1) {\n          throw new Error(`${key} cannot be less than 1, value: ${value}`);\n        }\n        break;\n      case 'scrollback':\n        value = Math.min(value, 4294967295);\n        if (value < 0) {\n          throw new Error(`${key} cannot be less than 0, value: ${value}`);\n        }\n        break;\n    }\n    return value;\n  }\n\n  public getOption(key: string): any {\n    if (!(key in DEFAULT_OPTIONS)) {\n      throw new Error(`No option with key \"${key}\"`);\n    }\n    return this.options[key];\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IOptionsService } from 'common/services/Services';\nimport { IEvent, EventEmitter } from 'common/EventEmitter';\nimport { ICharSizeService } from 'browser/services/Services';\n\nexport class CharSizeService implements ICharSizeService {\n  serviceBrand: any;\n\n  public width: number = 0;\n  public height: number = 0;\n  private _measureStrategy: IMeasureStrategy;\n\n  public get hasValidSize(): boolean { return this.width > 0 && this.height > 0; }\n\n  private _onCharSizeChange = new EventEmitter<void>();\n  public get onCharSizeChange(): IEvent<void> { return this._onCharSizeChange.event; }\n\n  constructor(\n    readonly document: Document,\n    readonly parentElement: HTMLElement,\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    this._measureStrategy = new DomMeasureStrategy(document, parentElement, this._optionsService);\n  }\n\n  public measure(): void {\n    const result = this._measureStrategy.measure();\n    if (result.width !== this.width || result.height !== this.height) {\n      this.width = result.width;\n      this.height = result.height;\n      this._onCharSizeChange.fire();\n    }\n  }\n}\n\ninterface IMeasureStrategy {\n  measure(): IReadonlyMeasureResult;\n}\n\ninterface IReadonlyMeasureResult {\n  readonly width: number;\n  readonly height: number;\n}\n\ninterface IMeasureResult {\n  width: number;\n  height: number;\n}\n\n// TODO: For supporting browsers we should also provide a CanvasCharDimensionsProvider that uses ctx.measureText\nclass DomMeasureStrategy implements IMeasureStrategy {\n  private _result: IMeasureResult = { width: 0, height: 0 };\n  private _measureElement: HTMLElement;\n\n  constructor(\n    private _document: Document,\n    private _parentElement: HTMLElement,\n    private _optionsService: IOptionsService\n  ) {\n    this._measureElement = this._document.createElement('span');\n    this._measureElement.classList.add('xterm-char-measure-element');\n    this._measureElement.textContent = 'W';\n    this._measureElement.setAttribute('aria-hidden', 'true');\n    this._parentElement.appendChild(this._measureElement);\n  }\n\n  public measure(): IReadonlyMeasureResult {\n    this._measureElement.style.fontFamily = this._optionsService.options.fontFamily;\n    this._measureElement.style.fontSize = `${this._optionsService.options.fontSize}px`;\n\n    // Note that this triggers a synchronous layout\n    const geometry = this._measureElement.getBoundingClientRect();\n\n    // If values are 0 then the element is likely currently display:none, in which case we should\n    // retain the previous value.\n    if (geometry.width !== 0 && geometry.height !== 0) {\n      this._result.width = geometry.width;\n      this._result.height = Math.ceil(geometry.height);\n    }\n\n    return this._result;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferService, IOptionsService } from 'common/services/Services';\nimport { BufferSet } from 'common/buffer/BufferSet';\nimport { IBufferSet, IBuffer } from 'common/buffer/Types';\n\nexport const MINIMUM_COLS = 2; // Less than 2 can mess with wide chars\nexport const MINIMUM_ROWS = 1;\n\nexport class BufferService implements IBufferService {\n  serviceBrand: any;\n\n  public cols: number;\n  public rows: number;\n  public buffers: IBufferSet;\n\n  public get buffer(): IBuffer { return this.buffers.active; }\n\n  constructor(\n    @IOptionsService private _optionsService: IOptionsService\n  ) {\n    this.cols = Math.max(_optionsService.options.cols, MINIMUM_COLS);\n    this.rows = Math.max(_optionsService.options.rows, MINIMUM_ROWS);\n    this.buffers = new BufferSet(_optionsService, this);\n  }\n\n  public resize(cols: number, rows: number): void {\n    this.cols = cols;\n    this.rows = rows;\n  }\n\n  public reset(): void {\n    this.buffers = new BufferSet(this._optionsService, this);\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBuffer, IBufferSet } from 'common/buffer/Types';\nimport { IAttributeData } from 'common/Types';\nimport { Buffer } from 'common/buffer/Buffer';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { IOptionsService, IBufferService } from 'common/services/Services';\n\n/**\n * The BufferSet represents the set of two buffers used by xterm terminals (normal and alt) and\n * provides also utilities for working with them.\n */\nexport class BufferSet implements IBufferSet {\n  private _normal: Buffer;\n  private _alt: Buffer;\n  private _activeBuffer: Buffer;\n\n\n  private _onBufferActivate = new EventEmitter<{activeBuffer: IBuffer, inactiveBuffer: IBuffer}>();\n  public get onBufferActivate(): IEvent<{activeBuffer: IBuffer, inactiveBuffer: IBuffer}> { return this._onBufferActivate.event; }\n\n  /**\n   * Create a new BufferSet for the given terminal.\n   * @param _terminal - The terminal the BufferSet will belong to\n   */\n  constructor(\n    readonly optionsService: IOptionsService,\n    readonly bufferService: IBufferService\n  ) {\n    this._normal = new Buffer(true, optionsService, bufferService);\n    this._normal.fillViewportRows();\n\n    // The alt buffer should never have scrollback.\n    // See http://invisible-island.net/xterm/ctlseqs/ctlseqs.html#h2-The-Alternate-Screen-Buffer\n    this._alt = new Buffer(false, optionsService, bufferService);\n    this._activeBuffer = this._normal;\n\n    this.setupTabStops();\n  }\n\n  /**\n   * Returns the alt Buffer of the BufferSet\n   */\n  public get alt(): Buffer {\n    return this._alt;\n  }\n\n  /**\n   * Returns the normal Buffer of the BufferSet\n   */\n  public get active(): Buffer {\n    return this._activeBuffer;\n  }\n\n  /**\n   * Returns the currently active Buffer of the BufferSet\n   */\n  public get normal(): Buffer {\n    return this._normal;\n  }\n\n  /**\n   * Sets the normal Buffer of the BufferSet as its currently active Buffer\n   */\n  public activateNormalBuffer(): void {\n    if (this._activeBuffer === this._normal) {\n      return;\n    }\n    this._normal.x = this._alt.x;\n    this._normal.y = this._alt.y;\n    // The alt buffer should always be cleared when we switch to the normal\n    // buffer. This frees up memory since the alt buffer should always be new\n    // when activated.\n    this._alt.clear();\n    this._activeBuffer = this._normal;\n    this._onBufferActivate.fire({\n      activeBuffer: this._normal,\n      inactiveBuffer: this._alt\n    });\n  }\n\n  /**\n   * Sets the alt Buffer of the BufferSet as its currently active Buffer\n   */\n  public activateAltBuffer(fillAttr?: IAttributeData): void {\n    if (this._activeBuffer === this._alt) {\n      return;\n    }\n    // Since the alt buffer is always cleared when the normal buffer is\n    // activated, we want to fill it when switching to it.\n    this._alt.fillViewportRows(fillAttr);\n    this._alt.x = this._normal.x;\n    this._alt.y = this._normal.y;\n    this._activeBuffer = this._alt;\n    this._onBufferActivate.fire({\n      activeBuffer: this._alt,\n      inactiveBuffer: this._normal\n    });\n  }\n\n  /**\n   * Resizes both normal and alt buffers, adjusting their data accordingly.\n   * @param newCols The new number of columns.\n   * @param newRows The new number of rows.\n   */\n  public resize(newCols: number, newRows: number): void {\n    this._normal.resize(newCols, newRows);\n    this._alt.resize(newCols, newRows);\n  }\n\n  /**\n   * Setup the tab stops.\n   * @param i The index to start setting up tab stops from.\n   */\n  public setupTabStops(i?: number): void {\n    this._normal.setupTabStops(i);\n    this._alt.setupTabStops(i);\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CircularList, IInsertEvent } from 'common/CircularList';\nimport { IBuffer, BufferIndex, IBufferStringIterator, IBufferStringIteratorResult } from 'common/buffer/Types';\nimport { IBufferLine, ICellData, IAttributeData, ICharset } from 'common/Types';\nimport { BufferLine, DEFAULT_ATTR_DATA } from 'common/buffer/BufferLine';\nimport { CellData } from 'common/buffer/CellData';\nimport { NULL_CELL_CHAR, NULL_CELL_WIDTH, NULL_CELL_CODE, WHITESPACE_CELL_CHAR, WHITESPACE_CELL_WIDTH, WHITESPACE_CELL_CODE, CHAR_DATA_WIDTH_INDEX, CHAR_DATA_CHAR_INDEX } from 'common/buffer/Constants';\nimport { reflowLargerApplyNewLayout, reflowLargerCreateNewLayout, reflowLargerGetLinesToRemove, reflowSmallerGetNewLineLengths, getWrappedLineTrimmedLength } from 'common/buffer/BufferReflow';\nimport { Marker } from 'common/buffer/Marker';\nimport { IOptionsService, IBufferService } from 'common/services/Services';\nimport { DEFAULT_CHARSET } from 'common/data/Charsets';\n\nexport const MAX_BUFFER_SIZE = 4294967295; // 2^32 - 1\n\n/**\n * This class represents a terminal buffer (an internal state of the terminal), where the\n * following information is stored (in high-level):\n *   - text content of this particular buffer\n *   - cursor position\n *   - scroll position\n */\nexport class Buffer implements IBuffer {\n  public lines: CircularList<IBufferLine>;\n  public ydisp: number = 0;\n  public ybase: number = 0;\n  public y: number = 0;\n  public x: number = 0;\n  public scrollBottom: number;\n  public scrollTop: number;\n  // TODO: Type me\n  public tabs: any;\n  public savedY: number = 0;\n  public savedX: number = 0;\n  public savedCurAttrData = DEFAULT_ATTR_DATA.clone();\n  public savedCharset: ICharset | null = DEFAULT_CHARSET;\n  public markers: Marker[] = [];\n  private _nullCell: ICellData = CellData.fromCharData([0, NULL_CELL_CHAR, NULL_CELL_WIDTH, NULL_CELL_CODE]);\n  private _whitespaceCell: ICellData = CellData.fromCharData([0, WHITESPACE_CELL_CHAR, WHITESPACE_CELL_WIDTH, WHITESPACE_CELL_CODE]);\n  private _cols: number;\n  private _rows: number;\n\n  constructor(\n    private _hasScrollback: boolean,\n    private _optionsService: IOptionsService,\n    private _bufferService: IBufferService\n  ) {\n    this._cols = this._bufferService.cols;\n    this._rows = this._bufferService.rows;\n    this.lines = new CircularList<IBufferLine>(this._getCorrectBufferLength(this._rows));\n    this.scrollTop = 0;\n    this.scrollBottom = this._rows - 1;\n    this.setupTabStops();\n  }\n\n  public getNullCell(attr?: IAttributeData): ICellData {\n    if (attr) {\n      this._nullCell.fg = attr.fg;\n      this._nullCell.bg = attr.bg;\n    } else {\n      this._nullCell.fg = 0;\n      this._nullCell.bg = 0;\n    }\n    return this._nullCell;\n  }\n\n  public getWhitespaceCell(attr?: IAttributeData): ICellData {\n    if (attr) {\n      this._whitespaceCell.fg = attr.fg;\n      this._whitespaceCell.bg = attr.bg;\n    } else {\n      this._whitespaceCell.fg = 0;\n      this._whitespaceCell.bg = 0;\n    }\n    return this._whitespaceCell;\n  }\n\n  public getBlankLine(attr: IAttributeData, isWrapped?: boolean): IBufferLine {\n    return new BufferLine(this._bufferService.cols, this.getNullCell(attr), isWrapped);\n  }\n\n  public get hasScrollback(): boolean {\n    return this._hasScrollback && this.lines.maxLength > this._rows;\n  }\n\n  public get isCursorInViewport(): boolean {\n    const absoluteY = this.ybase + this.y;\n    const relativeY = absoluteY - this.ydisp;\n    return (relativeY >= 0 && relativeY < this._rows);\n  }\n\n  /**\n   * Gets the correct buffer length based on the rows provided, the terminal's\n   * scrollback and whether this buffer is flagged to have scrollback or not.\n   * @param rows The terminal rows to use in the calculation.\n   */\n  private _getCorrectBufferLength(rows: number): number {\n    if (!this._hasScrollback) {\n      return rows;\n    }\n\n    const correctBufferLength = rows + this._optionsService.options.scrollback;\n\n    return correctBufferLength > MAX_BUFFER_SIZE ? MAX_BUFFER_SIZE : correctBufferLength;\n  }\n\n  /**\n   * Fills the buffer's viewport with blank lines.\n   */\n  public fillViewportRows(fillAttr?: IAttributeData): void {\n    if (this.lines.length === 0) {\n      if (fillAttr === undefined) {\n        fillAttr = DEFAULT_ATTR_DATA;\n      }\n      let i = this._rows;\n      while (i--) {\n        this.lines.push(this.getBlankLine(fillAttr));\n      }\n    }\n  }\n\n  /**\n   * Clears the buffer to it's initial state, discarding all previous data.\n   */\n  public clear(): void {\n    this.ydisp = 0;\n    this.ybase = 0;\n    this.y = 0;\n    this.x = 0;\n    this.lines = new CircularList<IBufferLine>(this._getCorrectBufferLength(this._rows));\n    this.scrollTop = 0;\n    this.scrollBottom = this._rows - 1;\n    this.setupTabStops();\n  }\n\n  /**\n   * Resizes the buffer, adjusting its data accordingly.\n   * @param newCols The new number of columns.\n   * @param newRows The new number of rows.\n   */\n  public resize(newCols: number, newRows: number): void {\n    // store reference to null cell with default attrs\n    const nullCell = this.getNullCell(DEFAULT_ATTR_DATA);\n\n    // Increase max length if needed before adjustments to allow space to fill\n    // as required.\n    const newMaxLength = this._getCorrectBufferLength(newRows);\n    if (newMaxLength > this.lines.maxLength) {\n      this.lines.maxLength = newMaxLength;\n    }\n\n    // The following adjustments should only happen if the buffer has been\n    // initialized/filled.\n    if (this.lines.length > 0) {\n      // Deal with columns increasing (reducing needs to happen after reflow)\n      if (this._cols < newCols) {\n        for (let i = 0; i < this.lines.length; i++) {\n          this.lines.get(i)!.resize(newCols, nullCell);\n        }\n      }\n\n      // Resize rows in both directions as needed\n      let addToY = 0;\n      if (this._rows < newRows) {\n        for (let y = this._rows; y < newRows; y++) {\n          if (this.lines.length < newRows + this.ybase) {\n            if (this.ybase > 0 && this.lines.length <= this.ybase + this.y + addToY + 1) {\n              // There is room above the buffer and there are no empty elements below the line,\n              // scroll up\n              this.ybase--;\n              addToY++;\n              if (this.ydisp > 0) {\n                // Viewport is at the top of the buffer, must increase downwards\n                this.ydisp--;\n              }\n            } else {\n              // Add a blank line if there is no buffer left at the top to scroll to, or if there\n              // are blank lines after the cursor\n              this.lines.push(new BufferLine(newCols, nullCell));\n            }\n          }\n        }\n      } else { // (this._rows >= newRows)\n        for (let y = this._rows; y > newRows; y--) {\n          if (this.lines.length > newRows + this.ybase) {\n            if (this.lines.length > this.ybase + this.y + 1) {\n              // The line is a blank line below the cursor, remove it\n              this.lines.pop();\n            } else {\n              // The line is the cursor, scroll down\n              this.ybase++;\n              this.ydisp++;\n            }\n          }\n        }\n      }\n\n      // Reduce max length if needed after adjustments, this is done after as it\n      // would otherwise cut data from the bottom of the buffer.\n      if (newMaxLength < this.lines.maxLength) {\n        // Trim from the top of the buffer and adjust ybase and ydisp.\n        const amountToTrim = this.lines.length - newMaxLength;\n        if (amountToTrim > 0) {\n          this.lines.trimStart(amountToTrim);\n          this.ybase = Math.max(this.ybase - amountToTrim, 0);\n          this.ydisp = Math.max(this.ydisp - amountToTrim, 0);\n          this.savedY = Math.max(this.savedY - amountToTrim, 0);\n        }\n        this.lines.maxLength = newMaxLength;\n      }\n\n      // Make sure that the cursor stays on screen\n      this.x = Math.min(this.x, newCols - 1);\n      this.y = Math.min(this.y, newRows - 1);\n      if (addToY) {\n        this.y += addToY;\n      }\n      this.savedX = Math.min(this.savedX, newCols - 1);\n\n      this.scrollTop = 0;\n    }\n\n    this.scrollBottom = newRows - 1;\n\n    if (this._isReflowEnabled) {\n      this._reflow(newCols, newRows);\n\n      // Trim the end of the line off if cols shrunk\n      if (this._cols > newCols) {\n        for (let i = 0; i < this.lines.length; i++) {\n          this.lines.get(i)!.resize(newCols, nullCell);\n        }\n      }\n    }\n\n    this._cols = newCols;\n    this._rows = newRows;\n  }\n\n  private get _isReflowEnabled(): boolean {\n    return this._hasScrollback && !this._optionsService.options.windowsMode;\n  }\n\n  private _reflow(newCols: number, newRows: number): void {\n    if (this._cols === newCols) {\n      return;\n    }\n\n    // Iterate through rows, ignore the last one as it cannot be wrapped\n    if (newCols > this._cols) {\n      this._reflowLarger(newCols, newRows);\n    } else {\n      this._reflowSmaller(newCols, newRows);\n    }\n  }\n\n  private _reflowLarger(newCols: number, newRows: number): void {\n    const toRemove: number[] = reflowLargerGetLinesToRemove(this.lines, this._cols, newCols, this.ybase + this.y, this.getNullCell(DEFAULT_ATTR_DATA));\n    if (toRemove.length > 0) {\n      const newLayoutResult = reflowLargerCreateNewLayout(this.lines, toRemove);\n      reflowLargerApplyNewLayout(this.lines, newLayoutResult.layout);\n      this._reflowLargerAdjustViewport(newCols, newRows, newLayoutResult.countRemoved);\n    }\n  }\n\n  private _reflowLargerAdjustViewport(newCols: number, newRows: number, countRemoved: number): void {\n    const nullCell = this.getNullCell(DEFAULT_ATTR_DATA);\n    // Adjust viewport based on number of items removed\n    let viewportAdjustments = countRemoved;\n    while (viewportAdjustments-- > 0) {\n      if (this.ybase === 0) {\n        if (this.y > 0) {\n          this.y--;\n        }\n        if (this.lines.length < newRows) {\n          // Add an extra row at the bottom of the viewport\n          this.lines.push(new BufferLine(newCols, nullCell));\n        }\n      } else {\n        if (this.ydisp === this.ybase) {\n          this.ydisp--;\n        }\n        this.ybase--;\n      }\n    }\n    this.savedY = Math.max(this.savedY - countRemoved, 0);\n  }\n\n  private _reflowSmaller(newCols: number, newRows: number): void {\n    const nullCell = this.getNullCell(DEFAULT_ATTR_DATA);\n    // Gather all BufferLines that need to be inserted into the Buffer here so that they can be\n    // batched up and only committed once\n    const toInsert = [];\n    let countToInsert = 0;\n    // Go backwards as many lines may be trimmed and this will avoid considering them\n    for (let y = this.lines.length - 1; y >= 0; y--) {\n      // Check whether this line is a problem\n      let nextLine = this.lines.get(y) as BufferLine;\n      if (!nextLine || !nextLine.isWrapped && nextLine.getTrimmedLength() <= newCols) {\n        continue;\n      }\n\n      // Gather wrapped lines and adjust y to be the starting line\n      const wrappedLines: BufferLine[] = [nextLine];\n      while (nextLine.isWrapped && y > 0) {\n        nextLine = this.lines.get(--y) as BufferLine;\n        wrappedLines.unshift(nextLine);\n      }\n\n      // If these lines contain the cursor don't touch them, the program will handle fixing up\n      // wrapped lines with the cursor\n      const absoluteY = this.ybase + this.y;\n      if (absoluteY >= y && absoluteY < y + wrappedLines.length) {\n        continue;\n      }\n\n      const lastLineLength = wrappedLines[wrappedLines.length - 1].getTrimmedLength();\n      const destLineLengths = reflowSmallerGetNewLineLengths(wrappedLines, this._cols, newCols);\n      const linesToAdd = destLineLengths.length - wrappedLines.length;\n      let trimmedLines: number;\n      if (this.ybase === 0 && this.y !== this.lines.length - 1) {\n        // If the top section of the buffer is not yet filled\n        trimmedLines = Math.max(0, this.y - this.lines.maxLength + linesToAdd);\n      } else {\n        trimmedLines = Math.max(0, this.lines.length - this.lines.maxLength + linesToAdd);\n      }\n\n      // Add the new lines\n      const newLines: BufferLine[] = [];\n      for (let i = 0; i < linesToAdd; i++) {\n        const newLine = this.getBlankLine(DEFAULT_ATTR_DATA, true) as BufferLine;\n        newLines.push(newLine);\n      }\n      if (newLines.length > 0) {\n        toInsert.push({\n          // countToInsert here gets the actual index, taking into account other inserted items.\n          // using this we can iterate through the list forwards\n          start: y + wrappedLines.length + countToInsert,\n          newLines\n        });\n        countToInsert += newLines.length;\n      }\n      wrappedLines.push(...newLines);\n\n      // Copy buffer data to new locations, this needs to happen backwards to do in-place\n      let destLineIndex = destLineLengths.length - 1; // Math.floor(cellsNeeded / newCols);\n      let destCol = destLineLengths[destLineIndex]; // cellsNeeded % newCols;\n      if (destCol === 0) {\n        destLineIndex--;\n        destCol = destLineLengths[destLineIndex];\n      }\n      let srcLineIndex = wrappedLines.length - linesToAdd - 1;\n      let srcCol = lastLineLength;\n      while (srcLineIndex >= 0) {\n        const cellsToCopy = Math.min(srcCol, destCol);\n        wrappedLines[destLineIndex].copyCellsFrom(wrappedLines[srcLineIndex], srcCol - cellsToCopy, destCol - cellsToCopy, cellsToCopy, true);\n        destCol -= cellsToCopy;\n        if (destCol === 0) {\n          destLineIndex--;\n          destCol = destLineLengths[destLineIndex];\n        }\n        srcCol -= cellsToCopy;\n        if (srcCol === 0) {\n          srcLineIndex--;\n          const wrappedLinesIndex = Math.max(srcLineIndex, 0);\n          srcCol = getWrappedLineTrimmedLength(wrappedLines, wrappedLinesIndex, this._cols);\n        }\n      }\n\n      // Null out the end of the line ends if a wide character wrapped to the following line\n      for (let i = 0; i < wrappedLines.length; i++) {\n        if (destLineLengths[i] < newCols) {\n          wrappedLines[i].setCell(destLineLengths[i], nullCell);\n        }\n      }\n\n      // Adjust viewport as needed\n      let viewportAdjustments = linesToAdd - trimmedLines;\n      while (viewportAdjustments-- > 0) {\n        if (this.ybase === 0) {\n          if (this.y < newRows - 1) {\n            this.y++;\n            this.lines.pop();\n          } else {\n            this.ybase++;\n            this.ydisp++;\n          }\n        } else {\n          // Ensure ybase does not exceed its maximum value\n          if (this.ybase < Math.min(this.lines.maxLength, this.lines.length + countToInsert) - newRows) {\n            if (this.ybase === this.ydisp) {\n              this.ydisp++;\n            }\n            this.ybase++;\n          }\n        }\n      }\n      this.savedY = Math.min(this.savedY + linesToAdd, this.ybase + newRows - 1);\n    }\n\n    // Rearrange lines in the buffer if there are any insertions, this is done at the end rather\n    // than earlier so that it's a single O(n) pass through the buffer, instead of O(n^2) from many\n    // costly calls to CircularList.splice.\n    if (toInsert.length > 0) {\n      // Record buffer insert events and then play them back backwards so that the indexes are\n      // correct\n      const insertEvents: IInsertEvent[] = [];\n\n      // Record original lines so they don't get overridden when we rearrange the list\n      const originalLines: BufferLine[] = [];\n      for (let i = 0; i < this.lines.length; i++) {\n        originalLines.push(this.lines.get(i) as BufferLine);\n      }\n      const originalLinesLength = this.lines.length;\n\n      let originalLineIndex = originalLinesLength - 1;\n      let nextToInsertIndex = 0;\n      let nextToInsert = toInsert[nextToInsertIndex];\n      this.lines.length = Math.min(this.lines.maxLength, this.lines.length + countToInsert);\n      let countInsertedSoFar = 0;\n      for (let i = Math.min(this.lines.maxLength - 1, originalLinesLength + countToInsert - 1); i >= 0; i--) {\n        if (nextToInsert && nextToInsert.start > originalLineIndex + countInsertedSoFar) {\n          // Insert extra lines here, adjusting i as needed\n          for (let nextI = nextToInsert.newLines.length - 1; nextI >= 0; nextI--) {\n            this.lines.set(i--, nextToInsert.newLines[nextI]);\n          }\n          i++;\n\n          // Create insert events for later\n          insertEvents.push({\n            index: originalLineIndex + 1,\n            amount: nextToInsert.newLines.length\n          });\n\n          countInsertedSoFar += nextToInsert.newLines.length;\n          nextToInsert = toInsert[++nextToInsertIndex];\n        } else {\n          this.lines.set(i, originalLines[originalLineIndex--]);\n        }\n      }\n\n      // Update markers\n      let insertCountEmitted = 0;\n      for (let i = insertEvents.length - 1; i >= 0; i--) {\n        insertEvents[i].index += insertCountEmitted;\n        this.lines.onInsertEmitter.fire(insertEvents[i]);\n        insertCountEmitted += insertEvents[i].amount;\n      }\n      const amountToTrim = Math.max(0, originalLinesLength + countToInsert - this.lines.maxLength);\n      if (amountToTrim > 0) {\n        this.lines.onTrimEmitter.fire(amountToTrim);\n      }\n    }\n  }\n\n  // private _reflowSmallerGetLinesNeeded()\n\n  /**\n   * Translates a string index back to a BufferIndex.\n   * To get the correct buffer position the string must start at `startCol` 0\n   * (default in translateBufferLineToString).\n   * The method also works on wrapped line strings given rows were not trimmed.\n   * The method operates on the CharData string length, there are no\n   * additional content or boundary checks. Therefore the string and the buffer\n   * should not be altered in between.\n   * TODO: respect trim flag after fixing #1685\n   * @param lineIndex line index the string was retrieved from\n   * @param stringIndex index within the string\n   * @param startCol column offset the string was retrieved from\n   */\n  public stringIndexToBufferIndex(lineIndex: number, stringIndex: number, trimRight: boolean = false): BufferIndex {\n    while (stringIndex) {\n      const line = this.lines.get(lineIndex);\n      if (!line) {\n        return [-1, -1];\n      }\n      const length = (trimRight) ? line.getTrimmedLength() : line.length;\n      for (let i = 0; i < length; ++i) {\n        if (line.get(i)[CHAR_DATA_WIDTH_INDEX]) {\n          // empty cells report a string length of 0, but get replaced\n          // with a whitespace in translateToString, thus replace with 1\n          stringIndex -= line.get(i)[CHAR_DATA_CHAR_INDEX].length || 1;\n        }\n        if (stringIndex < 0) {\n          return [lineIndex, i];\n        }\n      }\n      lineIndex++;\n    }\n    return [lineIndex, 0];\n  }\n\n  /**\n   * Translates a buffer line to a string, with optional start and end columns.\n   * Wide characters will count as two columns in the resulting string. This\n   * function is useful for getting the actual text underneath the raw selection\n   * position.\n   * @param line The line being translated.\n   * @param trimRight Whether to trim whitespace to the right.\n   * @param startCol The column to start at.\n   * @param endCol The column to end at.\n   */\n  public translateBufferLineToString(lineIndex: number, trimRight: boolean, startCol: number = 0, endCol?: number): string {\n    const line = this.lines.get(lineIndex);\n    if (!line) {\n      return '';\n    }\n    return line.translateToString(trimRight, startCol, endCol);\n  }\n\n  public getWrappedRangeForLine(y: number): { first: number, last: number } {\n    let first = y;\n    let last = y;\n    // Scan upwards for wrapped lines\n    while (first > 0 && this.lines.get(first)!.isWrapped) {\n      first--;\n    }\n    // Scan downwards for wrapped lines\n    while (last + 1 < this.lines.length && this.lines.get(last + 1)!.isWrapped) {\n      last++;\n    }\n    return { first, last };\n  }\n\n  /**\n   * Setup the tab stops.\n   * @param i The index to start setting up tab stops from.\n   */\n  public setupTabStops(i?: number): void {\n    if (i !== null && i !== undefined) {\n      if (!this.tabs[i]) {\n        i = this.prevStop(i);\n      }\n    } else {\n      this.tabs = {};\n      i = 0;\n    }\n\n    for (; i < this._cols; i += this._optionsService.options.tabStopWidth) {\n      this.tabs[i] = true;\n    }\n  }\n\n  /**\n   * Move the cursor to the previous tab stop from the given position (default is current).\n   * @param x The position to move the cursor to the previous tab stop.\n   */\n  public prevStop(x?: number): number {\n    if (x === null || x === undefined) {\n      x = this.x;\n    }\n    while (!this.tabs[--x] && x > 0);\n    return x >= this._cols ? this._cols - 1 : x < 0 ? 0 : x;\n  }\n\n  /**\n   * Move the cursor one tab stop forward from the given position (default is current).\n   * @param x The position to move the cursor one tab stop forward.\n   */\n  public nextStop(x?: number): number {\n    if (x === null || x === undefined) {\n      x = this.x;\n    }\n    while (!this.tabs[++x] && x < this._cols);\n    return x >= this._cols ? this._cols - 1 : x < 0 ? 0 : x;\n  }\n\n  public addMarker(y: number): Marker {\n    const marker = new Marker(y);\n    this.markers.push(marker);\n    marker.register(this.lines.onTrim(amount => {\n      marker.line -= amount;\n      // The marker should be disposed when the line is trimmed from the buffer\n      if (marker.line < 0) {\n        marker.dispose();\n      }\n    }));\n    marker.register(this.lines.onInsert(event => {\n      if (marker.line >= event.index) {\n        marker.line += event.amount;\n      }\n    }));\n    marker.register(this.lines.onDelete(event => {\n      // Delete the marker if it's within the range\n      if (marker.line >= event.index && marker.line < event.index + event.amount) {\n        marker.dispose();\n      }\n\n      // Shift the marker if it's after the deleted range\n      if (marker.line > event.index) {\n        marker.line -= event.amount;\n      }\n    }));\n    marker.register(marker.onDispose(() => this._removeMarker(marker)));\n    return marker;\n  }\n\n  private _removeMarker(marker: Marker): void {\n    this.markers.splice(this.markers.indexOf(marker), 1);\n  }\n\n  public iterator(trimRight: boolean, startIndex?: number, endIndex?: number, startOverscan?: number, endOverscan?: number): IBufferStringIterator {\n    return new BufferStringIterator(this, trimRight, startIndex, endIndex, startOverscan, endOverscan);\n  }\n}\n\n/**\n * Iterator to get unwrapped content strings from the buffer.\n * The iterator returns at least the string data between the borders\n * `startIndex` and `endIndex` (exclusive) and will expand the lines\n * by `startOverscan` to the top and by `endOverscan` to the bottom,\n * if no new line was found in between.\n * It will never read/return string data beyond `startIndex - startOverscan`\n * or `endIndex + endOverscan`. Therefore the first and last line might be truncated.\n * It is possible to always get the full string for the first and last line as well\n * by setting the overscan values to the actual buffer length. This not recommended\n * since it might return the whole buffer within a single string in a worst case scenario.\n */\nexport class BufferStringIterator implements IBufferStringIterator {\n  private _current: number;\n\n  constructor (\n    private _buffer: IBuffer,\n    private _trimRight: boolean,\n    private _startIndex: number = 0,\n    private _endIndex: number = _buffer.lines.length,\n    private _startOverscan: number = 0,\n    private _endOverscan: number = 0\n  ) {\n    if (this._startIndex < 0) {\n      this._startIndex = 0;\n    }\n    if (this._endIndex > this._buffer.lines.length) {\n      this._endIndex = this._buffer.lines.length;\n    }\n    this._current = this._startIndex;\n  }\n\n  public hasNext(): boolean {\n    return this._current < this._endIndex;\n  }\n\n  public next(): IBufferStringIteratorResult {\n    const range = this._buffer.getWrappedRangeForLine(this._current);\n    // limit search window to overscan value at both borders\n    if (range.first < this._startIndex - this._startOverscan) {\n      range.first = this._startIndex - this._startOverscan;\n    }\n    if (range.last > this._endIndex + this._endOverscan) {\n      range.last = this._endIndex + this._endOverscan;\n    }\n    // limit to current buffer length\n    range.first = Math.max(range.first, 0);\n    range.last = Math.min(range.last, this._buffer.lines.length);\n    let result = '';\n    for (let i = range.first; i <= range.last; ++i) {\n      result += this._buffer.translateBufferLineToString(i, this._trimRight);\n    }\n    this._current = range.last + 1;\n    return {range: range, content: result};\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICircularList } from 'common/Types';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\n\nexport interface IInsertEvent {\n  index: number;\n  amount: number;\n}\n\nexport interface IDeleteEvent {\n  index: number;\n  amount: number;\n}\n\n/**\n * Represents a circular list; a list with a maximum size that wraps around when push is called,\n * overriding values at the start of the list.\n */\nexport class CircularList<T> implements ICircularList<T> {\n  protected _array: (T | undefined)[];\n  private _startIndex: number;\n  private _length: number;\n\n  public onDeleteEmitter = new EventEmitter<IDeleteEvent>();\n  public get onDelete(): IEvent<IDeleteEvent> { return this.onDeleteEmitter.event; }\n  public onInsertEmitter = new EventEmitter<IInsertEvent>();\n  public get onInsert(): IEvent<IInsertEvent> { return this.onInsertEmitter.event; }\n  public onTrimEmitter = new EventEmitter<number>();\n  public get onTrim(): IEvent<number> { return this.onTrimEmitter.event; }\n\n  constructor(\n    private _maxLength: number\n  ) {\n    this._array = new Array<T>(this._maxLength);\n    this._startIndex = 0;\n    this._length = 0;\n  }\n\n  public get maxLength(): number {\n    return this._maxLength;\n  }\n\n  public set maxLength(newMaxLength: number) {\n    // There was no change in maxLength, return early.\n    if (this._maxLength === newMaxLength) {\n      return;\n    }\n\n    // Reconstruct array, starting at index 0. Only transfer values from the\n    // indexes 0 to length.\n    const newArray = new Array<T | undefined>(newMaxLength);\n    for (let i = 0; i < Math.min(newMaxLength, this.length); i++) {\n      newArray[i] = this._array[this._getCyclicIndex(i)];\n    }\n    this._array = newArray;\n    this._maxLength = newMaxLength;\n    this._startIndex = 0;\n  }\n\n  public get length(): number {\n    return this._length;\n  }\n\n  public set length(newLength: number) {\n    if (newLength > this._length) {\n      for (let i = this._length; i < newLength; i++) {\n        this._array[i] = undefined;\n      }\n    }\n    this._length = newLength;\n  }\n\n  /**\n   * Gets the value at an index.\n   *\n   * Note that for performance reasons there is no bounds checking here, the index reference is\n   * circular so this should always return a value and never throw.\n   * @param index The index of the value to get.\n   * @return The value corresponding to the index.\n   */\n  public get(index: number): T | undefined {\n    return this._array[this._getCyclicIndex(index)];\n  }\n\n  /**\n   * Sets the value at an index.\n   *\n   * Note that for performance reasons there is no bounds checking here, the index reference is\n   * circular so this should always return a value and never throw.\n   * @param index The index to set.\n   * @param value The value to set.\n   */\n  public set(index: number, value: T | undefined): void {\n    this._array[this._getCyclicIndex(index)] = value;\n  }\n\n  /**\n   * Pushes a new value onto the list, wrapping around to the start of the array, overriding index 0\n   * if the maximum length is reached.\n   * @param value The value to push onto the list.\n   */\n  public push(value: T): void {\n    this._array[this._getCyclicIndex(this._length)] = value;\n    if (this._length === this._maxLength) {\n      this._startIndex = ++this._startIndex % this._maxLength;\n      this.onTrimEmitter.fire(1);\n    } else {\n      this._length++;\n    }\n  }\n\n  /**\n   * Advance ringbuffer index and return current element for recycling.\n   * Note: The buffer must be full for this method to work.\n   * @throws When the buffer is not full.\n   */\n  public recycle(): T {\n    if (this._length !== this._maxLength) {\n      throw new Error('Can only recycle when the buffer is full');\n    }\n    this._startIndex = ++this._startIndex % this._maxLength;\n    this.onTrimEmitter.fire(1);\n    return this._array[this._getCyclicIndex(this._length - 1)]!;\n  }\n\n  /**\n   * Ringbuffer is at max length.\n   */\n  public get isFull(): boolean {\n    return this._length === this._maxLength;\n  }\n\n  /**\n   * Removes and returns the last value on the list.\n   * @return The popped value.\n   */\n  public pop(): T | undefined {\n    return this._array[this._getCyclicIndex(this._length-- - 1)];\n  }\n\n  /**\n   * Deletes and/or inserts items at a particular index (in that order). Unlike\n   * Array.prototype.splice, this operation does not return the deleted items as a new array in\n   * order to save creating a new array. Note that this operation may shift all values in the list\n   * in the worst case.\n   * @param start The index to delete and/or insert.\n   * @param deleteCount The number of elements to delete.\n   * @param items The items to insert.\n   */\n  public splice(start: number, deleteCount: number, ...items: T[]): void {\n    // Delete items\n    if (deleteCount) {\n      for (let i = start; i < this._length - deleteCount; i++) {\n        this._array[this._getCyclicIndex(i)] = this._array[this._getCyclicIndex(i + deleteCount)];\n      }\n      this._length -= deleteCount;\n    }\n\n    // Add items\n    for (let i = this._length - 1; i >= start; i--) {\n      this._array[this._getCyclicIndex(i + items.length)] = this._array[this._getCyclicIndex(i)];\n    }\n    for (let i = 0; i < items.length; i++) {\n      this._array[this._getCyclicIndex(start + i)] = items[i];\n    }\n\n    // Adjust length as needed\n    if (this._length + items.length > this._maxLength) {\n      const countToTrim = (this._length + items.length) - this._maxLength;\n      this._startIndex += countToTrim;\n      this._length = this._maxLength;\n      this.onTrimEmitter.fire(countToTrim);\n    } else {\n      this._length += items.length;\n    }\n  }\n\n  /**\n   * Trims a number of items from the start of the list.\n   * @param count The number of items to remove.\n   */\n  public trimStart(count: number): void {\n    if (count > this._length) {\n      count = this._length;\n    }\n    this._startIndex += count;\n    this._length -= count;\n    this.onTrimEmitter.fire(count);\n  }\n\n  public shiftElements(start: number, count: number, offset: number): void {\n    if (count <= 0) {\n      return;\n    }\n    if (start < 0 || start >= this._length) {\n      throw new Error('start argument out of range');\n    }\n    if (start + offset < 0) {\n      throw new Error('Cannot shift elements in list beyond index 0');\n    }\n\n    if (offset > 0) {\n      for (let i = count - 1; i >= 0; i--) {\n        this.set(start + i + offset, this.get(start + i));\n      }\n      const expandListBy = (start + count + offset) - this._length;\n      if (expandListBy > 0) {\n        this._length += expandListBy;\n        while (this._length > this._maxLength) {\n          this._length--;\n          this._startIndex++;\n          this.onTrimEmitter.fire(1);\n        }\n      }\n    } else {\n      for (let i = 0; i < count; i++) {\n        this.set(start + i + offset, this.get(start + i));\n      }\n    }\n  }\n\n  /**\n   * Gets the cyclic index for the specified regular index. The cyclic index can then be used on the\n   * backing array to get the element associated with the regular index.\n   * @param index The regular index.\n   * @returns The cyclic index.\n   */\n  private _getCyclicIndex(index: number): number {\n    return (this._startIndex + index) % this._maxLength;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { BufferLine } from 'common/buffer/BufferLine';\nimport { CircularList } from 'common/CircularList';\nimport { IBufferLine, ICellData } from 'common/Types';\n\nexport interface INewLayoutResult {\n  layout: number[];\n  countRemoved: number;\n}\n\n/**\n * Evaluates and returns indexes to be removed after a reflow larger occurs. Lines will be removed\n * when a wrapped line unwraps.\n * @param lines The buffer lines.\n * @param newCols The columns after resize.\n */\nexport function reflowLargerGetLinesToRemove(lines: CircularList<IBufferLine>, oldCols: number, newCols: number, bufferAbsoluteY: number, nullCell: ICellData): number[] {\n  // Gather all BufferLines that need to be removed from the Buffer here so that they can be\n  // batched up and only committed once\n  const toRemove: number[] = [];\n\n  for (let y = 0; y < lines.length - 1; y++) {\n    // Check if this row is wrapped\n    let i = y;\n    let nextLine = lines.get(++i) as BufferLine;\n    if (!nextLine.isWrapped) {\n      continue;\n    }\n\n    // Check how many lines it's wrapped for\n    const wrappedLines: BufferLine[] = [lines.get(y) as BufferLine];\n    while (i < lines.length && nextLine.isWrapped) {\n      wrappedLines.push(nextLine);\n      nextLine = lines.get(++i) as BufferLine;\n    }\n\n    // If these lines contain the cursor don't touch them, the program will handle fixing up wrapped\n    // lines with the cursor\n    if (bufferAbsoluteY >= y && bufferAbsoluteY < i) {\n      y += wrappedLines.length - 1;\n      continue;\n    }\n\n    // Copy buffer data to new locations\n    let destLineIndex = 0;\n    let destCol = getWrappedLineTrimmedLength(wrappedLines, destLineIndex, oldCols);\n    let srcLineIndex = 1;\n    let srcCol = 0;\n    while (srcLineIndex < wrappedLines.length) {\n      const srcTrimmedTineLength = getWrappedLineTrimmedLength(wrappedLines, srcLineIndex, oldCols);\n      const srcRemainingCells = srcTrimmedTineLength - srcCol;\n      const destRemainingCells = newCols - destCol;\n      const cellsToCopy = Math.min(srcRemainingCells, destRemainingCells);\n\n      wrappedLines[destLineIndex].copyCellsFrom(wrappedLines[srcLineIndex], srcCol, destCol, cellsToCopy, false);\n\n      destCol += cellsToCopy;\n      if (destCol === newCols) {\n        destLineIndex++;\n        destCol = 0;\n      }\n      srcCol += cellsToCopy;\n      if (srcCol === srcTrimmedTineLength) {\n        srcLineIndex++;\n        srcCol = 0;\n      }\n\n      // Make sure the last cell isn't wide, if it is copy it to the current dest\n      if (destCol === 0 && destLineIndex !== 0) {\n        if (wrappedLines[destLineIndex - 1].getWidth(newCols - 1) === 2) {\n          wrappedLines[destLineIndex].copyCellsFrom(wrappedLines[destLineIndex - 1], newCols - 1, destCol++, 1, false);\n          // Null out the end of the last row\n          wrappedLines[destLineIndex - 1].setCell(newCols - 1, nullCell);\n        }\n      }\n    }\n\n    // Clear out remaining cells or fragments could remain;\n    wrappedLines[destLineIndex].replaceCells(destCol, newCols, nullCell);\n\n    // Work backwards and remove any rows at the end that only contain null cells\n    let countToRemove = 0;\n    for (let i = wrappedLines.length - 1; i > 0; i--) {\n      if (i > destLineIndex || wrappedLines[i].getTrimmedLength() === 0) {\n        countToRemove++;\n      } else {\n        break;\n      }\n    }\n\n    if (countToRemove > 0) {\n      toRemove.push(y + wrappedLines.length - countToRemove); // index\n      toRemove.push(countToRemove);\n    }\n\n    y += wrappedLines.length - 1;\n  }\n  return toRemove;\n}\n\n/**\n * Creates and return the new layout for lines given an array of indexes to be removed.\n * @param lines The buffer lines.\n * @param toRemove The indexes to remove.\n */\nexport function reflowLargerCreateNewLayout(lines: CircularList<IBufferLine>, toRemove: number[]): INewLayoutResult {\n  const layout: number[] = [];\n  // First iterate through the list and get the actual indexes to use for rows\n  let nextToRemoveIndex = 0;\n  let nextToRemoveStart = toRemove[nextToRemoveIndex];\n  let countRemovedSoFar = 0;\n  for (let i = 0; i < lines.length; i++) {\n    if (nextToRemoveStart === i) {\n      const countToRemove = toRemove[++nextToRemoveIndex];\n\n      // Tell markers that there was a deletion\n      lines.onDeleteEmitter.fire({\n        index: i - countRemovedSoFar,\n        amount: countToRemove\n      });\n\n      i += countToRemove - 1;\n      countRemovedSoFar += countToRemove;\n      nextToRemoveStart = toRemove[++nextToRemoveIndex];\n    } else {\n      layout.push(i);\n    }\n  }\n  return {\n    layout,\n    countRemoved: countRemovedSoFar\n  };\n}\n\n/**\n * Applies a new layout to the buffer. This essentially does the same as many splice calls but it's\n * done all at once in a single iteration through the list since splice is very expensive.\n * @param lines The buffer lines.\n * @param newLayout The new layout to apply.\n */\nexport function reflowLargerApplyNewLayout(lines: CircularList<IBufferLine>, newLayout: number[]): void {\n  // Record original lines so they don't get overridden when we rearrange the list\n  const newLayoutLines: BufferLine[] = [];\n  for (let i = 0; i < newLayout.length; i++) {\n    newLayoutLines.push(lines.get(newLayout[i]) as BufferLine);\n  }\n\n  // Rearrange the list\n  for (let i = 0; i < newLayoutLines.length; i++) {\n    lines.set(i, newLayoutLines[i]);\n  }\n  lines.length = newLayout.length;\n}\n\n/**\n * Gets the new line lengths for a given wrapped line. The purpose of this function it to pre-\n * compute the wrapping points since wide characters may need to be wrapped onto the following line.\n * This function will return an array of numbers of where each line wraps to, the resulting array\n * will only contain the values `newCols` (when the line does not end with a wide character) and\n * `newCols - 1` (when the line does end with a wide character), except for the last value which\n * will contain the remaining items to fill the line.\n *\n * Calling this with a `newCols` value of `1` will lock up.\n *\n * @param wrappedLines The wrapped lines to evaluate.\n * @param oldCols The columns before resize.\n * @param newCols The columns after resize.\n */\nexport function reflowSmallerGetNewLineLengths(wrappedLines: BufferLine[], oldCols: number, newCols: number): number[] {\n  const newLineLengths: number[] = [];\n  const cellsNeeded = wrappedLines.map((l, i) => getWrappedLineTrimmedLength(wrappedLines, i, oldCols)).reduce((p, c) => p + c);\n\n  // Use srcCol and srcLine to find the new wrapping point, use that to get the cellsAvailable and\n  // linesNeeded\n  let srcCol = 0;\n  let srcLine = 0;\n  let cellsAvailable = 0;\n  while (cellsAvailable < cellsNeeded) {\n    if (cellsNeeded - cellsAvailable < newCols) {\n      // Add the final line and exit the loop\n      newLineLengths.push(cellsNeeded - cellsAvailable);\n      break;\n    }\n    srcCol += newCols;\n    const oldTrimmedLength = getWrappedLineTrimmedLength(wrappedLines, srcLine, oldCols);\n    if (srcCol > oldTrimmedLength) {\n      srcCol -= oldTrimmedLength;\n      srcLine++;\n    }\n    const endsWithWide = wrappedLines[srcLine].getWidth(srcCol - 1) === 2;\n    if (endsWithWide) {\n      srcCol--;\n    }\n    const lineLength = endsWithWide ? newCols - 1 : newCols;\n    newLineLengths.push(lineLength);\n    cellsAvailable += lineLength;\n  }\n\n  return newLineLengths;\n}\n\nexport function getWrappedLineTrimmedLength(lines: BufferLine[], i: number, cols: number): number {\n  // If this is the last row in the wrapped line, get the actual trimmed length\n  if (i === lines.length - 1) {\n    return lines[i].getTrimmedLength();\n  }\n  // Detect whether the following line starts with a wide character and the end of the current line\n  // is null, if so then we can be pretty sure the null character should be excluded from the line\n  // length]\n  const endsInNull = !(lines[i].hasContent(cols - 1)) && lines[i].getWidth(cols - 1) === 1;\n  const followingLineStartsWithWide = lines[i + 1].getWidth(0) === 2;\n  if (endsInNull && followingLineStartsWithWide) {\n    return cols - 1;\n  }\n  return cols;\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { IMarker } from 'common/Types';\n\nexport class Marker extends Disposable implements IMarker {\n  private static _nextId = 1;\n\n  private _id: number = Marker._nextId++;\n  public isDisposed: boolean = false;\n\n  public get id(): number { return this._id; }\n\n  private _onDispose = new EventEmitter<void>();\n  public get onDispose(): IEvent<void> { return this._onDispose.event; }\n\n  constructor(\n    public line: number\n  ) {\n    super();\n  }\n\n  public dispose(): void {\n    if (this.isDisposed) {\n      return;\n    }\n    this.isDisposed = true;\n    // Emit before super.dispose such that dispose listeners get a change to react\n    this._onDispose.fire();\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharSizeService, IRenderService, IMouseService } from './Services';\nimport { getCoords, getRawByteCoords } from 'browser/input/Mouse';\n\nexport class MouseService implements IMouseService {\n  serviceBrand: any;\n\n  constructor(\n    @IRenderService private readonly _renderService: IRenderService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService\n  ) {\n  }\n\n  public getCoords(event: {clientX: number, clientY: number}, element: HTMLElement, colCount: number, rowCount: number, isSelection?: boolean): [number, number] | undefined {\n    return getCoords(\n      event,\n      element,\n      colCount,\n      rowCount,\n      this._charSizeService.hasValidSize,\n      this._renderService.dimensions.actualCellWidth,\n      this._renderService.dimensions.actualCellHeight,\n      isSelection\n    );\n  }\n\n  public getRawByteCoords(event: MouseEvent, element: HTMLElement, colCount: number, rowCount: number): { x: number, y: number } | undefined {\n    const coords = this.getCoords(event, element, colCount, rowCount);\n    return getRawByteCoords(coords);\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICoreService, ILogService, IOptionsService, IBufferService } from 'common/services/Services';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { IDecPrivateModes } from 'common/Types';\nimport { clone } from 'common/Clone';\n\nconst DEFAULT_DEC_PRIVATE_MODES: IDecPrivateModes = Object.freeze({\n  applicationCursorKeys: false\n});\n\nexport class CoreService implements ICoreService {\n  serviceBrand: any;\n\n  public decPrivateModes: IDecPrivateModes;\n\n  private _onData = new EventEmitter<string>();\n  public get onData(): IEvent<string> { return this._onData.event; }\n  private _onUserInput = new EventEmitter<void>();\n  public get onUserInput(): IEvent<void> { return this._onUserInput.event; }\n\n  constructor(\n    // TODO: Move this into a service\n    private readonly _scrollToBottom: () => void,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ILogService private readonly _logService: ILogService,\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    this.decPrivateModes = clone(DEFAULT_DEC_PRIVATE_MODES);\n  }\n\n  public reset(): void {\n    this.decPrivateModes = clone(DEFAULT_DEC_PRIVATE_MODES);\n  }\n\n  public triggerDataEvent(data: string, wasUserInput: boolean = false): void {\n    // Prevents all events to pty process if stdin is disabled\n    if (this._optionsService.options.disableStdin) {\n      return;\n    }\n\n    // Input is being sent to the terminal, the terminal should focus the prompt.\n    const buffer = this._bufferService.buffer;\n    if (buffer.ybase !== buffer.ydisp) {\n      this._scrollToBottom();\n    }\n\n    // Fire onUserInput so listeners can react as well (eg. clear selection)\n    if (wasUserInput) {\n      this._onUserInput.fire();\n    }\n\n    // Fire onData API\n    this._logService.debug('sending data', data);\n    this._onData.fire(data);\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ILogService, IOptionsService } from 'common/services/Services';\n\ninterface IConsole {\n  log(message?: any, ...optionalParams: any[]): void;\n  error(message?: any, ...optionalParams: any[]): void;\n  info(message?: any, ...optionalParams: any[]): void;\n  trace(message?: any, ...optionalParams: any[]): void;\n  warn(message?: any, ...optionalParams: any[]): void;\n}\n\n// console is available on both node.js and browser contexts but the common\n// module doesn't depend on them so we need to explicitly declare it.\ndeclare const console: IConsole;\n\n\nexport enum LogLevel {\n  DEBUG = 0,\n  INFO = 1,\n  WARN = 2,\n  ERROR = 3,\n  OFF = 4\n}\n\nconst optionsKeyToLogLevel: { [key: string]: LogLevel } = {\n  debug: LogLevel.DEBUG,\n  info: LogLevel.INFO,\n  warn: LogLevel.WARN,\n  error: LogLevel.ERROR,\n  off: LogLevel.OFF\n};\n\nconst LOG_PREFIX = 'xterm.js: ';\n\nexport class LogService implements ILogService {\n  serviceBrand: any;\n\n  private _logLevel!: LogLevel;\n\n  constructor(\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    this._updateLogLevel();\n    this._optionsService.onOptionChange(key => {\n      if (key === 'logLevel') {\n        this._updateLogLevel();\n      }\n    });\n  }\n\n  private _updateLogLevel(): void {\n    this._logLevel = optionsKeyToLogLevel[this._optionsService.options.logLevel];\n  }\n\n  debug(message: string, ...optionalParams: any[]): void {\n    if (this._logLevel <= LogLevel.DEBUG) {\n      console.log.call(console, LOG_PREFIX + message, ...optionalParams);\n    }\n  }\n\n  info(message: string, ...optionalParams: any[]): void {\n    if (this._logLevel <= LogLevel.INFO) {\n      console.info.call(console, LOG_PREFIX + message, ...optionalParams);\n    }\n  }\n\n  warn(message: string, ...optionalParams: any[]): void {\n    if (this._logLevel <= LogLevel.WARN) {\n      console.warn.call(console, LOG_PREFIX + message, ...optionalParams);\n    }\n  }\n\n  error(message: string, ...optionalParams: any[]): void {\n    if (this._logLevel <= LogLevel.ERROR) {\n      console.error.call(console, LOG_PREFIX + message, ...optionalParams);\n    }\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferService, IDirtyRowService } from 'common/services/Services';\n\nexport class DirtyRowService implements IDirtyRowService {\n  serviceBrand: any;\n\n  private _start!: number;\n  private _end!: number;\n\n  public get start(): number { return this._start; }\n  public get end(): number { return this._end; }\n\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService\n  ) {\n    this.clearRange();\n  }\n\n  public clearRange(): void {\n    this._start = this._bufferService.buffer.y;\n    this._end = this._bufferService.buffer.y;\n  }\n\n  public markDirty(y: number): void {\n    if (y < this._start) {\n      this._start = y;\n    } else if (y > this._end) {\n      this._end = y;\n    }\n  }\n\n  public markRangeDirty(y1: number, y2: number): void {\n    if (y1 > y2) {\n      const temp = y1;\n      y1 = y2;\n      y2 = temp;\n    }\n    if (y1 < this._start) {\n      this._start = y1;\n    }\n    if (y2 > this._end) {\n      this._end = y2;\n    }\n  }\n\n  public markAllDirty(): void {\n    this.markRangeDirty(0, this._bufferService.rows - 1);\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n *\n * This was heavily inspired from microsoft/vscode's dependency injection system (MIT).\n */\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IInstantiationService, IServiceIdentifier } from 'common/services/Services';\nimport { getServiceDependencies } from 'common/services/ServiceRegistry';\n\nexport class ServiceCollection {\n\n  private _entries = new Map<IServiceIdentifier<any>, any>();\n\n  constructor(...entries: [IServiceIdentifier<any>, any][]) {\n    for (const [id, service] of entries) {\n      this.set(id, service);\n    }\n  }\n\n  set<T>(id: IServiceIdentifier<T>, instance: T): T {\n    const result = this._entries.get(id);\n    this._entries.set(id, instance);\n    return result;\n  }\n\n  forEach(callback: (id: IServiceIdentifier<any>, instance: any) => any): void {\n    this._entries.forEach((value, key) => callback(key, value));\n  }\n\n  has(id: IServiceIdentifier<any>): boolean {\n    return this._entries.has(id);\n  }\n\n  get<T>(id: IServiceIdentifier<T>): T {\n    return this._entries.get(id);\n  }\n}\n\nexport class InstantiationService implements IInstantiationService {\n  private readonly _services: ServiceCollection = new ServiceCollection();\n\n  constructor() {\n    this._services.set(IInstantiationService, this);\n  }\n\n  public setService<T>(id: IServiceIdentifier<T>, instance: T): void {\n    this._services.set(id, instance);\n  }\n\n  public createInstance<T>(ctor: any, ...args: any[]): any {\n    const serviceDependencies = getServiceDependencies(ctor).sort((a, b) => a.index - b.index);\n\n    const serviceArgs: any[] = [];\n    for (const dependency of serviceDependencies) {\n      const service = this._services.get(dependency.id);\n      if (!service) {\n        throw new Error(`[createInstance] ${ctor.name} depends on UNKNOWN service ${dependency.id}.`);\n      }\n      serviceArgs.push(service);\n    }\n\n    const firstServiceArgPos = serviceDependencies.length > 0 ? serviceDependencies[0].index : args.length;\n\n    // check for argument mismatches, adjust static args if needed\n    if (args.length !== firstServiceArgPos) {\n      throw new Error(`[createInstance] First service dependency of ${ctor.name} at position ${firstServiceArgPos + 1} conflicts with ${args.length} static arguments`);\n    }\n\n    // now create the instance\n    return <T>new ctor(...[...args, ...serviceArgs]);\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ITerminalAddon, IDisposable, Terminal } from 'xterm';\n\nexport interface ILoadedAddon {\n  instance: ITerminalAddon;\n  dispose: () => void;\n  isDisposed: boolean;\n}\n\nexport class AddonManager implements IDisposable {\n  protected _addons: ILoadedAddon[] = [];\n\n  constructor() {\n  }\n\n  public dispose(): void {\n    for (let i = this._addons.length - 1; i >= 0; i--) {\n      this._addons[i].instance.dispose();\n    }\n  }\n\n  public loadAddon(terminal: Terminal, instance: ITerminalAddon): void {\n    const loadedAddon: ILoadedAddon = {\n      instance,\n      dispose: instance.dispose,\n      isDisposed: false\n    };\n    this._addons.push(loadedAddon);\n    instance.dispose = () => this._wrappedAddonDispose(loadedAddon);\n    instance.activate(<any>terminal);\n  }\n\n  private _wrappedAddonDispose(loadedAddon: ILoadedAddon): void {\n    if (loadedAddon.isDisposed) {\n      // Do nothing if already disposed\n      return;\n    }\n    let index = -1;\n    for (let i = 0; i < this._addons.length; i++) {\n      if (this._addons[i] === loadedAddon) {\n        index = i;\n        break;\n      }\n    }\n    if (index === -1) {\n      throw new Error('Could not dispose an addon that has not been loaded');\n    }\n    loadedAddon.isDisposed = true;\n    loadedAddon.dispose.apply(loadedAddon.instance);\n    this._addons.splice(index, 1);\n  }\n}\n"],"sourceRoot":""}